{
  "version": 3,
  "sources": ["../src/constants.js", "../src/module.js", "../src/effect.js", "../src/options.js", "../src/pf2e/predicate.js", "../src/pf2e/helpers.js", "../src/scene.js", "../src/utils.js", "../src/apps/base-menu.js", "../src/apps/perception.js", "../src/geometry.js", "../src/lighting.js", "../src/token.js", "../src/actor.js", "../src/chat.js", "../src/pf2e/success.js", "../src/template.js", "../src/apps/validation.js", "../src/action.js", "../src/check.js", "../src/detection.js", "../src/combat.js", "../src/apps/icon-path-menu.js", "../src/settings.js", "../src/main.js"],
  "sourcesContent": ["export const COVER_UUID = 'Compendium.pf2e.other-effects.Item.I9lfZUiCwMiGogVi'\r\n\r\nexport const VISIBILITY_VALUES = {\r\n    [undefined]: 0,\r\n    observed: 0,\r\n    concealed: 1,\r\n    hidden: 2,\r\n    undetected: 3,\r\n    unnoticed: 4,\r\n}\r\n\r\nexport const VISIBILITIES = ['observed', 'concealed', 'hidden', 'undetected', 'unnoticed']\r\n\r\nexport const COVERS = ['none', 'lesser', 'standard', 'greater', 'greater-prone']\r\n\r\nexport const COVER_VALUES = {\r\n    [undefined]: 0,\r\n    none: 0,\r\n    lesser: 1,\r\n    standard: 2,\r\n    greater: 3,\r\n    'greater-prone': 4,\r\n}\r\n\r\nexport const defaultValues = {\r\n    cover: 'none',\r\n    visibility: 'observed',\r\n}\r\n\r\nexport const attackCheckRoll = ['attack-roll', 'spell-attack-roll']\r\n\r\nexport const validCheckRoll = [...attackCheckRoll, 'skill-check', 'perception-check']\r\n\r\nexport const skipConditional = {\r\n    cover: 'conditional:cover:skip',\r\n}\r\n\r\nexport const ICONS_PATHS = {\r\n    cover: 'modules/pf2e-perception/images/cover.webp',\r\n    concealed: 'systems/pf2e/icons/conditions/concealed.webp',\r\n    hidden: 'systems/pf2e/icons/conditions/hidden.webp',\r\n    undetected: 'systems/pf2e/icons/conditions/undetected.webp',\r\n    unnoticed: 'systems/pf2e/icons/conditions/unnoticed.webp',\r\n}\r\n", "export const MODULE_ID = 'pf2e-perception'\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function getFlag(doc, flag) {\r\n    return doc.getFlag(MODULE_ID, flag)\r\n}\r\n\r\nexport function setFlag(doc, flag, value) {\r\n    return doc.setFlag(MODULE_ID, flag, value)\r\n}\r\n\r\nexport function unsetFlag(doc, flag) {\r\n    return doc.unsetFlag(MODULE_ID, flag, true)\r\n}\r\n\r\nexport function getFlags(doc) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) ?? {}\r\n}\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function setSetting(setting, value) {\r\n    return game.settings.set(MODULE_ID, setting, value)\r\n}\r\n\r\nexport function hasPermission() {\r\n    return game.user.role >= getSetting('permission')\r\n}\r\n", "import { COVER_UUID, COVER_VALUES } from './constants.js'\r\nimport { MODULE_ID, localize } from './module.js'\r\n\r\nexport function createFlatFootedSource(visibility) {\r\n    const name = game.i18n.localize(`PF2E.condition.${visibility}.name`)\r\n    const condition = game.pf2e.ConditionManager.getCondition('flat-footed', { name })\r\n    return condition.toObject()\r\n}\r\n\r\nexport function createCoverSource(level) {\r\n    const bonus = COVER_VALUES[level] === 3 ? 4 : COVER_VALUES[level]\r\n\r\n    return {\r\n        _id: 'I9lfZUiCwMiGogVi',\r\n        img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n        name: localize('cover', level),\r\n        system: {\r\n            description: {\r\n                gm: '',\r\n                value: \"<p>When you're behind an obstacle that could block weapons, guard you against explosions, and make you harder to detect, you're behind cover. Standard cover gives you a +2 circumstance bonus to AC, to Reflex saves against area effects, and to Stealth checks to Hide, Sneak, or otherwise avoid detection. You can increase this to greater cover using the Take Cover basic action, increasing the circumstance bonus to +4. If cover is especially light, typically when it's provided by a creature, you have lesser cover, which grants a +1 circumstance bonus to AC. A creature with standard cover or greater cover can attempt to use Stealth to Hide, but lesser cover isn't sufficient.</p>\",\r\n            },\r\n            rules: [\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-bonus:${bonus}` },\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-level:${level}` },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: [{ and: ['self:condition:prone', 'item:ranged'] }, { not: 'self:cover-level:greater-prone' }] },\r\n                    ],\r\n                    selector: 'ac',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['area-effect', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'reflex',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: ['action:hide', 'action:sneak', 'avoid-detection'] },\r\n                        { not: 'self:cover-level:greater-prone' },\r\n                    ],\r\n                    selector: 'stealth',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['action:avoid-notice', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'initiative',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n            ],\r\n            slug: 'effect-cover',\r\n        },\r\n        type: 'effect',\r\n        flags: {\r\n            core: { sourceId: COVER_UUID },\r\n            [MODULE_ID]: {\r\n                level,\r\n                bonus,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nexport function findChoiceSetRule(item, flag = undefined) {\r\n    if (!item) return undefined\r\n    return item.system.rules.find(rule => rule.key === 'ChoiceSet' && (!flag || rule.flag === flag))\r\n}\r\n", "import { VISIBILITIES } from './constants.js'\r\n\r\nexport function optionsToObject(options, affects = 'origin') {\r\n    const obj = {}\r\n    options.forEach(o => {\r\n        const split = o.split(':')\r\n        if (split.at(1) !== 'pf2perception') return\r\n\r\n        const first = split.at(0) === 'self' ? affects : split.at(0)\r\n        const last = split.at(-1)\r\n        const path = [first, ...split.slice(2, -1)].join('.')\r\n\r\n        let value = getProperty(obj, path)\r\n        if (value) value.push(last)\r\n        else value = [last]\r\n\r\n        setProperty(obj, path, value)\r\n    })\r\n    return obj\r\n}\r\n\r\nexport function updateVisibilityFromOptions(visibility, options) {\r\n    if (!visibility || !options) return visibility\r\n\r\n    if (options.reduce) {\r\n        const reduced = ['all', visibility].some(x => options.reduce.includes(x))\r\n        if (reduced) {\r\n            const index = VISIBILITIES.indexOf(visibility)\r\n            visibility = VISIBILITIES[Math.max(0, index - 1)]\r\n        }\r\n    }\r\n\r\n    return visibility\r\n}\r\n", "import { isObject } from './helpers.js'\r\n\r\nexport class PredicatePF2e extends Array {\r\n    constructor(...statements) {\r\n        super(...(Array.isArray(statements[0]) ? statements[0] : statements))\r\n        this.isValid = PredicatePF2e.isValid(this)\r\n    }\r\n\r\n    /** Structurally validate the predicates */\r\n    static isValid(statements) {\r\n        return this.isArray(statements)\r\n    }\r\n\r\n    /** Is this an array of predicatation statements? */\r\n    static isArray(statements) {\r\n        return super.isArray(statements) && statements.every(s => StatementValidator.isStatement(s))\r\n    }\r\n\r\n    /** Test if the given predicate passes for the given list of options. */\r\n    static test(predicate = [], options) {\r\n        return predicate instanceof PredicatePF2e ? predicate.test(options) : new PredicatePF2e(...predicate).test(options)\r\n    }\r\n\r\n    /** Test this predicate against a domain of discourse */\r\n    test(options) {\r\n        if (this.length === 0) {\r\n            return true\r\n        } else if (!this.isValid) {\r\n            console.warn('PF2e System | The provided predicate set is malformed.')\r\n            return false\r\n        }\r\n\r\n        const domain = options instanceof Set ? options : new Set(options)\r\n        return this.every(s => this.#isTrue(s, domain))\r\n    }\r\n\r\n    toObject() {\r\n        return deepClone([...this])\r\n    }\r\n\r\n    clone() {\r\n        return new PredicatePF2e(this.toObject())\r\n    }\r\n\r\n    /** Is the provided statement true? */\r\n    #isTrue(statement, domain) {\r\n        return (\r\n            (typeof statement === 'string' && domain.has(statement)) ||\r\n            (StatementValidator.isBinaryOp(statement) && this.#testBinaryOp(statement, domain)) ||\r\n            (StatementValidator.isCompound(statement) && this.#testCompound(statement, domain))\r\n        )\r\n    }\r\n\r\n    #testBinaryOp(statement, domain) {\r\n        if ('eq' in statement) {\r\n            return domain.has(`${statement.eq[0]}:${statement.eq[1]}`)\r\n        } else {\r\n            const operator = Object.keys(statement)[0]\r\n\r\n            // Allow for tests of partial statements against numeric values\r\n            // E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\r\n            const [left, right] = Object.values(statement)[0]\r\n            const domainArray = Array.from(domain)\r\n            const getValues = operand => {\r\n                const maybeNumber = Number(operand)\r\n                if (!Number.isNaN(maybeNumber)) return [maybeNumber]\r\n                const pattern = new RegExp(String.raw`^${operand}:([^:]+)$`)\r\n                return domainArray.map(s => Number(pattern.exec(s)?.[1] || NaN)).filter(v => !Number.isNaN(v))\r\n            }\r\n            const leftValues = getValues(left)\r\n            const rightValues = getValues(right)\r\n\r\n            switch (operator) {\r\n                case 'gt':\r\n                    return leftValues.some(l => rightValues.every(r => l > r))\r\n                case 'gte':\r\n                    return leftValues.some(l => rightValues.every(r => l >= r))\r\n                case 'lt':\r\n                    return leftValues.some(l => rightValues.every(r => l < r))\r\n                case 'lte':\r\n                    return leftValues.some(l => rightValues.every(r => l <= r))\r\n                default:\r\n                    console.warn('PF2e System | Malformed binary operation encountered')\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Is the provided compound statement true? */\r\n    #testCompound(statement, domain) {\r\n        return (\r\n            ('and' in statement && statement.and.every(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('nand' in statement && !statement.nand.every(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('or' in statement && statement.or.some(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('xor' in statement && statement.xor.filter(subProp => this.#isTrue(subProp, domain)).length === 1) ||\r\n            ('nor' in statement && !statement.nor.some(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('not' in statement && !this.#isTrue(statement.not, domain)) ||\r\n            ('if' in statement && !(this.#isTrue(statement.if, domain) && !this.#isTrue(statement.then, domain)))\r\n        )\r\n    }\r\n}\r\n\r\nclass StatementValidator {\r\n    static isStatement(statement) {\r\n        return statement instanceof Object\r\n            ? this.isCompound(statement) || this.isBinaryOp(statement)\r\n            : typeof statement === 'string'\r\n            ? this.isAtomic(statement)\r\n            : false\r\n    }\r\n\r\n    static isAtomic(statement) {\r\n        return (typeof statement === 'string' && statement.length > 0) || this.isBinaryOp(statement)\r\n    }\r\n\r\n    static #binaryOperators = new Set(['eq', 'gt', 'gte', 'lt', 'lte'])\r\n\r\n    static isBinaryOp(statement) {\r\n        if (!isObject(statement)) return false\r\n        const entries = Object.entries(statement)\r\n        if (entries.length > 1) return false\r\n        const [operator, operands] = entries[0]\r\n        return (\r\n            this.#binaryOperators.has(operator) &&\r\n            Array.isArray(operands) &&\r\n            operands.length === 2 &&\r\n            typeof operands[0] === 'string' &&\r\n            ['string', 'number'].includes(typeof operands[1])\r\n        )\r\n    }\r\n\r\n    static isCompound(statement) {\r\n        return (\r\n            isObject(statement) &&\r\n            (this.isAnd(statement) ||\r\n                this.isOr(statement) ||\r\n                this.isNand(statement) ||\r\n                this.isXor(statement) ||\r\n                this.isNor(statement) ||\r\n                this.isNot(statement) ||\r\n                this.isIf(statement))\r\n        )\r\n    }\r\n\r\n    static isAnd(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.and) &&\r\n            statement.and.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNand(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nand) &&\r\n            statement.nand.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isOr(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.or) &&\r\n            statement.or.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isXor(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.xor) &&\r\n            statement.xor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNor(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nor) &&\r\n            statement.nor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNot(statement) {\r\n        return Object.keys(statement).length === 1 && !!statement.not && this.isStatement(statement.not)\r\n    }\r\n\r\n    static isIf(statement) {\r\n        return Object.keys(statement).length === 2 && this.isStatement(statement.if) && this.isStatement(statement.then)\r\n    }\r\n}\r\n", "import { PredicatePF2e } from './predicate.js'\r\n\r\nexport async function extractEphemeralEffects({ affects, origin, target, item, domains, options }) {\r\n    if (!(origin && target)) return []\r\n\r\n    const [effectsFrom, effectsTo] = affects === 'target' ? [origin, target] : [target, origin]\r\n    const fullOptions = [...options, ...effectsTo.getSelfRollOptions(affects)]\r\n    const resolvables = item ? (item.isOfType('spell') ? { spell: item } : { weapon: item }) : {}\r\n    return (\r\n        await Promise.all(\r\n            domains\r\n                .flatMap(s => effectsFrom.synthetics.ephemeralEffects[s]?.[affects] ?? [])\r\n                .map(d => d({ test: fullOptions, resolvables }))\r\n        )\r\n    ).flatMap(e => e ?? [])\r\n}\r\n\r\nexport function traitSlugToObject(trait, dictionary) {\r\n    // Look up trait labels from `npcAttackTraits` instead of `weaponTraits` in case a battle form attack is\r\n    // in use, which can include what are normally NPC-only traits\r\n    const traitObject = {\r\n        name: trait,\r\n        label: game.i18n.localize(dictionary[trait] ?? trait),\r\n    }\r\n    if (objectHasKey(CONFIG.PF2E.traitsDescriptions, trait)) {\r\n        traitObject.description = CONFIG.PF2E.traitsDescriptions[trait]\r\n    }\r\n\r\n    return traitObject\r\n}\r\n\r\nexport function objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nexport function getRangeIncrement(attackItem, distance) {\r\n    if (attackItem.isOfType('spell')) return null\r\n\r\n    return attackItem.rangeIncrement && typeof distance === 'number'\r\n        ? Math.max(Math.ceil(distance / attackItem.rangeIncrement), 1)\r\n        : null\r\n}\r\n\r\nexport function isOffGuardFromFlanking(actor) {\r\n    if (!actor.isOfType('creature')) return false\r\n\r\n    const { flanking } = actor.attributes\r\n    if (!flanking.flankable) return false\r\n\r\n    const rollOptions = actor.getRollOptions()\r\n    if (typeof flanking.flatFootable === 'number') {\r\n        return !PredicatePF2e.test([{ lte: ['origin:level', flanking.flatFootable] }], rollOptions)\r\n    }\r\n\r\n    return flanking.flatFootable\r\n}\r\n\r\nexport function isObject(value) {\r\n    return typeof value === 'object' && value !== null\r\n}\r\n", "import { getFlag, getSetting, localize } from './module.js'\r\n\r\nexport function renderSceneConfig(config, html) {\r\n    let settings = ''\r\n\r\n    for (const setting of ['standard', 'exposure']) {\r\n        const checked = getSceneSetting(config.object, setting)\r\n\r\n        settings += `<div class=\"form-group\">\r\n    <label>${localize(`settings.${setting}.name`)}</label>\r\n    <input type=\"checkbox\" name=\"flags.pf2e-perception.${setting}\" ${checked ? 'checked' : ''}>\r\n    <p class=\"notes\">${localize(`settings.${setting}.short`)}</p>\r\n</div>`\r\n    }\r\n\r\n    settings += '<hr>'\r\n\r\n    html.find('.tab[data-tab=\"basic\"] hr').first().after(settings)\r\n    config.setPosition()\r\n}\r\n\r\nexport function getValidTokens(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    if (!(token instanceof TokenDocument)) return []\r\n\r\n    let tokens = token.scene.tokens.filter(t => t !== token && t.actor?.isOfType('creature'))\r\n\r\n    if (getSetting('encounter')) {\r\n        const combat = game.combats.active\r\n        if (!combat) return tokens\r\n\r\n        return tokens.filter(t => {\r\n            const actor = t.actor\r\n            const traits = actor.traits\r\n            return actor.type === 'familiar' || traits.has('minion') || traits.has('eidolon') || combat.getCombatantByToken(t.id)\r\n        })\r\n    }\r\n\r\n    return tokens\r\n}\r\n\r\nexport function validateTokens(token, tokens) {\r\n    const validToken = getValidTokens(token).map(t => t.id)\r\n    return tokens.filter(t => {\r\n        const id = t instanceof Token || t instanceof TokenDocument ? t.id : t\r\n        return validToken.includes(id)\r\n    })\r\n}\r\n\r\nexport function getSceneSetting(scene, setting) {\r\n    return getFlag(scene, setting) ?? getSetting(setting)\r\n}\r\n", "export function modifier(value) {\r\n    return value >= 0 ? `+${value}` : value\r\n}\r\n\r\nexport function omit(object, names) {\r\n    const set = new Set(names)\r\n    return Object.entries(object).reduce((acc, [name, value]) => {\r\n        if (!set.has(name)) acc[name] = value\r\n        return acc\r\n    }, {})\r\n}\r\n\r\nexport function getPrototype(obj, depth = 1) {\r\n    const prototype = Object.getPrototypeOf(obj)\r\n    if (depth > 1) return getPrototype(prototype, depth - 1)\r\n    return prototype\r\n}\r\n\r\nexport function sortByName(a, b) {\r\n    return a.name.localeCompare(b.name)\r\n}\r\n", "import { isProne } from '../actor.js'\r\nimport { COVERS, VISIBILITIES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, localize } from '../module.js'\r\nimport { validateTokens } from '../scene.js'\r\nimport { getTokenData, setTokenData } from '../token.js'\r\nimport { sortByName } from '../utils.js'\r\n\r\nexport class BaseMenu extends Application {\r\n    #token\r\n    #resolve\r\n    #selected\r\n    #_currentData\r\n    #hoverTokenListener\r\n\r\n    constructor({ token, resolve, selected = [] }, options = {}) {\r\n        super(options)\r\n\r\n        this.#token = token\r\n        this.#resolve = resolve\r\n        this.#selected = selected\r\n\r\n        this.#hoverTokenListener = (token, hover) => {\r\n            const tokenId = token.id\r\n            const tokens = this.element.find('[data-token-id]')\r\n            tokens.removeClass('hover')\r\n            if (hover) tokens.filter(`[data-token-id=${tokenId}]`).addClass('hover')\r\n        }\r\n\r\n        Hooks.on('hoverToken', this.#hoverTokenListener)\r\n    }\r\n\r\n    async close(options = {}) {\r\n        Hooks.off('hoverToken', this.#hoverTokenListener)\r\n        this.#resolve?.(options.resolve ?? false)\r\n        super.close(options)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            minimizable: false,\r\n        })\r\n    }\r\n\r\n    static async openMenu(params, options = {}) {\r\n        if (params.token instanceof TokenDocument) params.token = params.token.object\r\n        if (!params.token) {\r\n            ui.notifications.error(localize('menu.no-token'))\r\n            return\r\n        }\r\n\r\n        options.id = `${MODULE_ID}-${params.token.document.uuid}`\r\n\r\n        const win = Object.values(ui.windows).find(x => x.id === options.id)\r\n        if (win) win.close()\r\n\r\n        return new Promise(resolve => {\r\n            params.resolve = resolve\r\n            new this(params, options).render(true)\r\n        })\r\n    }\r\n\r\n    static createPropertyData(original, current, property) {\r\n        const defaultValue = defaultValues[property]\r\n        const originalValue = original[property] ?? defaultValue\r\n        const currentValue = current[property] ?? defaultValue\r\n        return {\r\n            original: originalValue,\r\n            current: currentValue,\r\n            changed: originalValue !== currentValue,\r\n            custom: currentValue !== defaultValue,\r\n            originalCustom: originalValue !== defaultValue,\r\n        }\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get document() {\r\n        return this.#token.document\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token.actor\r\n    }\r\n\r\n    get scene() {\r\n        return this.#token.scene\r\n    }\r\n\r\n    get selected() {\r\n        return this.#selected.length ? validateTokens(this.token, this.#selected) : []\r\n    }\r\n\r\n    get currentData() {\r\n        return deepClone(this.#currentData)\r\n    }\r\n\r\n    get #currentData() {\r\n        if (!this.#_currentData) this.#_currentData = this.getSavedData()\r\n        return this.#_currentData\r\n    }\r\n\r\n    getSavedData() {\r\n        const data = getTokenData(this.document) ?? {}\r\n        return deepClone(data)\r\n    }\r\n\r\n    reset() {\r\n        this.#_currentData = this.getSavedData()\r\n        this.#selected = []\r\n        this.render()\r\n    }\r\n\r\n    isSelected(token) {\r\n        const id = typeof token === 'object' ? token.id : token\r\n        return this.#selected.includes(id)\r\n    }\r\n\r\n    getData(options) {\r\n        const covers = COVERS.map(value => ({ value, label: localize(`cover.${value}`) }))\r\n\r\n        return {\r\n            i18n: localize,\r\n            covers: isProne(this.actor) ? covers : covers.slice(0, -1),\r\n            visibilities: VISIBILITIES.map(value => ({ value, label: localize(`visibility.${value}`) })),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('[data-token-id]').on('mouseenter', event => {\r\n            const { tokenId } = event.currentTarget.dataset\r\n            const token = this.scene.tokens.get(tokenId)?.object\r\n            if (!token || token.controlled) return\r\n            token._onHoverIn(event, { hoverOutOthers: true })\r\n        })\r\n\r\n        html.find('[data-action=close]').on('click', () => {\r\n            this.close({ resolve: true })\r\n        })\r\n\r\n        html.find('select[name=visibility], select[name=cover]').on('change', event => {\r\n            const target = event.currentTarget\r\n            const property = target.name\r\n            const defaultValue = defaultValues[property]\r\n            const value = target.value || defaultValue\r\n            const tokenId = target.closest('.token')?.dataset.tokenId\r\n            const tokenIds = tokenId ? [tokenId] : this.#selected\r\n\r\n            for (const tokenId of tokenIds) {\r\n                setProperty(this.#currentData, `${tokenId}.${property}`, value)\r\n            }\r\n\r\n            if (tokenId) {\r\n                target.classList.toggle('changed', value !== target.dataset.original)\r\n                target.classList.toggle('custom', value !== defaultValue)\r\n            } else this.render()\r\n        })\r\n\r\n        html.find('[data-action=accept]').on('click', event => {\r\n            this._saveData(this.#currentData)\r\n            this.close({ resolve: true })\r\n        })\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        setTokenData(this.document, currentData)\r\n    }\r\n\r\n    _setSelected(selected) {\r\n        this.#selected =\r\n            selected ??\r\n            this.element\r\n                .find('[data-token-id].ui-selected')\r\n                .toArray()\r\n                .map(el => el.dataset.tokenId)\r\n    }\r\n\r\n    _spliIntoAlliances(tokens) {\r\n        const allies = []\r\n        const enemies = []\r\n        const neutral = []\r\n\r\n        const alliance = this.actor.alliance\r\n        const opposition = alliance === 'party' ? 'opposition' : alliance === 'opposition' ? 'party' : null\r\n\r\n        for (const token of tokens) {\r\n            if (opposition) {\r\n                const actorAlliance = token.actor ? token.actor.alliance : token.alliance\r\n                if (actorAlliance === alliance) allies.push(token)\r\n                else if (actorAlliance === opposition) enemies.push(token)\r\n                else if (actorAlliance === null) neutral.push(token)\r\n            } else neutral.push(token)\r\n        }\r\n\r\n        return {\r\n            allies: allies.sort(sortByName),\r\n            neutral: neutral.sort(sortByName),\r\n            enemies: enemies.sort(sortByName),\r\n            hasTokens: allies.length || enemies.length || neutral.length,\r\n        }\r\n    }\r\n}\r\n", "import { localize, templatePath } from '../module.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { setTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nexport class PerceptionMenu extends BaseMenu {\r\n    get title() {\r\n        return localize('menu.perception.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('perception')\r\n    }\r\n\r\n    getData(options) {\r\n        const selected = this.selected\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData()\r\n\r\n        const tokens = getValidTokens(this.token).map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                cover: BaseMenu.createPropertyData(original, current, 'cover'),\r\n                visibility: BaseMenu.createPropertyData(original, current, 'visibility'),\r\n                selected: selected.includes(id),\r\n            }\r\n        })\r\n\r\n        return {\r\n            ...super.getData(options),\r\n            ...this._spliIntoAlliances(tokens),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.filter('.tokens').selectable({\r\n            autoRefresh: false,\r\n            filter: '.token',\r\n            cancel: 'header,select',\r\n            stop: () => this._setSelected(),\r\n        })\r\n\r\n        html.find('[data-action=select-all]').on('click', event => {\r\n            const section = $(event.currentTarget).closest('section')\r\n            const tokens = (section.length ? section : html).find('[data-token-id]')\r\n            const allSelected = tokens.filter(':not(.ui-selected)').length === 0\r\n            tokens.toggleClass('ui-selected', !allSelected)\r\n            this._setSelected()\r\n        })\r\n\r\n        html.find('[data-action=use-selection]').on('click', event => {\r\n            this._setSelected(canvas.tokens.controlled.map(t => t.id))\r\n            this.render()\r\n        })\r\n\r\n        html.find('[data-action=reset]').on('click', event => this.reset())\r\n    }\r\n}\r\n", "export const RECT_CORNERS = [\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 1, y: 1 },\r\n]\r\n\r\nexport const RECT_SPREAD = [\r\n    { x: 0.25, y: 0.25 },\r\n    { x: 0.5, y: 0.25 },\r\n    { x: 0.75, y: 0.25 },\r\n    { x: 0.25, y: 0.5 },\r\n    { x: 0.5, y: 0.5 },\r\n    { x: 0.75, y: 0.5 },\r\n    { x: 0.25, y: 0.75 },\r\n    { x: 0.5, y: 0.75 },\r\n    { x: 0.75, y: 0.75 },\r\n]\r\n\r\nexport function getRectEdges(rect, margin) {\r\n    const opposite = 1 - margin\r\n    return {\r\n        top: { A: getRectPoint({ x: margin, y: margin }, rect), B: getRectPoint({ x: opposite, y: margin }, rect) },\r\n        right: { A: getRectPoint({ x: opposite, y: margin }, rect), B: getRectPoint({ x: opposite, y: opposite }, rect) },\r\n        bottom: { A: getRectPoint({ x: opposite, y: opposite }, rect), B: getRectPoint({ x: margin, y: opposite }, rect) },\r\n        left: { A: getRectPoint({ x: margin, y: opposite }, rect), B: getRectPoint({ x: margin, y: margin }, rect) },\r\n    }\r\n}\r\n\r\nexport function lineIntersectWall(origin, target, debug = false) {\r\n    if (debug) drawDebugLine(origin, target)\r\n    return CONFIG.Canvas.polygonBackends.move.testCollision(origin, target, { type: 'move', mode: 'any' })\r\n}\r\n\r\nexport function pointToTokenIntersectWall(origin, token, debug = false) {\r\n    for (const point of rectSpread(token.bounds)) {\r\n        if (lineIntersectWall(origin, point, debug)) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getRectPoint(point, rect) {\r\n    return { x: rect.x + rect.width * point.x, y: rect.y + rect.height * point.y }\r\n}\r\n\r\nexport function clearDebug() {\r\n    canvas.controls.debug.clear()\r\n}\r\n\r\nexport function drawDebugLine(origin, target, color = 'blue') {\r\n    const hex = color === 'blue' ? 0x0066cc : color === 'red' ? 0xff0000 : 0x16a103\r\n    canvas.controls.debug.lineStyle(4, hex).moveTo(origin.x, origin.y).lineTo(target.x, target.y)\r\n}\r\n\r\nexport function* rectSpread(rect) {\r\n    for (const point of RECT_SPREAD) {\r\n        yield getRectPoint(point, rect)\r\n    }\r\n}\r\n\r\nexport function* rectCorners(rect) {\r\n    for (const point of RECT_CORNERS) {\r\n        yield getRectPoint(point, rect)\r\n    }\r\n}\r\n", "import { clearDebug, drawDebugLine, rectCorners } from './geometry.js'\r\nimport { getSceneSetting } from './scene.js'\r\n\r\nexport function getLightExposure(token, debug = false) {\r\n    token = token instanceof Token ? token : token.object\r\n\r\n    if (token.document.hasStatusEffect(CONFIG.specialStatusEffects.INVISIBLE)) return undefined\r\n\r\n    const scene = token.scene\r\n    if (\r\n        scene !== canvas.scene ||\r\n        !scene.tokenVision ||\r\n        scene.darkness < scene.globalLightThreshold ||\r\n        !getSceneSetting(scene, 'exposure')\r\n    )\r\n        return undefined\r\n\r\n    if (debug) clearDebug()\r\n\r\n    const rect = token.document.bounds\r\n    let exposure = null\r\n\r\n    for (const light of canvas.effects.lightSources) {\r\n        if (!light.active) continue\r\n\r\n        const bright = light.data.bright\r\n        const dim = light.data.dim\r\n\r\n        if (light.object === token) {\r\n            if (bright) return 'bright'\r\n            if (dim) exposure = 'dim'\r\n            continue\r\n        }\r\n\r\n        const contained = []\r\n        for (const point of rectCorners(rect)) {\r\n            if (light.shape.contains(point.x, point.y)) contained.push(point)\r\n            else if (debug) drawDebugLine(light, point, 'red')\r\n        }\r\n\r\n        if (!contained.length) continue\r\n\r\n        if (light.ratio === 1) {\r\n            if (debug) drawDebugLine(light, contained, 'green')\r\n            return 'bright'\r\n        }\r\n\r\n        if (light.ratio === 0) {\r\n            if (debug) drawDebugLine(light, contained, 'blue')\r\n            exposure = 'dim'\r\n            continue\r\n        }\r\n\r\n        for (const point of contained) {\r\n            const distance = new Ray(light, point).distance\r\n            if (distance <= bright) {\r\n                if (debug) {\r\n                    drawDebugLine(light, point, 'green')\r\n                    exposure = 'bright'\r\n                } else return 'bright'\r\n            } else {\r\n                if (debug) {\r\n                    drawDebugLine(light, point, 'blue')\r\n                    if (exposure !== 'bright') exposure = 'dim'\r\n                } else exposure = 'dim'\r\n            }\r\n        }\r\n    }\r\n\r\n    return exposure\r\n}\r\n", "import { getCoverEffect, isProne } from './actor.js'\r\nimport { PerceptionMenu } from './apps/perception.js'\r\nimport { COVER_VALUES, ICONS_PATHS, VISIBILITY_VALUES, defaultValues } from './constants.js'\r\nimport { clearDebug, drawDebugLine, getRectEdges, lineIntersectWall, pointToTokenIntersectWall } from './geometry.js'\r\nimport { getLightExposure } from './lighting.js'\r\nimport { MODULE_ID, getFlag, getSetting, hasPermission, unsetFlag } from './module.js'\r\nimport { getSceneSetting, getValidTokens } from './scene.js'\r\n\r\nexport function renderTokenHUD(hud, html) {\r\n    if (!hasPermission() || !hud.object.actor?.isOfType('creature')) return\r\n    html.find('.col.left').append(`<div class=\"control-icon\" data-action=\"pf2e-perception\"><i class=\"fa-solid fa-eye\"></i></div>`)\r\n    html.find('[data-action=pf2e-perception]').on('click', event => PerceptionMenu.openMenu({ token: hud.object }))\r\n}\r\n\r\nexport function pasteToken(originals, sources) {\r\n    for (const source of sources) {\r\n        delete source.flags?.[MODULE_ID]\r\n    }\r\n}\r\n\r\nexport function getTokenData(token, ...path) {\r\n    path.unshift('data')\r\n    token = token instanceof Token ? token.document : token\r\n    return getFlag(token, path.join('.'))\r\n}\r\n\r\nexport async function clearTokenData(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    return unsetFlag(token, 'data')\r\n}\r\n\r\nexport async function setTokenData(token, data) {\r\n    const valid = getValidTokens(token).map(t => t.id)\r\n    const updates = {}\r\n\r\n    for (const tokenId in data) {\r\n        if (!valid.includes(tokenId)) {\r\n            updates[`flags.${MODULE_ID}.data.-=${tokenId}`] = true\r\n            continue\r\n        }\r\n\r\n        const current = data[tokenId]\r\n        const original = getTokenData(token, tokenId) ?? {}\r\n\r\n        if (current.visibility === defaultValues.visibility) delete current.visibility\r\n        if (current.cover === defaultValues.cover) delete current.cover\r\n\r\n        if (original.cover === current.cover && original.visibility === current.visibility) continue\r\n\r\n        if (!current.visibility && !current.cover) {\r\n            updates[`flags.${MODULE_ID}.data.-=${tokenId}`] = true\r\n        } else {\r\n            for (const property of ['cover', 'visibility']) {\r\n                if (original[property] === current[property]) continue\r\n                if (!current[property]) updates[`flags.${MODULE_ID}.data.${tokenId}.-=${property}`] = true\r\n                else updates[`flags.${MODULE_ID}.data.${tokenId}.${property}`] = current[property]\r\n            }\r\n        }\r\n    }\r\n\r\n    token = token instanceof Token ? token.document : token\r\n    return token.update(updates)\r\n}\r\n\r\nexport function hasStandardCover(origin, target, debug = false) {\r\n    const scene = origin.scene\r\n    if (!getSceneSetting(scene, 'standard')) return false\r\n\r\n    if (debug) clearDebug()\r\n\r\n    const standard = getSetting('standard-type')\r\n    if (standard === 'center') return lineIntersectWall(origin.center, target.center, debug)\r\n    else if (standard === 'points') return pointToTokenIntersectWall(origin.center, target, debug)\r\n    // else return allTokenCornersToPointIntersectWall(origin, target.center)\r\n}\r\n\r\nconst SIZES = {\r\n    tiny: 0,\r\n    sm: 1,\r\n    med: 2,\r\n    lg: 3,\r\n    huge: 4,\r\n    grg: 5,\r\n}\r\n\r\nexport function getCreatureCover(originToken, targetToken, debug = false) {\r\n    const setting = getSetting('lesser')\r\n    if (setting === 'none') return undefined\r\n\r\n    let cover = undefined\r\n    const origin = originToken.center\r\n    const target = targetToken.center\r\n\r\n    if (debug) {\r\n        clearDebug()\r\n        drawDebugLine(origin, target)\r\n    }\r\n\r\n    const isExtraLarge = token => {\r\n        const size = SIZES[token.actor.size]\r\n        return size - originSize >= 2 && size - targetSize >= 2\r\n    }\r\n\r\n    const originSize = SIZES[originToken.actor.size]\r\n    const targetSize = SIZES[targetToken.actor.size]\r\n\r\n    const tokens = originToken.scene.tokens.contents\r\n        .filter(t => t.actor)\r\n        .sort((a, b) => SIZES[b.actor.size] - SIZES[a.actor.size])\r\n\r\n    let extralarges = originSize < SIZES.huge && targetSize < SIZES.huge && tokens.filter(isExtraLarge).length\r\n\r\n    const margin = setting === 'ten' ? 0.1 : setting === 'twenty' ? 0.2 : 0\r\n\r\n    const intersectsEdge = edge => {\r\n        if (debug) drawDebugLine(edge.A, edge.B, 'red')\r\n        return lineSegmentIntersects(origin, target, edge.A, edge.B)\r\n    }\r\n    const intersectsWith =\r\n        setting === 'cross'\r\n            ? edges => {\r\n                  return (\r\n                      (intersectsEdge(edges.top) && intersectsEdge(edges.bottom)) ||\r\n                      (intersectsEdge(edges.left) && intersectsEdge(edges.right))\r\n                  )\r\n              }\r\n            : edges => Object.values(edges).some(edge => intersectsEdge(edge))\r\n\r\n    for (const tokenDocument of tokens) {\r\n        const token = tokenDocument.object\r\n        if (tokenDocument.hidden || token === originToken || token === targetToken) continue\r\n\r\n        const edges = getRectEdges(token.bounds, margin)\r\n\r\n        if (intersectsWith(edges)) return extralarges ? 'standard' : 'lesser'\r\n        else if (isExtraLarge(tokenDocument)) extralarges--\r\n    }\r\n\r\n    return cover\r\n}\r\n\r\nexport function getVisibility(origin, target) {\r\n    const systemVisibility = (() => {\r\n        const originActor = origin.actor\r\n        const visibilities = ['unnoticed', 'undetected', 'hidden', 'concealed']\r\n\r\n        for (const visibility of visibilities) {\r\n            if (originActor.hasCondition(visibility)) return visibility\r\n        }\r\n    })()\r\n\r\n    const visibility = getTokenData(origin, target.id, 'visibility')\r\n    const mergedVisibility = VISIBILITY_VALUES[systemVisibility] > VISIBILITY_VALUES[visibility] ? systemVisibility : visibility\r\n\r\n    const mergedVisibilityValue = VISIBILITY_VALUES[mergedVisibility]\r\n    if (mergedVisibilityValue >= VISIBILITY_VALUES.undetected) return mergedVisibility\r\n\r\n    const exposure = getLightExposure(origin)\r\n    let exposedVisibility = exposure === 'dim' ? 'concealed' : exposure === null ? 'hidden' : undefined\r\n\r\n    return mergedVisibilityValue > VISIBILITY_VALUES[exposedVisibility] ? mergedVisibility : exposedVisibility\r\n}\r\n\r\nexport function updateToken(token, data, context, userId) {\r\n    const flags = data.flags?.['pf2e-perception']\r\n\r\n    if (flags && (flags.data || flags['-=data'] !== undefined)) {\r\n        token.object.renderFlags.set({ refreshVisibility: true })\r\n\r\n        if (game.user.isGM) return\r\n\r\n        const hk = Hooks.on('refreshToken', refreshed => {\r\n            if (!token.object === refreshed) return\r\n            Hooks.off('refreshToken', hk)\r\n            if (game.combat?.getCombatantByToken(token.id)) ui.combat.render()\r\n        })\r\n    }\r\n}\r\n\r\nexport function hoverToken(token, hovered) {\r\n    if (hovered) showAllConditionals(token)\r\n    else clearConditionals(token)\r\n}\r\n\r\nexport function deleteToken(token) {\r\n    clearConditionals(token)\r\n    if (!game.user.isGM) ui.combat.render()\r\n}\r\n\r\nexport function controlToken(token) {\r\n    clearConditionals(token)\r\n    Hooks.once('sightRefresh', () => token.hover && showAllConditionals(token))\r\n}\r\n\r\nexport function clearConditionals(token) {\r\n    const tokenId = token?.id\r\n    if (!tokenId) return $('.pf2e-conditionals').remove()\r\n    $(`.pf2e-conditionals[data-hover-id=${token.id}]`).remove()\r\n    $(`.pf2e-conditionals[data-token-id=${token.id}]`).remove()\r\n}\r\n\r\nexport function showAllConditionals(token) {\r\n    const tokens = getValidTokens(token)\r\n    for (const target of tokens) {\r\n        showConditionals(target, token)\r\n    }\r\n}\r\n\r\nexport async function showConditionals(origin, target) {\r\n    origin = origin instanceof Token ? origin : origin.object\r\n    if (!origin.visible || !origin.actor?.isOfType('creature')) return\r\n\r\n    let data = getTokenData(origin, target.id)\r\n    if (isEmpty(data)) return\r\n\r\n    if (!game.user.isGM && !target.document.hasPlayerOwner && VISIBILITY_VALUES[data.visibility] >= VISIBILITY_VALUES.hidden) {\r\n        if (!data.cover) return\r\n        data = { cover: data.cover }\r\n    }\r\n\r\n    const scale = origin.worldTransform.a\r\n    const coords = canvas.clientCoordinatesFromCanvas(origin.document._source)\r\n\r\n    let content = `<div class=\"pf2e-conditionals\" data-hover-id=\"${origin.id}\" data-token-id=\"${target.id}\" `\r\n    content += `style=\"top: ${coords.y}px; left: ${coords.x + (origin.hitArea.width * scale) / 2}px;\">`\r\n\r\n    const savedPaths = getSetting('icon-path')\r\n    Object.entries(data).map(([property, value]) => {\r\n        const icon = property === 'cover' ? 'cover' : value\r\n        let path = savedPaths[icon] || ICONS_PATHS[icon]\r\n        if (path.startsWith('systems') || path.startsWith('modules')) path = `../../../${path}`\r\n        content += `<div class=\"conditional\"><img src=\"${path}\"></img></div>`\r\n    })\r\n\r\n    content += '</div>'\r\n\r\n    $(document.body).append(content)\r\n}\r\n\r\nexport function getConditionalCover(origin, target, options, debug = false) {\r\n    const ranged = options.includes('item:ranged')\r\n    const prone = ranged ? isProne(target.actor) : false\r\n\r\n    let systemCover = getCoverEffect(target.actor, true)\r\n    if (prone && COVER_VALUES[systemCover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && systemCover === 'greater-prone') systemCover = undefined\r\n\r\n    let cover = getTokenData(target, origin.id, 'cover')\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && cover === 'greater-prone') cover = undefined\r\n\r\n    if (\r\n        COVER_VALUES[cover] < COVER_VALUES.standard &&\r\n        COVER_VALUES[systemCover] < COVER_VALUES.standard &&\r\n        hasStandardCover(origin, target, debug)\r\n    ) {\r\n        cover = 'standard'\r\n    } else if (!cover && !systemCover && origin.distanceTo(target) > 5) {\r\n        cover = getCreatureCover(origin, target, debug)\r\n    }\r\n\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n\r\n    return COVER_VALUES[cover] > COVER_VALUES[systemCover] ? cover : undefined\r\n}\r\n", "import { COVERS, COVER_UUID, COVER_VALUES, VISIBILITY_VALUES } from './constants.js'\r\nimport { createCoverSource, createFlatFootedSource, findChoiceSetRule } from './effect.js'\r\nimport { optionsToObject, updateVisibilityFromOptions } from './options.js'\r\nimport { extractEphemeralEffects, getRangeIncrement, isOffGuardFromFlanking, traitSlugToObject } from './pf2e/helpers.js'\r\nimport { getConditionalCover, getVisibility } from './token.js'\r\n\r\nexport async function getRollContext(params) {\r\n    const [selfToken, targetToken] =\r\n        canvas.ready && !params.viewOnly\r\n            ? [\r\n                  canvas.tokens.controlled.find(t => t.actor === this) ?? this.getActiveTokens().shift() ?? null,\r\n                  params.target?.token ?? params.target?.actor?.getActiveTokens().shift() ?? null,\r\n              ]\r\n            : [null, null]\r\n\r\n    const selfOptions = this.getRollOptions(params.domains ?? [])\r\n\r\n    // Get ephemeral effects from the target that affect this actor while attacking\r\n    const originEphemeralEffects = await extractEphemeralEffects({\r\n        affects: 'origin',\r\n        origin: this,\r\n        target: params.target?.actor ?? targetToken?.actor ?? null,\r\n        item: params.item ?? null,\r\n        domains: params.domains,\r\n        options: [...params.options, ...(params.item?.getRollOptions('item') ?? [])],\r\n    })\r\n\r\n    const selfActor =\r\n        params.viewOnly || !targetToken?.actor\r\n            ? this\r\n            : this.getContextualClone([...selfOptions, ...targetToken.actor.getSelfRollOptions('target')], originEphemeralEffects)\r\n\r\n    const isStrike = params.statistic instanceof game.pf2e.StatisticModifier\r\n    const strikeActions = isStrike ? selfActor.system.actions?.flatMap(a => [a, a.altUsages ?? []].flat()) ?? [] : []\r\n\r\n    const statistic = params.viewOnly\r\n        ? params.statistic\r\n        : isStrike\r\n        ? strikeActions.find(action => {\r\n              // Find the matching weapon or melee item\r\n              if (params.item?.id !== action.item.id || params?.item.name !== action.item.name) return false\r\n              if (params.item.isOfType('melee') && action.item.isOfType('melee')) return true\r\n\r\n              // Discriminate between melee/thrown usages by checking that both are either melee or ranged\r\n              return (\r\n                  params.item.isOfType('weapon') && action.item.isOfType('weapon') && params.item.isMelee === action.item.isMelee\r\n              )\r\n          }) ?? params.statistic\r\n        : params.statistic\r\n\r\n    const selfItem = (() => {\r\n        // 1. Simplest case: no context clone, so used the item passed to this method\r\n        if (selfActor === this) return params.item ?? null\r\n\r\n        // 2. Get the item from the statistic if it's stored therein\r\n        if (\r\n            statistic &&\r\n            'item' in statistic &&\r\n            statistic.item instanceof Item &&\r\n            statistic.item.isOfType('melee', 'spell', 'weapon')\r\n        ) {\r\n            return statistic.item\r\n        }\r\n\r\n        // 3. Get the item directly from the context clone\r\n        const itemClone = selfActor.items.get(params.item?.id ?? '')\r\n        if (itemClone?.isOfType('melee', 'spell', 'weapon')) return itemClone\r\n\r\n        // 4 Give up :(\r\n        return params.item ?? null\r\n    })()\r\n\r\n    const itemOptions = selfItem?.getRollOptions('item') ?? []\r\n    const isAttackAction = ['attack', 'strike-damage', 'attack-spell-damage'].some(d => params.domains.includes(d))\r\n\r\n    const traitSlugs = [\r\n        isAttackAction ? 'attack' : [],\r\n        // CRB p. 544: \"Due to the complexity involved in preparing bombs, Strikes to throw alchemical bombs gain\r\n        // the manipulate trait.\"\r\n        isStrike && selfItem?.isOfType('weapon') && selfItem.baseType === 'alchemical-bomb' ? 'manipulate' : [],\r\n    ].flat()\r\n\r\n    if (selfItem?.isOfType('weapon', 'melee')) {\r\n        for (const adjustment of this.synthetics.strikeAdjustments) {\r\n            adjustment.adjustTraits?.(selfItem, traitSlugs)\r\n        }\r\n    }\r\n\r\n    const traits = traitSlugs.map(t => traitSlugToObject(t, CONFIG.PF2E.actionTraits))\r\n    // Calculate distance and range increment, set as a roll option\r\n    const distance = selfToken && targetToken ? selfToken.distanceTo(targetToken) : null\r\n    const [originDistance, targetDistance] =\r\n        typeof distance === 'number' ? [`origin:distance:${distance}`, `target:distance:${distance}`] : [null, null]\r\n\r\n    // Target roll options\r\n    const getTargetRollOptions = actor => {\r\n        const targetOptions = actor?.getSelfRollOptions('target') ?? []\r\n        if (targetToken) {\r\n            targetOptions.push('target') // An indicator that there is a target of any kind\r\n            const mark = this.synthetics.targetMarks.get(targetToken.document.uuid)\r\n            if (mark) targetOptions.push(`target:mark:${mark}`)\r\n        }\r\n        return targetOptions\r\n    }\r\n    const targetRollOptions = getTargetRollOptions(targetToken?.actor)\r\n\r\n    // Get ephemeral effects from this actor that affect the target while being attacked\r\n    const targetEphemeralEffects = await extractEphemeralEffects({\r\n        affects: 'target',\r\n        origin: selfActor,\r\n        target: targetToken?.actor ?? null,\r\n        item: selfItem,\r\n        domains: params.domains,\r\n        options: [...params.options, ...itemOptions, ...targetRollOptions],\r\n    })\r\n\r\n    const [reach, isMelee] = params.item?.isOfType('melee')\r\n        ? [params.item.reach, params.item.isMelee]\r\n        : params.item?.isOfType('weapon')\r\n        ? [this.getReach({ action: 'attack', weapon: params.item }), params.item.isMelee]\r\n        : [null, false]\r\n\r\n    /**\r\n     * WE ADDED STUFF HERE\r\n     */\r\n    if (selfToken && targetToken) {\r\n        addConditionals({\r\n            selfToken,\r\n            targetToken,\r\n            ephemeralEffects: targetEphemeralEffects,\r\n            options: [...params.options, ...selfActor.getSelfRollOptions('origin'), ...itemOptions, ...targetRollOptions],\r\n        })\r\n    }\r\n    /**\r\n     * END OF THE ADDED STUFF\r\n     */\r\n\r\n    // Add an epehemeral effect from flanking\r\n    const isFlankingStrike = !!(\r\n        isMelee &&\r\n        typeof reach === 'number' &&\r\n        params.statistic instanceof game.pf2e.StatisticModifier &&\r\n        targetToken &&\r\n        selfToken?.isFlanking(targetToken, { reach })\r\n    )\r\n    if (isFlankingStrike && params.target?.token?.actor && isOffGuardFromFlanking(params.target.token.actor)) {\r\n        const name = game.i18n.localize('PF2E.Item.Condition.Flanked')\r\n        const condition = game.pf2e.ConditionManager.getCondition('flat-footed', { name })\r\n        targetEphemeralEffects.push(condition.toObject())\r\n    }\r\n\r\n    // Clone the actor to recalculate its AC with contextual roll options\r\n    const targetActor = params.viewOnly\r\n        ? null\r\n        : (params.target?.actor ?? targetToken?.actor)?.getContextualClone(\r\n              [...selfActor.getSelfRollOptions('origin'), ...itemOptions, ...(originDistance ? [originDistance] : [])],\r\n              targetEphemeralEffects\r\n          ) ?? null\r\n\r\n    const rollOptions = new Set([\r\n        ...params.options,\r\n        ...selfOptions,\r\n        ...(targetActor ? getTargetRollOptions(targetActor) : targetRollOptions),\r\n        ...itemOptions,\r\n        // Backward compatibility for predication looking for an \"attack\" trait by its lonesome\r\n        'attack',\r\n    ])\r\n\r\n    if (targetDistance) rollOptions.add(targetDistance)\r\n    const rangeIncrement = selfItem ? getRangeIncrement(selfItem, distance) : null\r\n    if (rangeIncrement) rollOptions.add(`target:range-increment:${rangeIncrement}`)\r\n\r\n    const self = {\r\n        actor: selfActor,\r\n        token: selfToken?.document ?? null,\r\n        statistic,\r\n        item: selfItem,\r\n        modifiers: [],\r\n    }\r\n\r\n    const target =\r\n        targetActor && targetToken && distance !== null\r\n            ? { actor: targetActor, token: targetToken.document, distance, rangeIncrement }\r\n            : null\r\n\r\n    return {\r\n        options: rollOptions,\r\n        self,\r\n        target,\r\n        traits,\r\n    }\r\n}\r\n\r\nfunction addConditionals({ ephemeralEffects, selfToken, targetToken, options }) {\r\n    let cover = getConditionalCover(selfToken, targetToken, options)\r\n\r\n    options = optionsToObject(options)\r\n\r\n    if (options.origin?.cover) {\r\n        if (cover && options.origin.cover.reduce) {\r\n            const reduced = ['all', cover].some(x => options.origin.cover.reduce.includes(x))\r\n            if (reduced) {\r\n                const index = COVERS.indexOf(cover)\r\n                cover = COVERS[Math.max(0, index - 1)]\r\n            }\r\n        }\r\n    }\r\n\r\n    let visibility = updateVisibilityFromOptions(getVisibility(selfToken, targetToken), options.target?.visibility)\r\n    if (options.target?.visibility?.cancel) {\r\n        const canceled = ['all', visibility].some(x => options.target.visibility.cancel.includes(x))\r\n        if (canceled) visibility = undefined\r\n    }\r\n\r\n    if (COVER_VALUES[cover] > COVER_VALUES.none) ephemeralEffects.push(createCoverSource(cover))\r\n    if (VISIBILITY_VALUES[visibility] > VISIBILITY_VALUES.concealed) ephemeralEffects.push(createFlatFootedSource(visibility))\r\n}\r\n\r\nexport function getActorToken(actor, target = false) {\r\n    if (!actor) return undefined\r\n    const actorId = actor.id\r\n    const isToken = actor.isToken\r\n    const tokens = target ? game.user.targets : canvas.tokens.controlled\r\n    return (\r\n        tokens.find(token => (isToken ? token.actor === actor : token.actor.id === actorId)) ??\r\n        actor.getActiveTokens().shift() ??\r\n        null\r\n    )\r\n}\r\n\r\nexport function isProne(actor) {\r\n    return actor.itemTypes.condition.some(item => item.slug === 'prone')\r\n}\r\n\r\nexport function getCoverEffect(actor, selection = false) {\r\n    const effect = actor.itemTypes.effect.find(x => x.sourceId === COVER_UUID)\r\n    return selection ? findChoiceSetRule(effect)?.selection.level : effect\r\n}\r\n\r\nexport function getFeatWithUUID(actor, uuid) {\r\n    return actor.itemTypes.feat.find(f => f.sourceId === uuid)\r\n}\r\n", "import { CoverValidationMenu, HideValidationMenu, PointOutValidationMenu, SeekValidationMenu } from './apps/validation.js'\r\nimport { MODULE_ID, getFlag, getFlags, localize, setFlag } from './module.js'\r\n\r\nexport function renderChatMessage(message, html) {\r\n    const token = message.token\r\n    if (!token) return\r\n\r\n    const isGM = game.user.isGM\r\n    const hasPlayerOwner = token.hasPlayerOwner\r\n    const { cover, selected, skipWait, validated, blindCheck, pointOut } = getFlags(message)\r\n    const pf2eContext = message.getFlag('pf2e', 'context')\r\n\r\n    if (blindCheck && !isGM && hasPlayerOwner) {\r\n        html.find('.message-sender').text(token.name)\r\n        html.find('.flavor-text').html(blindCheck)\r\n    } else if (cover) {\r\n        if (isGM) {\r\n            const button = createValidateButton({ property: 'cover', skipWait, validated })\r\n            html.find('.message-content').append(button)\r\n            html.find('[data-action=validate-cover]').on('click', () => {\r\n                CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n            })\r\n        } else if (!skipWait) {\r\n            const hint = createWaitHint('cover', validated)\r\n            html.find('.message-content').append(hint)\r\n        }\r\n    } else if (pf2eContext?.visibility) {\r\n        if (!validated) html.find('.message-buttons').remove()\r\n\r\n        const flavor = html.find('.flavor-text')\r\n\r\n        if (!isGM && hasPlayerOwner) {\r\n            html.find('.message-sender').text(token.name)\r\n            flavor.empty()\r\n        }\r\n\r\n        const msg = localize(`message.flat-check.${validated === undefined ? 'blind' : validated ? 'success' : 'failure'}`)\r\n        const hint = createHint(msg, validated)\r\n        flavor.append(hint)\r\n\r\n        if (isGM) {\r\n            for (const type of ['success', 'failure']) {\r\n                flavor.append(\r\n                    createChatButton({\r\n                        action: `${type}-message`,\r\n                        icon: 'fa-solid fa-message',\r\n                        label: localize('message.flat-check.button', type),\r\n                    })\r\n                )\r\n                html.find(`[data-action=${type}-message]`).on('click', () => {\r\n                    setFlag(message, 'validated', type === 'success')\r\n                })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'skill-check') {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.selected,\r\n                    ValidationMenu: HideValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'perception-check') {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:seek')) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.selected,\r\n                    ValidationMenu: SeekValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:seek')) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    } else if (pointOut) {\r\n        const selectedToken = token.scene.tokens.get(pointOut)\r\n        if (!selectedToken) return\r\n\r\n        if (isGM) {\r\n            let buttons = '<div style=\"display: grid; grid-template-columns: 1fr auto; gap: 3px\">'\r\n\r\n            buttons += createValidateButton({ property: 'visibility', skipWait, validated })\r\n            buttons += createChatButton({ action: 'ping-token', icon: 'fa-solid fa-signal-stream' })\r\n\r\n            buttons += '</div>'\r\n\r\n            html.find('.message-content').append(buttons)\r\n\r\n            html.find('[data-action=validate-visibility]').on('click', async () => {\r\n                PointOutValidationMenu.openMenu({\r\n                    message,\r\n                    token: selectedToken,\r\n                    originator: token,\r\n                    selected: canvas.tokens.controlled.map(t => t.id),\r\n                })\r\n            })\r\n\r\n            html.find('[data-action=ping-token]').on('click', () => {\r\n                canvas.ping(selectedToken.center)\r\n            })\r\n        } else if (hasPlayerOwner) {\r\n            const hint = createWaitHint('visibility', validated)\r\n            html.find('.message-content').append(hint)\r\n        }\r\n    }\r\n}\r\n\r\nexport function validateMessage(message) {\r\n    if (!getFlag(message, 'validated')) setFlag(message, 'validated', true)\r\n}\r\n\r\nfunction addBlindSkillCheckFlavor({ html, token, message, validated }) {\r\n    html.find('.message-sender').text(token.name)\r\n    let flavor = message.getFlag('pf2e', 'modifierName')\r\n    flavor += createWaitHint('visibility', validated)\r\n    html.find('.flavor-text').html(flavor)\r\n}\r\n\r\nfunction createWaitHint(property, validated) {\r\n    const hint = localize(`message.${property}.player.${validated ? 'validated' : 'wait'}`)\r\n    return createHint(hint, validated)\r\n}\r\n\r\nfunction createHint(hint, validated) {\r\n    if (validated === true) hint = '<i class=\"fa-solid fa-check\" style=\"color: green;\"></i> ' + hint\r\n    else if (validated === false) hint = '<i class=\"fa-solid fa-xmark\" style=\"color: red;\"></i> ' + hint\r\n    return `<i style=\"display: block; font-size: .9em; text-align: end;\">${hint}</i>`\r\n}\r\n\r\nfunction addVisibilityValidationButton({ skipWait, validated, html, message, ValidationMenu, token, selected }) {\r\n    const button = createValidateButton({ property: 'visibility', skipWait, validated })\r\n    html.find('.flavor-text').append(button)\r\n    html.find('[data-action=validate-visibility]').on('click', async () => {\r\n        const roll = message.rolls[0]\r\n        ValidationMenu.openMenu({ token, message, roll, selected })\r\n    })\r\n}\r\n\r\nfunction createValidateButton({ skipWait, validated, property }) {\r\n    let label = localize(`message.${property}.gm.${skipWait ? 'check' : validated ? 'validated' : 'validate'}`)\r\n    if (!skipWait && validated) label += '<i class=\"fa-solid fa-check\" style=\"color: green; margin-left: 0.3em;\"></i>'\r\n    return createChatButton({\r\n        action: `validate-${property}`,\r\n        icon: 'fa-solid fa-list',\r\n        label,\r\n    })\r\n}\r\n\r\nexport function createChatButton({ action, icon, label }) {\r\n    let button = `<button type=\"button\" style=\"margin: 0 0 5px; padding-block: 0;\" data-action=\"${action}\">`\r\n\r\n    if (icon) button += `<i class=\"${icon}\" ${label ? '' : 'style=\"margin: 0;\"'}></i>`\r\n    if (label) button += `${icon ? ' ' : ''}${label}`\r\n\r\n    button += '</button>'\r\n\r\n    return button\r\n}\r\n\r\nexport async function createTokenMessage({ content, token, flags, secret }) {\r\n    const data = { content, speaker: ChatMessage.getSpeaker({ token: token instanceof Token ? token.document : token }) }\r\n    if (flags) setProperty(data, `flags.${MODULE_ID}`, flags)\r\n    if (secret) {\r\n        data.type = CONST.CHAT_MESSAGE_TYPES.WHISPER\r\n        data.whisper = ChatMessage.getWhisperRecipients('gm')\r\n    }\r\n    return ChatMessage.create(data)\r\n}\r\n", "const DEGREE_ADJUSTMENT_AMOUNTS = {\r\n    LOWER_BY_TWO: -2,\r\n    LOWER: -1,\r\n    INCREASE: 1,\r\n    INCREASE_BY_TWO: 2,\r\n    TO_CRITICAL_FAILURE: 'criticalFailure',\r\n    TO_FAILURE: 'failure',\r\n    TO_SUCCESS: 'success',\r\n    TO_CRITICAL_SUCCESS: 'criticalSuccess',\r\n}\r\n\r\nconst DEGREE_OF_SUCCESS_STRINGS = ['criticalFailure', 'failure', 'success', 'criticalSuccess']\r\n\r\nexport class DegreeOfSuccess {\r\n    constructor(roll, dc, dosAdjustments = null) {\r\n        if (roll instanceof Roll) {\r\n            this.dieResult =\r\n                (roll.isDeterministic\r\n                    ? roll.terms.find(t => t instanceof NumericTerm)\r\n                    : roll.dice.find(d => d instanceof Die && d.faces === 20)\r\n                )?.total ?? 1\r\n            this.rollTotal = roll.total\r\n        } else {\r\n            this.dieResult = roll.dieValue\r\n            this.rollTotal = roll.dieValue + roll.modifier\r\n        }\r\n\r\n        this.dc = typeof dc === 'number' ? { value: dc } : dc\r\n\r\n        this.unadjusted = this.#calculateDegreeOfSuccess()\r\n        this.adjustment = this.#getDegreeAdjustment(this.unadjusted, dosAdjustments)\r\n        this.value = this.adjustment ? this.#adjustDegreeOfSuccess(this.adjustment.amount, this.unadjusted) : this.unadjusted\r\n    }\r\n\r\n    static CRITICAL_FAILURE = 0\r\n    static FAILURE = 1\r\n    static SUCCESS = 2\r\n    static CRITICAL_SUCCESS = 3\r\n\r\n    #getDegreeAdjustment(degree, adjustments) {\r\n        if (!adjustments) return null\r\n\r\n        for (const outcome of ['all', ...DEGREE_OF_SUCCESS_STRINGS]) {\r\n            const { label, amount } = adjustments[outcome] ?? {}\r\n            if (\r\n                amount &&\r\n                label &&\r\n                !(degree === DegreeOfSuccess.CRITICAL_SUCCESS && amount === DEGREE_ADJUSTMENT_AMOUNTS.INCREASE) &&\r\n                !(degree === DegreeOfSuccess.CRITICAL_FAILURE && amount === DEGREE_ADJUSTMENT_AMOUNTS.LOWER) &&\r\n                (outcome === 'all' || DEGREE_OF_SUCCESS_STRINGS.indexOf(outcome) === degree)\r\n            ) {\r\n                return { label, amount }\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    #adjustDegreeOfSuccess(amount, degreeOfSuccess) {\r\n        switch (amount) {\r\n            case 'criticalFailure':\r\n                return 0\r\n            case 'failure':\r\n                return 1\r\n            case 'success':\r\n                return 2\r\n            case 'criticalSuccess':\r\n                return 3\r\n            default:\r\n                return Math.clamped(degreeOfSuccess + amount, 0, 3)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param degree The current success value\r\n     * @return The new success value\r\n     */\r\n    #adjustDegreeByDieValue(degree) {\r\n        if (this.dieResult === 20) {\r\n            return this.#adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.INCREASE, degree)\r\n        } else if (this.dieResult === 1) {\r\n            return this.#adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.LOWER, degree)\r\n        }\r\n\r\n        return degree\r\n    }\r\n\r\n    #calculateDegreeOfSuccess() {\r\n        const dc = this.dc.value\r\n\r\n        if (this.rollTotal - dc >= 10) {\r\n            return this.#adjustDegreeByDieValue(DegreeOfSuccess.CRITICAL_SUCCESS)\r\n        } else if (dc - this.rollTotal >= 10) {\r\n            return this.#adjustDegreeByDieValue(DegreeOfSuccess.CRITICAL_FAILURE)\r\n        } else if (this.rollTotal >= dc) {\r\n            return this.#adjustDegreeByDieValue(DegreeOfSuccess.SUCCESS)\r\n        }\r\n\r\n        return this.#adjustDegreeByDieValue(DegreeOfSuccess.FAILURE)\r\n    }\r\n}\r\n", "import { MODULE_ID, getFlag, localize } from './module.js'\r\n\r\nconst templateConversion = {\r\n    burst: 'circle',\r\n    emanation: 'circle',\r\n    line: 'ray',\r\n    cone: 'cone',\r\n    rect: 'rect',\r\n}\r\n\r\nexport function createSeekTemplate(type, token) {\r\n    createTemplate({\r\n        type,\r\n        token,\r\n        distance: type === 'cone' ? 30 : 15,\r\n        traits: ['concentrate', 'secret'],\r\n    })\r\n}\r\n\r\nexport function getTokenTemplate(token) {\r\n    return token.scene.templates.find(t => getFlag(t, 'tokenId') === token.id)\r\n}\r\n\r\nexport function getTokenTemplateTokens(token) {\r\n    if (!checkScene(token)) return null\r\n\r\n    const template = getTokenTemplate(token)\r\n    if (!template) return null\r\n\r\n    return getTokens(template.object)\r\n}\r\n\r\nexport async function deleteTokenTemplate(token) {\r\n    const templates = token.scene.templates.filter(t => getFlag(t, 'tokenId') === token.id)\r\n    for (const template of templates) {\r\n        await template.delete()\r\n    }\r\n}\r\n\r\nfunction checkScene(token) {\r\n    if (canvas.scene === token.scene) return true\r\n    ui.notifications.error(localize('template.scene'))\r\n    return false\r\n}\r\n\r\nfunction createTemplate({ type, distance, traits, fillColor, width, token }) {\r\n    if (!checkScene(token)) return\r\n\r\n    const templateData = {\r\n        distance,\r\n        t: templateConversion[type],\r\n        fillColor: fillColor || game.user.color,\r\n        flags: {\r\n            [MODULE_ID]: {\r\n                tokenId: token.id,\r\n            },\r\n        },\r\n    }\r\n\r\n    if (templateData.t === 'ray') {\r\n        templateData.width = width || CONFIG.MeasuredTemplate.defaults.width * (canvas.dimensions?.distance ?? 1)\r\n    } else if (templateData.t === 'cone') {\r\n        templateData.angle = CONFIG.MeasuredTemplate.defaults.angle\r\n    }\r\n\r\n    if (traits) setProperty(templateData, 'flags.pf2e.origin.traits', traits)\r\n\r\n    const templateDoc = new CONFIG.MeasuredTemplate.documentClass(templateData, { parent: canvas.scene })\r\n    new CONFIG.MeasuredTemplate.objectClass(templateDoc).drawPreview()\r\n}\r\n\r\n// TODO remove once it is in the system\r\nfunction getTokens(template, { collisionOrigin, collisionType = 'move' } = {}) {\r\n    if (!canvas.scene) return []\r\n    const { grid, dimensions } = canvas\r\n    if (!(grid && dimensions)) return []\r\n\r\n    const gridHighlight = grid.getHighlightLayer(template.highlightId)\r\n    if (!gridHighlight || grid.type !== CONST.GRID_TYPES.SQUARE) return []\r\n    const origin = collisionOrigin ?? template.center\r\n\r\n    // Get all the tokens that are inside the highlight bounds\r\n    const tokens = canvas.tokens.quadtree.getObjects(gridHighlight.getLocalBounds(undefined, true))\r\n\r\n    const containedTokens = []\r\n    for (const token of tokens) {\r\n        const tokenDoc = token.document\r\n\r\n        // Collect the position of all grid squares that this token occupies as \"x.y\"\r\n        const tokenPositions = []\r\n        for (let h = 0; h < tokenDoc.height; h++) {\r\n            const y = token.y + h * grid.size\r\n            tokenPositions.push(`${token.x}.${y}`)\r\n            if (tokenDoc.width > 1) {\r\n                for (let w = 1; w < tokenDoc.width; w++) {\r\n                    tokenPositions.push(`${token.x + w * grid.size}.${y}`)\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const position of tokenPositions) {\r\n            // Check if a position exists within this GridHiglight\r\n            if (!gridHighlight.positions.has(position)) {\r\n                continue\r\n            }\r\n            // Position of cell's top-left corner, in pixels\r\n            const [gx, gy] = position.split('.').map(s => Number(s))\r\n            // Position of cell's center in pixels\r\n            const destination = {\r\n                x: gx + dimensions.size * 0.5,\r\n                y: gy + dimensions.size * 0.5,\r\n            }\r\n            if (destination.x < 0 || destination.y < 0) continue\r\n\r\n            const hasCollision =\r\n                canvas.ready &&\r\n                collisionType &&\r\n                CONFIG.Canvas.polygonBackends[collisionType].testCollision(origin, destination, {\r\n                    type: collisionType,\r\n                    mode: 'any',\r\n                })\r\n\r\n            if (!hasCollision) {\r\n                containedTokens.push(token)\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return containedTokens\r\n}\r\n", "import { validateMessage } from '../chat.js'\r\nimport { COVERS, VISIBILITIES, VISIBILITY_VALUES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, getSetting, localize, templatePath } from '../module.js'\r\nimport { DegreeOfSuccess } from '../pf2e/success.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { deleteTokenTemplate } from '../template.js'\r\nimport { getTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nclass ValidationMenu extends BaseMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated && params.message) validateMessage(params.message)\r\n        return validated\r\n    }\r\n\r\n    get title() {\r\n        return localize('menu.validation.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('validation')\r\n    }\r\n\r\n    get selected() {\r\n        const selected = super.selected\r\n        if (selected.length) return selected\r\n\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        return getValidTokens(token)\r\n            .filter(t => t.actor.alliance !== alliance)\r\n            .map(t => t.id)\r\n    }\r\n\r\n    getSavedData(converted = true) {\r\n        const data = super.getSavedData()\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    _convertData(data) {\r\n        const property = this.property\r\n        const scene = this.scene\r\n        const selected = this.selected\r\n        const defaultValue = defaultValues[property]\r\n        const propertyList = property === 'cover' ? COVERS : VISIBILITIES\r\n\r\n        for (const tokenId of selected) {\r\n            const token = scene.tokens.get(tokenId)\r\n            const fullProperty = `${tokenId}.${property}`\r\n            const currentValue = getProperty(data, fullProperty) ?? defaultValue\r\n\r\n            let processedValue = this.processValue({ token, value: currentValue })\r\n            if (!propertyList.includes(processedValue)) processedValue = currentValue\r\n\r\n            if (currentValue === processedValue) continue\r\n            setProperty(data, fullProperty, processedValue)\r\n        }\r\n\r\n        return data\r\n    }\r\n\r\n    processValue(params) {\r\n        throw new Error(`${this.constructor.name} doesn't have a 'processValue' method defined`)\r\n    }\r\n\r\n    getData(options) {\r\n        const { covers, visibilities, i18n } = super.getData(options)\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData(false)\r\n        const property = this.property\r\n\r\n        let selected = this.selected\r\n        let tokens = getValidTokens(this.token)\r\n\r\n        tokens = tokens.map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                selected: selected.includes(id),\r\n                ...BaseMenu.createPropertyData(original, current, property),\r\n            }\r\n        })\r\n\r\n        const validation = getSetting('validation')\r\n        if (validation === 'selected') tokens = tokens.filter(t => t.selected)\r\n        else if (validation === 'changed') tokens = tokens.filter(t => t.changed)\r\n\r\n        return {\r\n            ...this._spliIntoAlliances(tokens),\r\n            i18n,\r\n            property: property,\r\n            options: property === 'cover' ? covers : visibilities,\r\n            showSelected: validation === 'all',\r\n            showChanges: validation !== 'changed',\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.find('[data-action=cancel]').on('click', event => {\r\n            this.close()\r\n        })\r\n    }\r\n}\r\n\r\nexport class CoverValidationMenu extends ValidationMenu {\r\n    #value\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#value = params.value\r\n    }\r\n\r\n    get property() {\r\n        return 'cover'\r\n    }\r\n\r\n    processValue() {\r\n        return this.#value\r\n    }\r\n}\r\n\r\nclass VisibilityValidationMenu extends ValidationMenu {\r\n    #roll\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#roll = params.roll\r\n    }\r\n\r\n    get property() {\r\n        return 'visibility'\r\n    }\r\n\r\n    get roll() {\r\n        return this.#roll\r\n    }\r\n}\r\n\r\nexport class HideValidationMenu extends VisibilityValidationMenu {\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.perception.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n        const success = new DegreeOfSuccess(roll, dc).value\r\n\r\n        if (success >= DegreeOfSuccess.SUCCESS && visibility < VISIBILITY_VALUES.hidden) return 'hidden'\r\n        else if (success <= DegreeOfSuccess.FAILURE && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else return value\r\n    }\r\n}\r\n\r\nexport class PointOutValidationMenu extends VisibilityValidationMenu {\r\n    #originator\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#originator = params.originator\r\n    }\r\n\r\n    get selected() {\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        const originatorId = this.#originator.id\r\n        const data = getTokenData(token) ?? {}\r\n\r\n        return getValidTokens(token)\r\n            .filter(t => {\r\n                if (t.id === originatorId || t.actor.alliance === alliance) return false\r\n                const visibility = getProperty(data, `${t.id}.visibility`)\r\n                return VISIBILITY_VALUES[visibility] >= VISIBILITY_VALUES.undetected\r\n            })\r\n            .map(t => t.id)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        return VISIBILITY_VALUES[value] >= VISIBILITY_VALUES.undetected ? 'hidden' : value\r\n    }\r\n}\r\n\r\nclass ReverseVisibilityValidationMenu extends VisibilityValidationMenu {\r\n    getSavedData(converted = true) {\r\n        const thisId = this.token.id\r\n        const tokens = getValidTokens(this.token)\r\n        const data = {}\r\n\r\n        for (const token of tokens) {\r\n            const tokenData = getTokenData(token, thisId)\r\n            if (tokenData) data[token.id] = deepClone(tokenData)\r\n        }\r\n\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    getData() {\r\n        const parentData = super.getData()\r\n        parentData.isReversed = true\r\n        parentData.options = VISIBILITIES.map(value => ({ value, label: localize(`visibility.reversed.${value}`) }))\r\n        return parentData\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        const scene = this.scene\r\n        const thisId = this.token.id\r\n        const updates = []\r\n\r\n        for (const [tokenId, data] of Object.entries(currentData)) {\r\n            let update = { _id: tokenId }\r\n            const token = scene.tokens.get(tokenId)\r\n\r\n            if (token) {\r\n                if (data.visibility === defaultValues.visibility) delete data.visibility\r\n\r\n                const original = getTokenData(token, thisId)\r\n                if (original?.visibility === data.visibility) continue\r\n\r\n                if (!original.cover && !data.visibility) {\r\n                    update[`flags.${MODULE_ID}.data.-=${thisId}`] = true\r\n                } else if (!data.visibility) {\r\n                    update[`flags.${MODULE_ID}.data.${thisId}.-=visibility`] = true\r\n                } else {\r\n                    update[`flags.${MODULE_ID}.data.${thisId}.visibility`] = data.visibility\r\n                }\r\n            } else update[`flags.${MODULE_ID}.data.-=${thisId}`] = true\r\n\r\n            updates.push(update)\r\n        }\r\n\r\n        scene.updateEmbeddedDocuments('Token', updates)\r\n    }\r\n}\r\n\r\nexport class SeekValidationMenu extends ReverseVisibilityValidationMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated) deleteTokenTemplate(params.token)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.skills.stealth.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n        const success = new DegreeOfSuccess(roll, dc).value\r\n\r\n        if (success >= DegreeOfSuccess.CRITICAL_SUCCESS && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (success >= DegreeOfSuccess.SUCCESS && visibility === VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (success >= DegreeOfSuccess.SUCCESS && visibility >= VISIBILITY_VALUES.undetected) return 'hidden'\r\n        else return value\r\n    }\r\n}\r\n", "import { getActorToken, getCoverEffect, isProne } from './actor.js'\r\nimport { CoverValidationMenu, HideValidationMenu, SeekValidationMenu } from './apps/validation.js'\r\nimport { createTokenMessage } from './chat.js'\r\nimport { VISIBILITY_VALUES, defaultValues } from './constants.js'\r\nimport { createCoverSource } from './effect.js'\r\nimport { MODULE_ID, getSetting, localize, templatePath } from './module.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { createSeekTemplate, deleteTokenTemplate } from './template.js'\r\nimport { clearTokenData, getTokenData, setTokenData } from './token.js'\r\nimport { getPrototype } from './utils.js'\r\n\r\nexport function setupActions() {\r\n    const hide = game.pf2e.actions.get('hide')\r\n    const BaseAction = getPrototype(hide, 2).constructor\r\n    const BaseActionVariant = getPrototype(hide.toActionVariant(), 2).constructor\r\n    const SingleCheckAction = getPrototype(hide, 1).constructor\r\n    const SingleCheckActionVariant = getPrototype(hide.toActionVariant(), 1).constructor\r\n\r\n    setupCover(BaseAction, BaseActionVariant)\r\n    setupHide(SingleCheckAction, SingleCheckActionVariant)\r\n    setupSeek(SingleCheckAction, SingleCheckActionVariant)\r\n    setupPointOut(BaseAction, BaseActionVariant)\r\n}\r\n\r\n// function setupSneak(SingleCheckAction, SingleCheckActionVariant) {\r\n//     class SneakVariant extends SingleCheckActionVariant {\r\n//         // async use(options = {}) {\r\n//         //     const action = game.i18n.localize('PF2E.Actions.Hide.Title')\r\n//         //     const token = getSelectedToken(options, action)\r\n//         //     if (!token) return\r\n//         //     options.actors = [token.actor]\r\n//         //     const result = await super.use(options)\r\n//         //     if (game.user.isGM) {\r\n//         //         openVisibilityValidationMenu({ token, result, ValidationMenu: HideValidationMenu })\r\n//         //     }\r\n//         //     return result\r\n//         // }\r\n//     }\r\n\r\n//     class Sneak extends SingleCheckAction {\r\n//         constructor() {\r\n//             super({\r\n//                 cost: 1,\r\n//                 description: `PF2E.Actions.Sneak.Description`,\r\n//                 name: `PF2E.Actions.Sneak.Title`,\r\n//                 notes: [\r\n//                     { outcome: ['success', 'criticalSuccess'], text: `PF2E.Actions.Sneak.Notes.success` },\r\n//                     { outcome: ['failure'], text: `PF2E.Actions.Sneak.Notes.failure` },\r\n//                     { outcome: ['criticalFailure'], text: `PF2E.Actions.Sneak.Notes.criticalFailure` },\r\n//                 ],\r\n//                 rollOptions: ['action:sneak'],\r\n//                 slug: 'sneak',\r\n//                 traits: ['move', 'secret'],\r\n//             })\r\n//         }\r\n\r\n//         toActionVariant(data) {\r\n//             return new SneakVariant(this, data)\r\n//         }\r\n//     }\r\n\r\n//     game.pf2e.actions.set('sneak', new Sneak())\r\n// }\r\n\r\nfunction setupPointOut(BaseAction, BaseActionVariant) {\r\n    class PointOutVariant extends BaseActionVariant {\r\n        async use(options = {}) {\r\n            const action = localize('action.point-out')\r\n            const token = getSelectedToken(options, action)\r\n            if (token) pointOut(this, token)\r\n        }\r\n    }\r\n\r\n    class PointOut extends BaseAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                name: `${MODULE_ID}.action.point-out`,\r\n                description: `${MODULE_ID}.action.point-out.description`,\r\n                rollOptions: ['action:point-out'],\r\n                slug: 'point-out',\r\n                traits: ['auditory', 'manipulate', 'visual'],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data = {}) {\r\n            data.name ??= this.name\r\n            return new PointOutVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('point-out', new PointOut())\r\n}\r\n\r\nasync function pointOut({ name, traits }, token) {\r\n    const target = game.user.targets.filter(t => t.actor).first()\r\n    const visibility = target ? getTokenData(target, token.id, 'visibility') : undefined\r\n    const isVisible = target && VISIBILITY_VALUES[visibility] < VISIBILITY_VALUES.undetected\r\n\r\n    let description\r\n    if (isVisible) {\r\n        const dc = target.actor.skills.stealth.dc.value\r\n        description = localize('message.point-out.short-check', {\r\n            check: `@Check[type:perception|dc:${dc}|traits:auditory,manipulate,visual|showDC:gm]`,\r\n        })\r\n    } else description = localize('message.point-out.short')\r\n\r\n    const content = await renderTemplate(templatePath('point-out'), {\r\n        description,\r\n        name,\r\n        traits: traits.map(slug => ({\r\n            slug,\r\n            tooltip: CONFIG.PF2E.traitsDescriptions[slug],\r\n            name: CONFIG.PF2E.actionTraits[slug],\r\n        })),\r\n    })\r\n\r\n    const flags = {\r\n        pointOut: isVisible ? target.id : undefined,\r\n    }\r\n\r\n    createTokenMessage({ content, token, flags })\r\n}\r\n\r\nfunction setupSeek(SingleCheckAction, SingleCheckActionVariant) {\r\n    class SeekVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Seek.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            if (!(await seek(token))) return deleteTokenTemplate(token)\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                const { selected } = result[0].message.getFlag('pf2e', 'context')\r\n                if (selected) openVisibilityValidationMenu({ token, result, ValidationMenu: SeekValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Seek extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.Seek.Description',\r\n                name: 'PF2E.Actions.Seek.Title',\r\n                notes: [\r\n                    { outcome: ['criticalSuccess'], text: 'PF2E.Actions.Seek.Notes.criticalSuccess' },\r\n                    { outcome: ['success'], text: 'PF2E.Actions.Seek.Notes.success' },\r\n                ],\r\n                rollOptions: ['action:seek'],\r\n                slug: 'seek',\r\n                statistic: 'perception',\r\n                traits: ['concentrate', 'secret'],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new SeekVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('seek', new Seek())\r\n}\r\n\r\nasync function seek(token) {\r\n    const unit = game.i18n.localize('PF2E.Foot')\r\n\r\n    let content = '<p style=\"margin: 0 0.3em; text-align: center;\">'\r\n    content += `${localize('dialog.seek.hint')}</p><p>`\r\n\r\n    content += createButton(\r\n        'create-cone',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 30,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.cone),\r\n        })\r\n    )\r\n\r\n    content += createButton(\r\n        'create-burst',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 15,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.burst),\r\n        })\r\n    )\r\n\r\n    content += '</p>'\r\n\r\n    return Dialog.wait(\r\n        {\r\n            title: `${token.name} - ${game.i18n.localize('PF2E.Actions.Seek.Title')}`,\r\n            content,\r\n            buttons: {\r\n                ok: {\r\n                    icon: '<i class=\"fa-solid fa-check\"></i>',\r\n                    label: localize('dialog.seek.accept'),\r\n                    callback: () => true,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fa-solid fa-xmark\"></i>',\r\n                    label: localize('dialog.seek.cancel'),\r\n                    callback: html => false,\r\n                },\r\n            },\r\n            close: () => false,\r\n            render: html => {\r\n                const content = html.filter('.dialog-content')\r\n                content.find('[data-action=create-cone], [data-action=create-burst]').on('click', event => {\r\n                    const { action } = event.currentTarget.dataset\r\n                    deleteTokenTemplate(token)\r\n                    createSeekTemplate(action === 'create-cone' ? 'cone' : 'burst', token)\r\n                })\r\n            },\r\n        },\r\n        { width: 300, left: 10 }\r\n    )\r\n}\r\n\r\nfunction setupHide(SingleCheckAction, SingleCheckActionVariant) {\r\n    class HideVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Hide.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                openVisibilityValidationMenu({ token, result, ValidationMenu: HideValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Hide extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: `PF2E.Actions.Hide.Description`,\r\n                name: `PF2E.Actions.Hide.Title`,\r\n                rollOptions: ['action:hide'],\r\n                slug: 'hide',\r\n                statistic: 'stealth',\r\n                traits: ['secret'],\r\n                notes: [{ outcome: ['success', 'criticalSuccess'], text: `PF2E.Actions.Hide.Notes.success` }],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new HideVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('hide', new Hide())\r\n}\r\n\r\nfunction setupCover(BaseAction, BaseActionVariant) {\r\n    class TakeCoverVariant extends BaseActionVariant {\r\n        async use(options = {}) {\r\n            const action = localize('action.take-cover')\r\n            const token = getSelectedToken(options, action)\r\n            if (token) takeCover(token)\r\n        }\r\n    }\r\n\r\n    class TakeCover extends BaseAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.TakeCover.Description',\r\n                img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n                name: 'PF2E.Actions.TakeCover.Title',\r\n                slug: 'take-cover',\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new TakeCoverVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('take-cover', new TakeCover())\r\n}\r\n\r\nasync function takeCover(token) {\r\n    const actor = token.actor\r\n    const cover = getCoverEffect(actor)\r\n\r\n    const targets = validateTokens(token, game.user.targets.ids)\r\n    if (cover && !targets.length) return cover.delete()\r\n\r\n    const data = getTokenData(token) ?? {}\r\n    const covers = Object.entries(data).reduce((covers, [tokenId, { cover }]) => {\r\n        if (cover) covers[tokenId] = cover\r\n        return covers\r\n    }, {})\r\n\r\n    const content = await renderTemplate(templatePath('covers-dialog'), {\r\n        i18n: localize,\r\n        hasTargets: !!targets.length,\r\n        hasCovers: !isEmpty(covers),\r\n        hasTargetCover: targets.some(id => id in covers),\r\n        isProne: isProne(actor),\r\n    })\r\n\r\n    const dialog = new Dialog({\r\n        title: `${token.name} - ${localize('action.take-cover')}`,\r\n        content,\r\n        buttons: {},\r\n        render: html => {\r\n            html.find('button').on('click', async event => {\r\n                const { level } = event.currentTarget.dataset\r\n                const skip = getSetting('skip-cover')\r\n\r\n                const process = async (cover, selected) => {\r\n                    selected = selected ? targets : undefined\r\n\r\n                    const flavor = cover === defaultValues.cover ? (selected ? 'remove' : 'remove-all') : 'take'\r\n                    const message = await createTokenMessage({\r\n                        content: localize(`message.cover.${flavor}`, { cover: localize(`cover.${cover}`) }),\r\n                        flags: { selected, cover, skipWait: skip },\r\n                        token,\r\n                    })\r\n\r\n                    if (skip) {\r\n                        if (cover === defaultValues.cover && !selected) return clearTokenData(token)\r\n                        const data = deepClone(getTokenData(token)) ?? {}\r\n                        for (const tokenId of targets) {\r\n                            setProperty(data, `${tokenId}.cover`, cover)\r\n                        }\r\n                        return setTokenData(token, data)\r\n                    } else if (game.user.isGM) {\r\n                        CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n                    }\r\n                }\r\n\r\n                if (level === 'remove-all') process(defaultValues.cover)\r\n                else if (level === 'remove') process(defaultValues.cover, true)\r\n                else if (targets.length) process(level, true)\r\n                else {\r\n                    const source = createCoverSource(level)\r\n                    actor.createEmbeddedDocuments('Item', [source])\r\n                }\r\n\r\n                dialog.close()\r\n            })\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nfunction getSelectedToken(options, action) {\r\n    let tokens = options.tokens?.filter(t => t.actor) ?? []\r\n    if (!Array.isArray(tokens)) tokens = [tokens]\r\n\r\n    let actors = options.actors ?? []\r\n    if (!Array.isArray(actors)) actors = [actors]\r\n\r\n    if (!tokens.length && actors.length === 1) tokens = [getActorToken(actors[0])].filter(Boolean)\r\n    if (!tokens.length) tokens = canvas.tokens.controlled.filter(t => t.actor)\r\n    if (!tokens.length) tokens = [getActorToken(game.user.character)].filter(Boolean)\r\n\r\n    if (tokens.length > 1) {\r\n        ui.notifications.warn(localize('action.only-one', { action }))\r\n        return\r\n    } else if (!tokens.length) {\r\n        ui.notifications.warn(localize('action.must-one', { action }))\r\n        return\r\n    }\r\n\r\n    const token = tokens[0]\r\n    if (!token?.actor?.isOfType('creature')) {\r\n        ui.notifications.warn(localize('action.must-creature', { action }))\r\n        return\r\n    }\r\n\r\n    return token\r\n}\r\n\r\nfunction createButton(action, icon, label) {\r\n    return `<button type=\"button\" data-action=\"${action}\" style=\"margin: 0 0 5px; padding: 0;\">\r\n    <i class=\"${icon}\"></i> ${label}</button>\r\n</button>`\r\n}\r\n\r\nfunction openVisibilityValidationMenu({ token, result, ValidationMenu }) {\r\n    const roll = result[0].roll\r\n    const message = result[0].message\r\n    const selected = message.getFlag('pf2e', 'context.selected')\r\n    ValidationMenu.openMenu({ token, roll, selected, message })\r\n}\r\n", "import { getActorToken, getCoverEffect, isProne } from './actor.js'\r\nimport { COVERS, COVER_UUID, VISIBILITY_VALUES, attackCheckRoll, validCheckRoll } from './constants.js'\r\nimport { createCoverSource, findChoiceSetRule } from './effect.js'\r\nimport { MODULE_ID, getFlag, getSetting, localize } from './module.js'\r\nimport { optionsToObject, updateVisibilityFromOptions } from './options.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { getTokenTemplateTokens } from './template.js'\r\nimport { getVisibility } from './token.js'\r\n\r\nexport async function checkRoll(wrapped, ...args) {\r\n    const context = args[1]\r\n    if (!context) return wrapped(...args)\r\n\r\n    if (Array.isArray(context.options)) context.options = new Set(context.options)\r\n\r\n    const { actor, createMessage = 'true', type, token, target, isReroll } = context\r\n    const originToken = token ?? getActorToken(actor)\r\n    const targetToken = target?.token\r\n    const isAttackRoll = attackCheckRoll.includes(type)\r\n    const flatCheck = getSetting('flat-check')\r\n\r\n    if (\r\n        isReroll ||\r\n        !createMessage ||\r\n        !originToken ||\r\n        !validCheckRoll.includes(type) ||\r\n        (isAttackRoll && (!targetToken || flatCheck === 'none'))\r\n    )\r\n        return wrapped(...args)\r\n\r\n    if (isAttackRoll && targetToken.actor) {\r\n        const options = optionsToObject(context.options).origin\r\n        const visibility = updateVisibilityFromOptions(getVisibility(targetToken, originToken), options?.visibility)\r\n\r\n        if (!visibility) return wrapped(...args)\r\n        if (visibility === 'concealed' && originToken.actor?.hasLowLightVision) return wrapped(...args)\r\n\r\n        const optionDC = options?.[visibility]?.dc?.[0]\r\n        if (optionDC == 0) return wrapped(...args)\r\n\r\n        const dc = optionDC ?? (visibility === 'concealed' ? 5 : 11)\r\n        const roll = await new Roll('1d20').evaluate({ async: true })\r\n        const total = roll.total\r\n        const isSuccess = total >= dc\r\n        const isUndetected = VISIBILITY_VALUES[visibility] >= VISIBILITY_VALUES.undetected\r\n        const success = isSuccess ? 2 : 1\r\n\r\n        let flavor = `${game.i18n.localize('PF2E.FlatCheck')}:`\r\n        flavor += `<strong> ${game.i18n.localize(`PF2E.condition.${visibility}.name`)}</strong>`\r\n\r\n        flavor += (\r\n            await game.pf2e.Check.createResultFlavor({\r\n                target,\r\n                degree: {\r\n                    value: success,\r\n                    unadjusted: success,\r\n                    adjustment: null,\r\n                    dieResult: total,\r\n                    rollTotal: total,\r\n                    dc: { value: dc },\r\n                },\r\n            })\r\n        ).outerHTML\r\n\r\n        const messageData = {\r\n            flavor,\r\n            speaker: ChatMessage.getSpeaker({ token: originToken instanceof Token ? originToken.document : originToken }),\r\n        }\r\n\r\n        if (isUndetected) {\r\n            context.options.add('secret')\r\n            context.isSuccess = isSuccess\r\n            context.visibility = visibility\r\n\r\n            let blindCheck = `${game.i18n.localize('PF2E.FlatCheck')}:`\r\n            blindCheck += `<strong> ${game.i18n.localize(`PF2E.condition.undetected.name`)}</strong>`\r\n            messageData.flags = {\r\n                [MODULE_ID]: {\r\n                    blindCheck,\r\n                },\r\n            }\r\n        }\r\n\r\n        await roll.toMessage(messageData, { rollMode: isUndetected ? (game.user.isGM ? 'gmroll' : 'blindroll') : 'roll' })\r\n\r\n        if (flatCheck !== 'roll' && !isUndetected && !isSuccess) return\r\n    } else if (context.options.has('action:hide')) {\r\n        context.selected = game.user.targets.ids\r\n        // } else if (context.options.has('action:sneak')) {\r\n        //     context.selected = game.user.targets.ids\r\n    } else if (context.options.has('action:seek')) {\r\n        const highlighted = getTokenTemplateTokens(originToken)\r\n        if (highlighted === undefined) return wrapped(...args)\r\n\r\n        const tokens = highlighted ?? Array.from(game.user.targets)\r\n\r\n        context.selected = validateTokens(originToken, tokens)\r\n            .filter(t => !t.document.hidden)\r\n            .map(t => t.id)\r\n    }\r\n\r\n    return wrapped(...args)\r\n}\r\n\r\nexport function renderCheckModifiersDialog(dialog, html) {\r\n    const { createMessage = 'true', type, token, target, isReroll, options, dc } = dialog.context\r\n    const originToken = token\r\n    const targetToken = target?.token\r\n    const targetActor = target?.actor\r\n\r\n    if (isReroll || !createMessage || !originToken || !targetToken || !targetActor || !attackCheckRoll.includes(type)) return\r\n\r\n    const coverEffect = getCoverEffect(targetActor)\r\n    const currentCover = coverEffect\r\n        ? findChoiceSetRule(coverEffect)?.selection.level ?? getFlag(coverEffect, 'level')\r\n        : undefined\r\n    let coverOverride = dialog[MODULE_ID]?.coverOverride ?? currentCover\r\n\r\n    let template = '<div class=\"roll-mode-panel\">'\r\n    template += `<div class=\"label\">${localize('dice-checks.cover.label')}</div>`\r\n    template += `<select name=\"overrideCover\"><option value=\"\">${localize('dice-checks.cover.none')}</option>`\r\n\r\n    const covers = isProne(targetActor) ? COVERS.slice(1) : COVERS.slice(1, -1)\r\n\r\n    covers.forEach(slug => {\r\n        const selected = slug === coverOverride ? 'selected' : ''\r\n        const label = localize(`cover.${slug}`)\r\n        template += `<option value=\"${slug}\" ${selected}>${label}</option>`\r\n    })\r\n\r\n    template += '</select></div>'\r\n\r\n    // visibility override here\r\n\r\n    template += '<hr>'\r\n\r\n    html.find('.roll-mode-panel').before(template)\r\n\r\n    html.find('select[name=overrideCover]').on('change', event => {\r\n        const value = event.currentTarget.value || undefined\r\n        setProperty(dialog, `${MODULE_ID}.coverOverride`, value)\r\n        coverOverride = value\r\n    })\r\n\r\n    html.find('button.roll')[0].addEventListener(\r\n        'click',\r\n        event => {\r\n            event.preventDefault()\r\n            event.stopPropagation()\r\n            event.stopImmediatePropagation()\r\n\r\n            let modified = false\r\n            const items = deepClone(targetActor._source.items)\r\n\r\n            if (coverOverride !== currentCover) {\r\n                modified = true\r\n\r\n                const coverIndex = items.findIndex(i => getProperty(i, 'flags.core.sourceId') === COVER_UUID)\r\n                if (coverIndex !== -1) items.splice(coverIndex, 1)\r\n\r\n                if (coverOverride) {\r\n                    const source = createCoverSource(coverOverride)\r\n                    items.push(source)\r\n                }\r\n            }\r\n\r\n            if (modified) {\r\n                target.actor = targetActor.clone({ items }, { keepId: true })\r\n\r\n                if (dc?.slug) {\r\n                    const statistic = target.actor.getStatistic(dc.slug)?.dc\r\n                    if (statistic) {\r\n                        dc.value = statistic.value\r\n                        dc.statistic = statistic\r\n                    }\r\n                }\r\n            }\r\n\r\n            dialog.resolve(true)\r\n            dialog.isResolved = true\r\n            dialog.close()\r\n        },\r\n        true\r\n    )\r\n\r\n    dialog.setPosition()\r\n}\r\n", "import { VISIBILITY_VALUES } from './constants.js'\r\nimport { getTokenData } from './token.js'\r\n\r\nexport function basicSightCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return !isValidTarget(target) || (!isUndetected(target, 'basicSight') && !isHidden(target))\r\n}\r\n\r\nexport function hearingCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    if (!game.settings.get('pf2e', 'automation.rulesBasedVision')) return true\r\n    return !visionSource.object.actor?.hasCondition('deafened') && isValidTarget(target) && !isUndetected(target, 'hearing')\r\n}\r\n\r\nexport function feelTremorCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return isValidTarget(target) && !isUndetected(target, 'feelTremor')\r\n}\r\n\r\nfunction isValidTarget(target) {\r\n    return !!(target instanceof Token && target.actor)\r\n}\r\n\r\nfunction reachesThreshold(target, tokens, threshold) {\r\n    for (const origin of tokens) {\r\n        const visibility = getTokenData(target, origin.id, 'visibility')\r\n        if (VISIBILITY_VALUES[visibility] >= threshold) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isUndetected(target, mode, unnoticed = false) {\r\n    const tokens = game.user.isGM ? canvas.tokens.controlled : target.scene.tokens.filter(t => t.isOwner)\r\n    const filtered = tokens.filter(t => t.detectionModes.some(d => d.id === mode))\r\n    return reachesThreshold(target, filtered, unnoticed ? VISIBILITY_VALUES.unnoticed : VISIBILITY_VALUES.undetected)\r\n}\r\n\r\nfunction isHidden(target) {\r\n    let tokens = canvas.tokens.controlled\r\n    if (!game.user.isGM && !tokens.length) {\r\n        tokens = target.scene.tokens.filter(t => t.isOwner)\r\n        if (tokens.length !== 1) return false\r\n    }\r\n    return reachesThreshold(target, tokens, VISIBILITY_VALUES.hidden)\r\n}\r\n", "import { isUndetected } from './detection.js'\r\nimport { getSetting, localize, setSetting } from './module.js'\r\n\r\nexport function renderCombatTracker(tracker, html) {\r\n    if (getSetting('target')) setupToggleTarget(html)\r\n    hideUndetected(html)\r\n}\r\n\r\nfunction hideUndetected(html) {\r\n    if (!canvas.ready) return\r\n\r\n    const combatants = game.combats.viewed?.combatants\r\n    if (!combatants?.size) return\r\n\r\n    html.find('#combat-tracker .combatant').each((i, li) => {\r\n        const { combatantId } = li.dataset\r\n        const token = combatants.get(combatantId ?? '')?.token\r\n        if (!token) return\r\n        if (isUndetected(token, 'basicSight', true)) li.remove()\r\n    })\r\n}\r\n\r\nfunction setupToggleTarget(html) {\r\n    html.find('[data-control=toggleTarget]').each((_, el) => {\r\n        el.addEventListener(\r\n            'click',\r\n            event => {\r\n                event.preventDefault()\r\n                event.stopPropagation()\r\n                event.stopImmediatePropagation()\r\n\r\n                const { combatantId } = event.currentTarget.closest('.combatant').dataset\r\n                const combatant = game.combats.viewed.combatants.get(combatantId ?? '')\r\n                const token = combatant?.token\r\n                if (!token) return\r\n\r\n                const isTargeted = Array.from(game.user.targets).some(t => t.document === token)\r\n                token.object.setTarget(!isTargeted, { releaseOthers: !event.shiftKey })\r\n            },\r\n            true\r\n        )\r\n    })\r\n}\r\n\r\nexport function renderCombatTrackerConfig(config, html) {\r\n    const checked = getSetting('encounter')\r\n\r\n    html.find('.form-group').last().after(`<div class=\"form-group\">\r\n    <label>${localize('settings.encounter.name')}</label>\r\n    <input type=\"checkbox\" name=\"pf2e-perception.encounter\" ${checked ? 'checked' : ''}>\r\n    <p class=\"notes\">${localize('settings.encounter.short')}</p>\r\n</div>`)\r\n\r\n    html.find('input[name=\"pf2e-perception.encounter\"]').on('change', event => {\r\n        const checked = event.currentTarget.checked\r\n        setSetting('encounter', checked)\r\n    })\r\n}\r\n", "import { ICONS_PATHS } from '../constants.js'\r\nimport { getSetting, localize, setSetting, templatePath } from '../module.js'\r\n\r\nconst ICONS = ['cover', 'concealed', 'hidden', 'undetected', 'unnoticed']\r\n\r\nexport class IconPathMenu extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            template: templatePath('icon-path-menu'),\r\n            title: localize('settings.icon-path.name'),\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    getData() {\r\n        const saved = getSetting('icon-path')\r\n\r\n        const icons = ICONS.map(name => ({\r\n            name,\r\n            placeholder: ICONS_PATHS[name],\r\n            value: saved[name] ?? '',\r\n            label: name === 'cover' ? localize('icon-path.cover') : game.i18n.localize(CONFIG.PF2E.conditionTypes[name]),\r\n        }))\r\n\r\n        return {\r\n            icons,\r\n            i18n: localize,\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.find('button[name=cancel]').on('click', event => {\r\n            event.prefentDefault()\r\n            this.close()\r\n        })\r\n    }\r\n\r\n    async _updateObject(event, formData) {\r\n        setSetting('icon-path', formData)\r\n    }\r\n}\r\n", "import { IconPathMenu } from './apps/icon-path-menu.js'\r\nimport { MODULE_ID } from './module.js'\r\n\r\nexport function registerSettings() {\r\n    register('icon-path', Object, {}, { config: false })\r\n    game.settings.registerMenu(MODULE_ID, 'icon-path-menu', {\r\n        name: path('icon-path', 'name'),\r\n        label: path('icon-path', 'label'),\r\n        icon: 'fa-solid fa-list',\r\n        restricted: true,\r\n        type: IconPathMenu,\r\n    })\r\n\r\n    register('permission', String, CONST.USER_ROLES.GAMEMASTER, {\r\n        choices: {\r\n            1: path('permission', 'choices.1'),\r\n            2: path('permission', 'choices.2'),\r\n            3: path('permission', 'choices.3'),\r\n            4: path('permission', 'choices.4'),\r\n        },\r\n    })\r\n\r\n    register('target', Boolean, true, {\r\n        onChange: () => ui.combat?.render(),\r\n    })\r\n\r\n    register('lesser', String, 'ten', {\r\n        choices: {\r\n            none: path('lesser', 'choices.none'),\r\n            cross: path('lesser', 'choices.cross'),\r\n            zero: path('lesser', 'choices.zero'),\r\n            ten: path('lesser', 'choices.ten'),\r\n            twenty: path('lesser', 'choices.twenty'),\r\n        },\r\n    })\r\n\r\n    register('standard', Boolean, true)\r\n\r\n    register('standard-type', String, 'center', {\r\n        choices: {\r\n            center: path('standard-type', 'choices.center'),\r\n            points: path('standard-type', 'choices.points'),\r\n            // corners: path('standard-type', 'choices.corners'),\r\n        },\r\n    })\r\n\r\n    register('skip-cover', Boolean, true)\r\n\r\n    register('validation', String, 'all', {\r\n        choices: {\r\n            all: path('validation', 'choices.all'),\r\n            selected: path('validation', 'choices.selected'),\r\n            changed: path('validation', 'choices.changed'),\r\n        },\r\n    })\r\n\r\n    register('exposure', Boolean, true)\r\n\r\n    register('flat-check', String, 'cancel', {\r\n        choices: {\r\n            none: path('flat-check', 'choices.none'),\r\n            roll: path('flat-check', 'choices.roll'),\r\n            cancel: path('flat-check', 'choices.cancel'),\r\n        },\r\n    })\r\n\r\n    register('encounter', Boolean, false)\r\n}\r\n\r\nfunction path(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction register(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        scope: 'world',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n        ...extra,\r\n    })\r\n}\r\n", "import { setupActions } from './action.js'\r\nimport { getActorToken, getCoverEffect, getRollContext, isProne } from './actor.js'\r\nimport { renderChatMessage } from './chat.js'\r\nimport { checkRoll, renderCheckModifiersDialog } from './check.js'\r\nimport { renderCombatTracker, renderCombatTrackerConfig } from './combat.js'\r\nimport { basicSightCanDetect, feelTremorCanDetect, hearingCanDetect, isUndetected } from './detection.js'\r\nimport { clearDebug, lineIntersectWall, pointToTokenIntersectWall } from './geometry.js'\r\nimport { getLightExposure } from './lighting.js'\r\nimport { MODULE_ID } from './module.js'\r\nimport { getSceneSetting, getValidTokens, renderSceneConfig, validateTokens } from './scene.js'\r\nimport { registerSettings } from './settings.js'\r\nimport {\r\n    clearConditionals,\r\n    controlToken,\r\n    deleteToken,\r\n    getConditionalCover,\r\n    getCreatureCover,\r\n    getTokenData,\r\n    getVisibility,\r\n    hasStandardCover,\r\n    hoverToken,\r\n    pasteToken,\r\n    renderTokenHUD,\r\n    showAllConditionals,\r\n    showConditionals,\r\n    updateToken,\r\n} from './token.js'\r\n\r\nconst CHECK_ROLL = 'game.pf2e.Check.roll'\r\n\r\nconst GET_ROLL_CONTEXT = 'CONFIG.Actor.documentClass.prototype.getRollContext'\r\n\r\nconst BASIC_SIGHT_CAN_DETECT = 'CONFIG.Canvas.detectionModes.basicSight._canDetect'\r\nconst HEARING_CAN_DETECT = 'CONFIG.Canvas.detectionModes.hearing._canDetect'\r\nconst FEEL_TREMOR_CAN_DETECT = 'CONFIG.Canvas.detectionModes.feelTremor._canDetect'\r\n\r\nHooks.once('init', () => {\r\n    registerSettings()\r\n    setupActions()\r\n\r\n    libWrapper.register(MODULE_ID, CHECK_ROLL, checkRoll)\r\n\r\n    libWrapper.register(MODULE_ID, GET_ROLL_CONTEXT, getRollContext, 'OVERRIDE')\r\n\r\n    libWrapper.register(MODULE_ID, BASIC_SIGHT_CAN_DETECT, basicSightCanDetect)\r\n    libWrapper.register(MODULE_ID, HEARING_CAN_DETECT, hearingCanDetect)\r\n    libWrapper.register(MODULE_ID, FEEL_TREMOR_CAN_DETECT, feelTremorCanDetect)\r\n\r\n    const isGM = game.data.users.find(x => x._id === game.data.userId).role >= CONST.USER_ROLES.GAMEMASTER\r\n    if (isGM) {\r\n        Hooks.on('renderSceneConfig', renderSceneConfig)\r\n        Hooks.on('renderCombatTrackerConfig', renderCombatTrackerConfig)\r\n    } else {\r\n        Hooks.on('renderCombatTracker', renderCombatTracker)\r\n    }\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    game.modules.get(MODULE_ID).api = {\r\n        geometry: {\r\n            clearDebug,\r\n            lineIntersectWall,\r\n            pointToTokenIntersectWall,\r\n        },\r\n        token: {\r\n            getCreatureCover,\r\n            getVisibility,\r\n            clearConditionals,\r\n            showConditionals,\r\n            showAllConditionals,\r\n            hasStandardCover,\r\n            getTokenData,\r\n        },\r\n        lighting: {\r\n            getLightExposure,\r\n        },\r\n        actor: {\r\n            getActorToken,\r\n            isProne,\r\n            getCoverEffect,\r\n            getConditionalCover,\r\n        },\r\n        scene: {\r\n            getValidTokens,\r\n            validateTokens,\r\n            getSceneSetting,\r\n        },\r\n        detection: {\r\n            isUndetected,\r\n        },\r\n    }\r\n})\r\n\r\nHooks.on('hoverToken', hoverToken)\r\nHooks.on('pasteToken', pasteToken)\r\nHooks.on('updateToken', updateToken)\r\nHooks.on('deleteToken', deleteToken)\r\nHooks.on('controlToken', controlToken)\r\nHooks.on('renderTokenHUD', renderTokenHUD)\r\n\r\nHooks.on('canvasPan', () => clearConditionals())\r\n\r\nHooks.on('renderChatMessage', renderChatMessage)\r\n\r\nHooks.on('renderCheckModifiersDialog', renderCheckModifiersDialog)\r\n"],
  "mappings": "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",
  "names": ["path", "token", "tokenId", "path", "visibility", "pointOut", "ValidationMenu", "content", "covers", "cover", "data", "ValidationMenu", "isUndetected", "checked"]
}
