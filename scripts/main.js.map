{
  "version": 3,
  "sources": ["../src/constants.js", "../src/module.js", "../src/effect.js", "../src/options.js", "../src/pf2e/predicate.js", "../src/pf2e/helpers.js", "../src/scene.js", "../src/utils.js", "../src/apps/base-menu.js", "../src/apps/perception.js", "../src/geometry.js", "../src/lighting.js", "../src/token.js", "../src/actor.js", "../src/chat.js", "../src/pf2e/success.js", "../src/template.js", "../src/apps/validation.js", "../src/action.js", "../src/check.js", "../src/detection.js", "../src/combat.js", "../src/apps/icon-path-menu.js", "../src/settings.js", "../src/main.js"],
  "sourcesContent": ["export const COVER_UUID = 'Compendium.pf2e.other-effects.Item.I9lfZUiCwMiGogVi'\r\n\r\nexport const VISIBILITY_VALUES = {\r\n    [undefined]: 0,\r\n    observed: 0,\r\n    concealed: 1,\r\n    hidden: 2,\r\n    undetected: 3,\r\n    unnoticed: 4,\r\n}\r\n\r\nexport const VISIBILITIES = ['observed', 'concealed', 'hidden', 'undetected', 'unnoticed']\r\n\r\nexport const COVERS = ['none', 'lesser', 'standard', 'greater', 'greater-prone']\r\n\r\nexport const COVER_VALUES = {\r\n    [undefined]: 0,\r\n    none: 0,\r\n    lesser: 1,\r\n    standard: 2,\r\n    greater: 3,\r\n    'greater-prone': 4,\r\n}\r\n\r\nexport const defaultValues = {\r\n    cover: 'none',\r\n    visibility: 'observed',\r\n}\r\n\r\nexport const attackCheckRoll = ['attack-roll', 'spell-attack-roll']\r\n\r\nexport const validCheckRoll = [...attackCheckRoll, 'skill-check', 'perception-check']\r\n\r\nexport const ICONS_PATHS = {\r\n    cover: 'modules/pf2e-perception/images/cover.webp',\r\n    concealed: 'systems/pf2e/icons/conditions/concealed.webp',\r\n    hidden: 'systems/pf2e/icons/conditions/hidden.webp',\r\n    undetected: 'systems/pf2e/icons/conditions/undetected.webp',\r\n    unnoticed: 'systems/pf2e/icons/conditions/unnoticed.webp',\r\n}\r\n\r\nexport const VISION_LEVELS = {\r\n    BLINDED: 0,\r\n    NORMAL: 1,\r\n    LOWLIGHT: 2,\r\n    DARKVISION: 3,\r\n}\r\n", "export const MODULE_ID = 'pf2e-perception'\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function getFlag(doc, flag) {\r\n    return doc.getFlag(MODULE_ID, flag)\r\n}\r\n\r\nexport function setFlag(doc, flag, value) {\r\n    return doc.setFlag(MODULE_ID, flag, value)\r\n}\r\n\r\nexport function unsetFlag(doc, flag) {\r\n    return doc.unsetFlag(MODULE_ID, flag, true)\r\n}\r\n\r\nexport function getFlags(doc) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) ?? {}\r\n}\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function setSetting(setting, value) {\r\n    return game.settings.set(MODULE_ID, setting, value)\r\n}\r\n\r\nexport function hasPermission() {\r\n    return game.user.role >= getSetting('permission')\r\n}\r\n", "import { COVER_UUID, COVER_VALUES } from './constants.js'\r\nimport { MODULE_ID, localize } from './module.js'\r\n\r\nexport function createFlatFootedSource(visibility) {\r\n    const name = game.i18n.localize(`PF2E.condition.${visibility}.name`)\r\n    const condition = game.pf2e.ConditionManager.getCondition('flat-footed', { name })\r\n    return condition.toObject()\r\n}\r\n\r\nexport function createCoverSource(level, bonus) {\r\n    bonus ??= COVER_VALUES[level] === 3 ? 4 : COVER_VALUES[level]\r\n\r\n    return {\r\n        _id: 'I9lfZUiCwMiGogVi',\r\n        img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n        name: localize('cover', level),\r\n        system: {\r\n            description: {\r\n                gm: '',\r\n                value: \"<p>When you're behind an obstacle that could block weapons, guard you against explosions, and make you harder to detect, you're behind cover. Standard cover gives you a +2 circumstance bonus to AC, to Reflex saves against area effects, and to Stealth checks to Hide, Sneak, or otherwise avoid detection. You can increase this to greater cover using the Take Cover basic action, increasing the circumstance bonus to +4. If cover is especially light, typically when it's provided by a creature, you have lesser cover, which grants a +1 circumstance bonus to AC. A creature with standard cover or greater cover can attempt to use Stealth to Hide, but lesser cover isn't sufficient.</p>\",\r\n            },\r\n            rules: [\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-bonus:${bonus}` },\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-level:${level}` },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: [{ and: ['self:condition:prone', 'item:ranged'] }, { not: 'self:cover-level:greater-prone' }] },\r\n                    ],\r\n                    selector: 'ac',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['area-effect', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'reflex',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: ['action:hide', 'action:sneak', 'avoid-detection'] },\r\n                        { not: 'self:cover-level:greater-prone' },\r\n                    ],\r\n                    selector: 'stealth',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['action:avoid-notice', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'initiative',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n            ],\r\n            slug: 'effect-cover',\r\n        },\r\n        type: 'effect',\r\n        flags: {\r\n            core: { sourceId: COVER_UUID },\r\n            [MODULE_ID]: {\r\n                level,\r\n                bonus,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nexport function findChoiceSetRule(item, flag = undefined) {\r\n    if (!item) return undefined\r\n    return item.system.rules.find(rule => rule.key === 'ChoiceSet' && (!flag || rule.flag === flag))\r\n}\r\n", "import { COVERS, VISIBILITIES } from './constants.js'\r\n\r\nexport function optionsToObject(options, affects = 'origin') {\r\n    const obj = {}\r\n    options.forEach(o => {\r\n        const split = o.split(':')\r\n        if (split.at(1) !== 'pf2perception') return\r\n\r\n        const first = split.at(0) === 'self' ? affects : split.at(0)\r\n        const last = split.at(-1)\r\n        const path = [first, ...split.slice(2, -1)].join('.')\r\n\r\n        let value = getProperty(obj, path)\r\n        if (value) value.push(last)\r\n        else value = [last]\r\n\r\n        setProperty(obj, path, value)\r\n    })\r\n    return obj\r\n}\r\n\r\nexport function testOption(value, options, type, option) {\r\n    const test = values => {\r\n        if (!values) return false\r\n        return ['all', value].some(x => values.includes(x))\r\n    }\r\n    const selfResult = test(options.origin?.[type]?.[option])\r\n    const targetResult = test(options.target?.[type]?.[`${option}-self`])\r\n    return selfResult || targetResult\r\n}\r\n\r\nexport function getOption(options, ...path) {\r\n    const selfOption = getProperty(options.origin, path.join('.')) ?? []\r\n    const targetResult = getProperty(options.target, [...path.slice(0, -1), path.at(-1) + '-self'].join('.')) ?? []\r\n    return [...selfOption, ...targetResult]\r\n}\r\n\r\nexport function updateFromOptions(value, options, type) {\r\n    const list = type === 'cover' ? COVERS : VISIBILITIES\r\n    options = Array.isArray(options) ? optionsToObject(options) : options\r\n\r\n    if (value && testOption(value, options, type, 'cancel')) return undefined\r\n\r\n    const setValue = getOption(options, type, 'set')?.[0]\r\n    if (setValue && list.includes(setValue)) return setValue === list[0] ? undefined : setValue\r\n\r\n    if (value && testOption(value, options, type, 'reduce')) {\r\n        const index = list.indexOf(value)\r\n        return list[Math.max(0, index - 1)]\r\n    }\r\n\r\n    return value\r\n}\r\n", "import { isObject } from './helpers.js'\r\n\r\nexport class PredicatePF2e extends Array {\r\n    constructor(...statements) {\r\n        super(...(Array.isArray(statements[0]) ? statements[0] : statements))\r\n        this.isValid = PredicatePF2e.isValid(this)\r\n    }\r\n\r\n    /** Structurally validate the predicates */\r\n    static isValid(statements) {\r\n        return this.isArray(statements)\r\n    }\r\n\r\n    /** Is this an array of predicatation statements? */\r\n    static isArray(statements) {\r\n        return super.isArray(statements) && statements.every(s => StatementValidator.isStatement(s))\r\n    }\r\n\r\n    /** Test if the given predicate passes for the given list of options. */\r\n    static test(predicate = [], options) {\r\n        return predicate instanceof PredicatePF2e ? predicate.test(options) : new PredicatePF2e(...predicate).test(options)\r\n    }\r\n\r\n    /** Test this predicate against a domain of discourse */\r\n    test(options) {\r\n        if (this.length === 0) {\r\n            return true\r\n        } else if (!this.isValid) {\r\n            console.warn('PF2e System | The provided predicate set is malformed.')\r\n            return false\r\n        }\r\n\r\n        const domain = options instanceof Set ? options : new Set(options)\r\n        return this.every(s => this.#isTrue(s, domain))\r\n    }\r\n\r\n    toObject() {\r\n        return deepClone([...this])\r\n    }\r\n\r\n    clone() {\r\n        return new PredicatePF2e(this.toObject())\r\n    }\r\n\r\n    /** Is the provided statement true? */\r\n    #isTrue(statement, domain) {\r\n        return (\r\n            (typeof statement === 'string' && domain.has(statement)) ||\r\n            (StatementValidator.isBinaryOp(statement) && this.#testBinaryOp(statement, domain)) ||\r\n            (StatementValidator.isCompound(statement) && this.#testCompound(statement, domain))\r\n        )\r\n    }\r\n\r\n    #testBinaryOp(statement, domain) {\r\n        if ('eq' in statement) {\r\n            return domain.has(`${statement.eq[0]}:${statement.eq[1]}`)\r\n        } else {\r\n            const operator = Object.keys(statement)[0]\r\n\r\n            // Allow for tests of partial statements against numeric values\r\n            // E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\r\n            const [left, right] = Object.values(statement)[0]\r\n            const domainArray = Array.from(domain)\r\n            const getValues = operand => {\r\n                const maybeNumber = Number(operand)\r\n                if (!Number.isNaN(maybeNumber)) return [maybeNumber]\r\n                const pattern = new RegExp(String.raw`^${operand}:([^:]+)$`)\r\n                return domainArray.map(s => Number(pattern.exec(s)?.[1] || NaN)).filter(v => !Number.isNaN(v))\r\n            }\r\n            const leftValues = getValues(left)\r\n            const rightValues = getValues(right)\r\n\r\n            switch (operator) {\r\n                case 'gt':\r\n                    return leftValues.some(l => rightValues.every(r => l > r))\r\n                case 'gte':\r\n                    return leftValues.some(l => rightValues.every(r => l >= r))\r\n                case 'lt':\r\n                    return leftValues.some(l => rightValues.every(r => l < r))\r\n                case 'lte':\r\n                    return leftValues.some(l => rightValues.every(r => l <= r))\r\n                default:\r\n                    console.warn('PF2e System | Malformed binary operation encountered')\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Is the provided compound statement true? */\r\n    #testCompound(statement, domain) {\r\n        return (\r\n            ('and' in statement && statement.and.every(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('nand' in statement && !statement.nand.every(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('or' in statement && statement.or.some(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('xor' in statement && statement.xor.filter(subProp => this.#isTrue(subProp, domain)).length === 1) ||\r\n            ('nor' in statement && !statement.nor.some(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('not' in statement && !this.#isTrue(statement.not, domain)) ||\r\n            ('if' in statement && !(this.#isTrue(statement.if, domain) && !this.#isTrue(statement.then, domain)))\r\n        )\r\n    }\r\n}\r\n\r\nclass StatementValidator {\r\n    static isStatement(statement) {\r\n        return statement instanceof Object\r\n            ? this.isCompound(statement) || this.isBinaryOp(statement)\r\n            : typeof statement === 'string'\r\n            ? this.isAtomic(statement)\r\n            : false\r\n    }\r\n\r\n    static isAtomic(statement) {\r\n        return (typeof statement === 'string' && statement.length > 0) || this.isBinaryOp(statement)\r\n    }\r\n\r\n    static #binaryOperators = new Set(['eq', 'gt', 'gte', 'lt', 'lte'])\r\n\r\n    static isBinaryOp(statement) {\r\n        if (!isObject(statement)) return false\r\n        const entries = Object.entries(statement)\r\n        if (entries.length > 1) return false\r\n        const [operator, operands] = entries[0]\r\n        return (\r\n            this.#binaryOperators.has(operator) &&\r\n            Array.isArray(operands) &&\r\n            operands.length === 2 &&\r\n            typeof operands[0] === 'string' &&\r\n            ['string', 'number'].includes(typeof operands[1])\r\n        )\r\n    }\r\n\r\n    static isCompound(statement) {\r\n        return (\r\n            isObject(statement) &&\r\n            (this.isAnd(statement) ||\r\n                this.isOr(statement) ||\r\n                this.isNand(statement) ||\r\n                this.isXor(statement) ||\r\n                this.isNor(statement) ||\r\n                this.isNot(statement) ||\r\n                this.isIf(statement))\r\n        )\r\n    }\r\n\r\n    static isAnd(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.and) &&\r\n            statement.and.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNand(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nand) &&\r\n            statement.nand.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isOr(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.or) &&\r\n            statement.or.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isXor(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.xor) &&\r\n            statement.xor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNor(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nor) &&\r\n            statement.nor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNot(statement) {\r\n        return Object.keys(statement).length === 1 && !!statement.not && this.isStatement(statement.not)\r\n    }\r\n\r\n    static isIf(statement) {\r\n        return Object.keys(statement).length === 2 && this.isStatement(statement.if) && this.isStatement(statement.then)\r\n    }\r\n}\r\n", "import { PredicatePF2e } from './predicate.js'\r\n\r\nexport async function extractEphemeralEffects({ affects, origin, target, item, domains, options }) {\r\n    if (!(origin && target)) return []\r\n\r\n    const [effectsFrom, effectsTo] = affects === 'target' ? [origin, target] : [target, origin]\r\n    const fullOptions = [...options, ...effectsTo.getSelfRollOptions(affects)]\r\n    const resolvables = item ? (item.isOfType('spell') ? { spell: item } : { weapon: item }) : {}\r\n    return (\r\n        await Promise.all(\r\n            domains\r\n                .flatMap(s => effectsFrom.synthetics.ephemeralEffects[s]?.[affects] ?? [])\r\n                .map(d => d({ test: fullOptions, resolvables }))\r\n        )\r\n    ).flatMap(e => e ?? [])\r\n}\r\n\r\nexport function traitSlugToObject(trait, dictionary) {\r\n    // Look up trait labels from `npcAttackTraits` instead of `weaponTraits` in case a battle form attack is\r\n    // in use, which can include what are normally NPC-only traits\r\n    const traitObject = {\r\n        name: trait,\r\n        label: game.i18n.localize(dictionary[trait] ?? trait),\r\n    }\r\n    if (objectHasKey(CONFIG.PF2E.traitsDescriptions, trait)) {\r\n        traitObject.description = CONFIG.PF2E.traitsDescriptions[trait]\r\n    }\r\n\r\n    return traitObject\r\n}\r\n\r\nexport function objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nexport function getRangeIncrement(attackItem, distance) {\r\n    if (attackItem.isOfType('spell')) return null\r\n\r\n    return attackItem.rangeIncrement && typeof distance === 'number'\r\n        ? Math.max(Math.ceil(distance / attackItem.rangeIncrement), 1)\r\n        : null\r\n}\r\n\r\nexport function isOffGuardFromFlanking(actor) {\r\n    if (!actor.isOfType('creature')) return false\r\n\r\n    const { flanking } = actor.attributes\r\n    if (!flanking.flankable) return false\r\n\r\n    const rollOptions = actor.getRollOptions()\r\n    if (typeof flanking.flatFootable === 'number') {\r\n        return !PredicatePF2e.test([{ lte: ['origin:level', flanking.flatFootable] }], rollOptions)\r\n    }\r\n\r\n    return flanking.flatFootable\r\n}\r\n\r\nexport function isObject(value) {\r\n    return typeof value === 'object' && value !== null\r\n}\r\n", "import { getFlag, getSetting, localize } from './module.js'\r\n\r\nexport function renderSceneConfig(config, html) {\r\n    let settings = ''\r\n\r\n    const list = ['standard', 'npc-vision']\r\n    for (const setting of list) {\r\n        const checked = getSceneSetting(config.object, setting)\r\n\r\n        settings += `<div class=\"form-group pf2e-perception-injected\">\r\n    <label>${localize(`settings.${setting}.name`)}</label>\r\n    <input type=\"checkbox\" name=\"flags.pf2e-perception.${setting}\" ${checked ? 'checked' : ''}>\r\n    <p class=\"notes\">${localize(`settings.${setting}.short`)}</p>\r\n</div>`\r\n    }\r\n\r\n    settings += '<hr>'\r\n\r\n    html.find('.tab[data-tab=\"basic\"] hr').first().after(settings)\r\n\r\n    const addedHeight = html\r\n        .find('.pf2e-perception-injected')\r\n        .toArray()\r\n        .reduce((height, el) => ((height += el.clientHeight), height), 0)\r\n\r\n    config.setPosition({ top: config.position.top - addedHeight / 2 })\r\n}\r\n\r\nexport function getValidTokens(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    if (!(token instanceof TokenDocument)) return []\r\n\r\n    let tokens = token.scene.tokens.filter(t => t !== token && t.actor?.isOfType('creature'))\r\n\r\n    if (getSetting('encounter')) {\r\n        const combat = game.combats.active\r\n        if (!combat) return tokens\r\n\r\n        return tokens.filter(t => {\r\n            const actor = t.actor\r\n            const traits = actor.traits\r\n            return actor.type === 'familiar' || traits.has('minion') || traits.has('eidolon') || combat.getCombatantByToken(t.id)\r\n        })\r\n    }\r\n\r\n    return tokens\r\n}\r\n\r\nexport function validateTokens(token, tokens) {\r\n    const validToken = getValidTokens(token).map(t => t.id)\r\n    return tokens.filter(t => {\r\n        const id = t instanceof Token || t instanceof TokenDocument ? t.id : t\r\n        return validToken.includes(id)\r\n    })\r\n}\r\n\r\nexport function getSceneSetting(scene, setting) {\r\n    return getFlag(scene, setting) ?? getSetting(setting)\r\n}\r\n", "export function modifier(value) {\r\n    return value >= 0 ? `+${value}` : value\r\n}\r\n\r\nexport function omit(object, names) {\r\n    const set = new Set(names)\r\n    return Object.entries(object).reduce((acc, [name, value]) => {\r\n        if (!set.has(name)) acc[name] = value\r\n        return acc\r\n    }, {})\r\n}\r\n\r\nexport function getPrototype(obj, depth = 1) {\r\n    const prototype = Object.getPrototypeOf(obj)\r\n    if (depth > 1) return getPrototype(prototype, depth - 1)\r\n    return prototype\r\n}\r\n\r\nexport function sortByName(a, b) {\r\n    return a.name.localeCompare(b.name)\r\n}\r\n", "import { isProne } from '../actor.js'\r\nimport { COVERS, VISIBILITIES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, localize } from '../module.js'\r\nimport { validateTokens } from '../scene.js'\r\nimport { getTokenData, setTokenData } from '../token.js'\r\nimport { sortByName } from '../utils.js'\r\n\r\nexport class BaseMenu extends Application {\r\n    #token\r\n    #resolve\r\n    #selected\r\n    #_currentData\r\n    #hoverTokenListener\r\n\r\n    constructor({ token, resolve, selected = [] }, options = {}) {\r\n        super(options)\r\n\r\n        this.#token = token\r\n        this.#resolve = resolve\r\n        this.#selected = selected\r\n\r\n        this.#hoverTokenListener = (token, hover) => {\r\n            const tokenId = token.id\r\n            const tokens = this.element.find('[data-token-id]')\r\n            tokens.removeClass('hover')\r\n            if (hover) tokens.filter(`[data-token-id=${tokenId}]`).addClass('hover')\r\n        }\r\n\r\n        Hooks.on('hoverToken', this.#hoverTokenListener)\r\n    }\r\n\r\n    async close(options = {}) {\r\n        Hooks.off('hoverToken', this.#hoverTokenListener)\r\n        this.#resolve?.(options.resolve ?? false)\r\n        super.close(options)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            minimizable: false,\r\n        })\r\n    }\r\n\r\n    static async openMenu(params, options = {}) {\r\n        if (params.token instanceof TokenDocument) params.token = params.token.object\r\n        if (!params.token) {\r\n            ui.notifications.error(localize('menu.no-token'))\r\n            return\r\n        }\r\n\r\n        options.id = `${MODULE_ID}-${params.token.document.uuid}`\r\n\r\n        const win = Object.values(ui.windows).find(x => x.id === options.id)\r\n        if (win) win.close()\r\n\r\n        return new Promise(resolve => {\r\n            params.resolve = resolve\r\n            new this(params, options).render(true)\r\n        })\r\n    }\r\n\r\n    static createPropertyData(original, current, property) {\r\n        const defaultValue = defaultValues[property]\r\n        const originalValue = original[property] ?? defaultValue\r\n        const currentValue = current[property] ?? defaultValue\r\n        return {\r\n            original: originalValue,\r\n            current: currentValue,\r\n            changed: originalValue !== currentValue,\r\n            custom: currentValue !== defaultValue,\r\n            originalCustom: originalValue !== defaultValue,\r\n        }\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get document() {\r\n        return this.#token.document\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token.actor\r\n    }\r\n\r\n    get scene() {\r\n        return this.#token.scene\r\n    }\r\n\r\n    get selected() {\r\n        return this.#selected.length ? validateTokens(this.token, this.#selected) : []\r\n    }\r\n\r\n    get currentData() {\r\n        return deepClone(this.#currentData)\r\n    }\r\n\r\n    get #currentData() {\r\n        if (!this.#_currentData) this.#_currentData = this.getSavedData()\r\n        return this.#_currentData\r\n    }\r\n\r\n    getSavedData() {\r\n        const data = getTokenData(this.document) ?? {}\r\n        return deepClone(data)\r\n    }\r\n\r\n    reset() {\r\n        this.#_currentData = this.getSavedData()\r\n        this.#selected = []\r\n        this.render()\r\n    }\r\n\r\n    isSelected(token) {\r\n        const id = typeof token === 'object' ? token.id : token\r\n        return this.#selected.includes(id)\r\n    }\r\n\r\n    getData(options) {\r\n        const covers = COVERS.map(value => ({ value, label: localize(`cover.${value}`) }))\r\n\r\n        return {\r\n            i18n: localize,\r\n            covers: isProne(this.actor) ? covers : covers.slice(0, -1),\r\n            visibilities: VISIBILITIES.map(value => ({ value, label: localize(`visibility.${value}`) })),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('[data-token-id]').on('mouseenter', event => {\r\n            const { tokenId } = event.currentTarget.dataset\r\n            const token = this.scene.tokens.get(tokenId)?.object\r\n            if (!token || token.controlled) return\r\n            token._onHoverIn(event, { hoverOutOthers: true })\r\n        })\r\n\r\n        html.find('[data-action=close]').on('click', () => {\r\n            this.close({ resolve: true })\r\n        })\r\n\r\n        html.find('select[name=visibility], select[name=cover]').on('change', event => {\r\n            const target = event.currentTarget\r\n            const property = target.name\r\n            const defaultValue = defaultValues[property]\r\n            const value = target.value || defaultValue\r\n            const tokenId = target.closest('.token')?.dataset.tokenId\r\n            const tokenIds = tokenId ? [tokenId] : this.#selected\r\n\r\n            for (const tokenId of tokenIds) {\r\n                setProperty(this.#currentData, `${tokenId}.${property}`, value)\r\n            }\r\n\r\n            if (tokenId) {\r\n                target.classList.toggle('changed', value !== target.dataset.original)\r\n                target.classList.toggle('custom', value !== defaultValue)\r\n            } else this.render()\r\n        })\r\n\r\n        html.find('[data-action=accept]').on('click', event => {\r\n            this._saveData(this.#currentData)\r\n            this.close({ resolve: true })\r\n        })\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        setTokenData(this.document, currentData)\r\n    }\r\n\r\n    _setSelected(selected) {\r\n        this.#selected =\r\n            selected ??\r\n            this.element\r\n                .find('[data-token-id].ui-selected')\r\n                .toArray()\r\n                .map(el => el.dataset.tokenId)\r\n    }\r\n\r\n    _spliIntoAlliances(tokens) {\r\n        const allies = []\r\n        const enemies = []\r\n        const neutral = []\r\n\r\n        const alliance = this.actor.alliance\r\n        const opposition = alliance === 'party' ? 'opposition' : alliance === 'opposition' ? 'party' : null\r\n\r\n        for (const token of tokens) {\r\n            if (opposition) {\r\n                const actorAlliance = token.actor ? token.actor.alliance : token.alliance\r\n                if (actorAlliance === alliance) allies.push(token)\r\n                else if (actorAlliance === opposition) enemies.push(token)\r\n                else if (actorAlliance === null) neutral.push(token)\r\n            } else neutral.push(token)\r\n        }\r\n\r\n        return {\r\n            allies: allies.sort(sortByName),\r\n            neutral: neutral.sort(sortByName),\r\n            enemies: enemies.sort(sortByName),\r\n            hasTokens: allies.length || enemies.length || neutral.length,\r\n        }\r\n    }\r\n}\r\n", "import { localize, templatePath } from '../module.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { setTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nexport class PerceptionMenu extends BaseMenu {\r\n    get title() {\r\n        return localize('menu.perception.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('perception')\r\n    }\r\n\r\n    getData(options) {\r\n        const selected = this.selected\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData()\r\n\r\n        const tokens = getValidTokens(this.token).map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                cover: BaseMenu.createPropertyData(original, current, 'cover'),\r\n                visibility: BaseMenu.createPropertyData(original, current, 'visibility'),\r\n                selected: selected.includes(id),\r\n            }\r\n        })\r\n\r\n        return {\r\n            ...super.getData(options),\r\n            ...this._spliIntoAlliances(tokens),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.filter('.tokens').selectable({\r\n            autoRefresh: false,\r\n            filter: '.token',\r\n            cancel: 'header,select',\r\n            stop: () => this._setSelected(),\r\n        })\r\n\r\n        html.find('[data-action=select-all]').on('click', event => {\r\n            const section = $(event.currentTarget).closest('section')\r\n            const tokens = (section.length ? section : html).find('[data-token-id]')\r\n            const allSelected = tokens.filter(':not(.ui-selected)').length === 0\r\n            tokens.toggleClass('ui-selected', !allSelected)\r\n            this._setSelected()\r\n        })\r\n\r\n        html.find('[data-action=use-selection]').on('click', event => {\r\n            this._setSelected(canvas.tokens.controlled.map(t => t.id))\r\n            this.render()\r\n        })\r\n\r\n        html.find('[data-action=reset]').on('click', event => this.reset())\r\n    }\r\n}\r\n", "export const RECT_CORNERS = [\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 1, y: 1 },\r\n]\r\n\r\nexport const RECT_SPREAD = [\r\n    { x: 0.25, y: 0.25 },\r\n    { x: 0.5, y: 0.25 },\r\n    { x: 0.75, y: 0.25 },\r\n    { x: 0.25, y: 0.5 },\r\n    { x: 0.5, y: 0.5 },\r\n    { x: 0.75, y: 0.5 },\r\n    { x: 0.25, y: 0.75 },\r\n    { x: 0.5, y: 0.75 },\r\n    { x: 0.75, y: 0.75 },\r\n]\r\n\r\nexport function getRectEdges(rect, margin) {\r\n    const opposite = 1 - margin\r\n    return {\r\n        top: { A: getRectPoint({ x: margin, y: margin }, rect), B: getRectPoint({ x: opposite, y: margin }, rect) },\r\n        right: { A: getRectPoint({ x: opposite, y: margin }, rect), B: getRectPoint({ x: opposite, y: opposite }, rect) },\r\n        bottom: { A: getRectPoint({ x: opposite, y: opposite }, rect), B: getRectPoint({ x: margin, y: opposite }, rect) },\r\n        left: { A: getRectPoint({ x: margin, y: opposite }, rect), B: getRectPoint({ x: margin, y: margin }, rect) },\r\n    }\r\n}\r\n\r\nexport function lineIntersectWall(origin, target, debug = false) {\r\n    if (debug) drawDebugLine(origin, target)\r\n    return CONFIG.Canvas.polygonBackends.move.testCollision(origin, target, { type: 'move', mode: 'any' })\r\n}\r\n\r\nexport function pointToTokenIntersectWall(origin, token, debug = false) {\r\n    for (const point of rectSpread(token.bounds)) {\r\n        if (lineIntersectWall(origin, point, debug)) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getRectPoint(point, rect) {\r\n    return { x: rect.x + rect.width * point.x, y: rect.y + rect.height * point.y }\r\n}\r\n\r\nexport function clearDebug() {\r\n    canvas.controls.debug.clear()\r\n}\r\n\r\nexport function drawDebugLine(origin, target, color = 'blue') {\r\n    const hex = color === 'blue' ? 0x0066cc : color === 'red' ? 0xff0000 : 0x16a103\r\n    canvas.controls.debug.lineStyle(4, hex).moveTo(origin.x, origin.y).lineTo(target.x, target.y)\r\n}\r\n\r\nexport function* rectSpread(rect) {\r\n    for (const point of RECT_SPREAD) {\r\n        yield getRectPoint(point, rect)\r\n    }\r\n}\r\n\r\nexport function* rectCorners(rect) {\r\n    for (const point of RECT_CORNERS) {\r\n        yield getRectPoint(point, rect)\r\n    }\r\n}\r\n", "import { clearDebug, drawDebugLine, rectCorners } from './geometry.js'\r\n\r\nexport function getLightExposure(token, debug = false) {\r\n    token = token instanceof Token ? token : token.object\r\n\r\n    if (token.document.hasStatusEffect(CONFIG.specialStatusEffects.INVISIBLE)) return undefined\r\n\r\n    const scene = token.scene\r\n    if (scene !== canvas.scene || !scene.tokenVision || scene.darkness < scene.globalLightThreshold) return undefined\r\n\r\n    if (debug) clearDebug()\r\n\r\n    const rect = token.document.bounds\r\n    let exposure = null\r\n\r\n    for (const light of canvas.effects.lightSources) {\r\n        if (!light.active) continue\r\n\r\n        const bright = light.data.bright\r\n        const dim = light.data.dim\r\n\r\n        if (light.object === token) {\r\n            if (bright) return 'bright'\r\n            if (dim) exposure = 'dim'\r\n            continue\r\n        }\r\n\r\n        const contained = []\r\n        for (const point of rectCorners(rect)) {\r\n            if (light.shape.contains(point.x, point.y)) contained.push(point)\r\n            else if (debug) drawDebugLine(light, point, 'red')\r\n        }\r\n\r\n        if (!contained.length) continue\r\n\r\n        if (light.ratio === 1) {\r\n            if (debug) drawDebugLine(light, contained, 'green')\r\n            return 'bright'\r\n        }\r\n\r\n        if (light.ratio === 0) {\r\n            if (debug) drawDebugLine(light, contained, 'blue')\r\n            exposure = 'dim'\r\n            continue\r\n        }\r\n\r\n        for (const point of contained) {\r\n            const distance = new Ray(light, point).distance\r\n            if (distance <= bright) {\r\n                if (debug) {\r\n                    drawDebugLine(light, point, 'green')\r\n                    exposure = 'bright'\r\n                } else return 'bright'\r\n            } else {\r\n                if (debug) {\r\n                    drawDebugLine(light, point, 'blue')\r\n                    if (exposure !== 'bright') exposure = 'dim'\r\n                } else exposure = 'dim'\r\n            }\r\n        }\r\n    }\r\n\r\n    return exposure\r\n}\r\n", "import { getCoverEffect, isProne } from './actor.js'\r\nimport { PerceptionMenu } from './apps/perception.js'\r\nimport { COVER_VALUES, ICONS_PATHS, VISIBILITY_VALUES, defaultValues } from './constants.js'\r\nimport { clearDebug, drawDebugLine, getRectEdges, lineIntersectWall, pointToTokenIntersectWall } from './geometry.js'\r\nimport { getLightExposure } from './lighting.js'\r\nimport { MODULE_ID, getFlag, getSetting, hasPermission, unsetFlag } from './module.js'\r\nimport { optionsToObject } from './options.js'\r\nimport { getSceneSetting, getValidTokens } from './scene.js'\r\n\r\nexport function renderTokenHUD(hud, html) {\r\n    if (!hasPermission() || !hud.object.actor?.isOfType('creature')) return\r\n    html.find('.col.left').append(`<div class=\"control-icon\" data-action=\"pf2e-perception\"><i class=\"fa-solid fa-eye\"></i></div>`)\r\n    html.find('[data-action=pf2e-perception]').on('click', event => PerceptionMenu.openMenu({ token: hud.object }))\r\n}\r\n\r\nexport function pasteToken(originals, sources) {\r\n    for (const source of sources) {\r\n        delete source.flags?.[MODULE_ID]\r\n    }\r\n}\r\n\r\nexport function getTokenData(token, ...path) {\r\n    path.unshift('data')\r\n    token = token instanceof Token ? token.document : token\r\n    return getFlag(token, path.join('.'))\r\n}\r\n\r\nexport async function clearTokenData(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    return unsetFlag(token, 'data')\r\n}\r\n\r\nexport async function setTokenData(token, data) {\r\n    const valid = getValidTokens(token).map(t => t.id)\r\n    const updates = {}\r\n\r\n    for (const tokenId in data) {\r\n        if (!valid.includes(tokenId)) {\r\n            updates[`flags.${MODULE_ID}.data.-=${tokenId}`] = true\r\n            continue\r\n        }\r\n\r\n        const current = data[tokenId]\r\n        const original = getTokenData(token, tokenId) ?? {}\r\n\r\n        if (current.visibility === defaultValues.visibility) delete current.visibility\r\n        if (current.cover === defaultValues.cover) delete current.cover\r\n\r\n        if (original.cover === current.cover && original.visibility === current.visibility) continue\r\n\r\n        if (!current.visibility && !current.cover) {\r\n            updates[`flags.${MODULE_ID}.data.-=${tokenId}`] = true\r\n        } else {\r\n            for (const property of ['cover', 'visibility']) {\r\n                if (original[property] === current[property]) continue\r\n                if (!current[property]) updates[`flags.${MODULE_ID}.data.${tokenId}.-=${property}`] = true\r\n                else updates[`flags.${MODULE_ID}.data.${tokenId}.${property}`] = current[property]\r\n            }\r\n        }\r\n    }\r\n\r\n    token = token instanceof Token ? token.document : token\r\n    return token.update(updates)\r\n}\r\n\r\nexport function hasStandardCover(origin, target, debug = false) {\r\n    const scene = origin.scene\r\n    if (!getSceneSetting(scene, 'standard')) return false\r\n\r\n    if (debug) clearDebug()\r\n\r\n    const standard = getSetting('standard-type')\r\n    if (standard === 'center') return lineIntersectWall(origin.center, target.center, debug)\r\n    else if (standard === 'points') return pointToTokenIntersectWall(origin.center, target, debug)\r\n    // else return allTokenCornersToPointIntersectWall(origin, target.center)\r\n}\r\n\r\nconst SIZES = {\r\n    tiny: 0,\r\n    sm: 1,\r\n    med: 2,\r\n    lg: 3,\r\n    huge: 4,\r\n    grg: 5,\r\n}\r\n\r\nexport function getCreatureCover(originToken, targetToken, options = [], debug = false) {\r\n    const setting = getSetting('lesser')\r\n    if (setting === 'none') return undefined\r\n\r\n    originToken = originToken instanceof Token ? originToken.document : originToken\r\n    targetToken = targetToken instanceof Token ? targetToken.document : targetToken\r\n\r\n    options = optionsToObject(options)\r\n    const ignoreIds = [...(options.target?.cover?.ignore ?? []), ...(options.origin?.cover?.ignore ?? [])]\r\n\r\n    let cover = undefined\r\n    const origin = originToken.center\r\n    const target = targetToken.center\r\n\r\n    if (debug) {\r\n        clearDebug()\r\n        drawDebugLine(origin, target)\r\n    }\r\n\r\n    const isExtraLarge = token => {\r\n        const size = SIZES[token.actor.size]\r\n        return size - originSize >= 2 && size - targetSize >= 2\r\n    }\r\n\r\n    const originSize = SIZES[originToken.actor.size]\r\n    const targetSize = SIZES[targetToken.actor.size]\r\n\r\n    const tokens = originToken.scene.tokens.contents\r\n        .filter(t => t.actor && !t.hidden && t !== originToken && t !== targetToken && !ignoreIds.includes(t.id))\r\n        .sort((a, b) => SIZES[b.actor.size] - SIZES[a.actor.size])\r\n\r\n    let extralarges = originSize < SIZES.huge && targetSize < SIZES.huge && tokens.filter(isExtraLarge).length\r\n\r\n    const margin = setting === 'ten' ? 0.1 : setting === 'twenty' ? 0.2 : 0\r\n\r\n    const intersectsEdge = edge => {\r\n        if (debug) drawDebugLine(edge.A, edge.B, 'red')\r\n        return lineSegmentIntersects(origin, target, edge.A, edge.B)\r\n    }\r\n    const intersectsWith =\r\n        setting === 'cross'\r\n            ? edges => {\r\n                  return (\r\n                      (intersectsEdge(edges.top) && intersectsEdge(edges.bottom)) ||\r\n                      (intersectsEdge(edges.left) && intersectsEdge(edges.right))\r\n                  )\r\n              }\r\n            : edges => Object.values(edges).some(edge => intersectsEdge(edge))\r\n\r\n    for (const tokenDocument of tokens) {\r\n        const token = tokenDocument.object\r\n        const edges = getRectEdges(token.bounds, margin)\r\n\r\n        if (intersectsWith(edges)) return extralarges ? 'standard' : 'lesser'\r\n        else if (isExtraLarge(tokenDocument)) extralarges--\r\n    }\r\n\r\n    return cover\r\n}\r\n\r\nexport function getVisibility(origin, target) {\r\n    const systemVisibility = (() => {\r\n        const originActor = origin.actor\r\n        const visibilities = ['unnoticed', 'undetected', 'hidden', 'concealed']\r\n\r\n        for (const visibility of visibilities) {\r\n            if (originActor.hasCondition(visibility)) return visibility\r\n        }\r\n    })()\r\n\r\n    const visibility = getTokenData(origin, target.id, 'visibility')\r\n    const mergedVisibility = VISIBILITY_VALUES[systemVisibility] > VISIBILITY_VALUES[visibility] ? systemVisibility : visibility\r\n\r\n    const mergedVisibilityValue = VISIBILITY_VALUES[mergedVisibility]\r\n    if (mergedVisibilityValue >= VISIBILITY_VALUES.undetected) return mergedVisibility\r\n\r\n    const exposure = getLightExposure(origin)\r\n    let exposedVisibility = exposure === 'dim' ? 'concealed' : exposure === null ? 'hidden' : undefined\r\n    if (exposedVisibility === 'concealed' && target.actor?.hasLowLightVision) exposedVisibility = undefined\r\n    if (exposedVisibility === 'hidden' && target.actor?.hasDarkvision) exposedVisibility = undefined\r\n\r\n    return mergedVisibilityValue > VISIBILITY_VALUES[exposedVisibility] ? mergedVisibility : exposedVisibility\r\n}\r\n\r\nexport function updateToken(token, data, context, userId) {\r\n    const flags = data.flags?.['pf2e-perception']\r\n\r\n    if (flags && (flags.data || flags['-=data'] !== undefined)) {\r\n        token.object.renderFlags.set({ refreshVisibility: true })\r\n\r\n        if (game.user.isGM) return\r\n\r\n        const hk = Hooks.on('refreshToken', refreshed => {\r\n            if (!token.object === refreshed) return\r\n            Hooks.off('refreshToken', hk)\r\n            if (game.combat?.getCombatantByToken(token.id)) ui.combat.render()\r\n        })\r\n    }\r\n}\r\n\r\nexport function hoverToken(token, hovered) {\r\n    if (hovered) showAllConditionals(token)\r\n    else clearConditionals(token)\r\n}\r\n\r\nexport function deleteToken(token) {\r\n    clearConditionals(token)\r\n    if (!game.user.isGM) ui.combat.render()\r\n}\r\n\r\nexport function controlToken(token) {\r\n    clearConditionals(token)\r\n    Hooks.once('sightRefresh', () => token.hover && showAllConditionals(token))\r\n}\r\n\r\nexport function clearConditionals(token) {\r\n    const tokenId = token?.id\r\n    if (!tokenId) return $('.pf2e-conditionals').remove()\r\n    $(`.pf2e-conditionals[data-hover-id=${token.id}]`).remove()\r\n    $(`.pf2e-conditionals[data-token-id=${token.id}]`).remove()\r\n}\r\n\r\nexport function showAllConditionals(token) {\r\n    const tokens = getValidTokens(token)\r\n    for (const target of tokens) {\r\n        showConditionals(target, token)\r\n    }\r\n}\r\n\r\nexport async function showConditionals(origin, target) {\r\n    origin = origin instanceof Token ? origin : origin.object\r\n    if (!origin.visible || !origin.actor?.isOfType('creature')) return\r\n\r\n    let data = getTokenData(origin, target.id)\r\n    if (isEmpty(data)) return\r\n\r\n    if (!game.user.isGM && !target.document.hasPlayerOwner && VISIBILITY_VALUES[data.visibility] >= VISIBILITY_VALUES.hidden) {\r\n        if (!data.cover) return\r\n        data = { cover: data.cover }\r\n    }\r\n\r\n    const scale = origin.worldTransform.a\r\n    const coords = canvas.clientCoordinatesFromCanvas(origin.document._source)\r\n\r\n    let content = `<div class=\"pf2e-conditionals\" data-hover-id=\"${origin.id}\" data-token-id=\"${target.id}\" `\r\n    content += `style=\"top: ${coords.y}px; left: ${coords.x + (origin.hitArea.width * scale) / 2}px;\">`\r\n\r\n    const savedPaths = getSetting('icon-path')\r\n    Object.entries(data).map(([property, value]) => {\r\n        const icon = property === 'cover' ? 'cover' : value\r\n        let path = savedPaths[icon] || ICONS_PATHS[icon]\r\n        if (path.startsWith('systems') || path.startsWith('modules')) path = `../../../${path}`\r\n        content += `<div class=\"conditional\"><img src=\"${path}\"></img></div>`\r\n    })\r\n\r\n    content += '</div>'\r\n\r\n    $(document.body).append(content)\r\n}\r\n\r\nexport function getConditionalCover(origin, target, options, debug = false) {\r\n    const ranged = options.includes('item:ranged')\r\n    const prone = ranged ? isProne(target.actor) : false\r\n\r\n    let systemCover = getCoverEffect(target.actor, true)\r\n    if (prone && COVER_VALUES[systemCover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && systemCover === 'greater-prone') systemCover = undefined\r\n\r\n    let cover = getTokenData(target, origin.id, 'cover')\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && cover === 'greater-prone') cover = undefined\r\n\r\n    if (\r\n        COVER_VALUES[cover] < COVER_VALUES.standard &&\r\n        COVER_VALUES[systemCover] < COVER_VALUES.standard &&\r\n        hasStandardCover(origin, target, debug)\r\n    ) {\r\n        cover = 'standard'\r\n    } else if (!cover && !systemCover && origin.distanceTo(target) > 5) {\r\n        cover = getCreatureCover(origin, target, options, debug)\r\n    }\r\n\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n\r\n    return COVER_VALUES[cover] > COVER_VALUES[systemCover] ? cover : undefined\r\n}\r\n\r\nexport function rulesBasedVision() {\r\n    return !!(this.sight.enabled && this.actor?.isOfType('creature') && this.scene?.rulesBasedVision)\r\n}\r\n\r\nexport function preCreateToken(token) {\r\n    if (!getSceneSetting(token.scene, 'npc-vision')) return\r\n    if (!token.actor?.isOfType('npc')) return\r\n    token.updateSource({ 'sight.enabled': true })\r\n}\r\n", "import { COVER_UUID, COVER_VALUES, VISIBILITY_VALUES, VISION_LEVELS } from './constants.js'\r\nimport { createCoverSource, createFlatFootedSource, findChoiceSetRule } from './effect.js'\r\nimport { getOption, optionsToObject, testOption, updateFromOptions } from './options.js'\r\nimport { extractEphemeralEffects, getRangeIncrement, isOffGuardFromFlanking, traitSlugToObject } from './pf2e/helpers.js'\r\nimport { getConditionalCover, getVisibility } from './token.js'\r\n\r\nexport async function getRollContext(params) {\r\n    const [selfToken, targetToken] =\r\n        canvas.ready && !params.viewOnly\r\n            ? [\r\n                  canvas.tokens.controlled.find(t => t.actor === this) ?? this.getActiveTokens().shift() ?? null,\r\n                  params.target?.token ?? params.target?.actor?.getActiveTokens().shift() ?? null,\r\n              ]\r\n            : [null, null]\r\n\r\n    const selfOptions = this.getRollOptions(params.domains ?? [])\r\n\r\n    // Get ephemeral effects from the target that affect this actor while attacking\r\n    const originEphemeralEffects = await extractEphemeralEffects({\r\n        affects: 'origin',\r\n        origin: this,\r\n        target: params.target?.actor ?? targetToken?.actor ?? null,\r\n        item: params.item ?? null,\r\n        domains: params.domains,\r\n        options: [...params.options, ...(params.item?.getRollOptions('item') ?? [])],\r\n    })\r\n\r\n    const selfActor =\r\n        params.viewOnly || !targetToken?.actor\r\n            ? this\r\n            : this.getContextualClone([...selfOptions, ...targetToken.actor.getSelfRollOptions('target')], originEphemeralEffects)\r\n\r\n    const isStrike = params.statistic instanceof game.pf2e.StatisticModifier\r\n    const strikeActions = isStrike ? selfActor.system.actions?.flatMap(a => [a, a.altUsages ?? []].flat()) ?? [] : []\r\n\r\n    const statistic = params.viewOnly\r\n        ? params.statistic\r\n        : isStrike\r\n        ? strikeActions.find(action => {\r\n              // Find the matching weapon or melee item\r\n              if (params.item?.id !== action.item.id || params?.item.name !== action.item.name) return false\r\n              if (params.item.isOfType('melee') && action.item.isOfType('melee')) return true\r\n\r\n              // Discriminate between melee/thrown usages by checking that both are either melee or ranged\r\n              return (\r\n                  params.item.isOfType('weapon') && action.item.isOfType('weapon') && params.item.isMelee === action.item.isMelee\r\n              )\r\n          }) ?? params.statistic\r\n        : params.statistic\r\n\r\n    const selfItem = (() => {\r\n        // 1. Simplest case: no context clone, so used the item passed to this method\r\n        if (selfActor === this) return params.item ?? null\r\n\r\n        // 2. Get the item from the statistic if it's stored therein\r\n        if (\r\n            statistic &&\r\n            'item' in statistic &&\r\n            statistic.item instanceof Item &&\r\n            statistic.item.isOfType('melee', 'spell', 'weapon')\r\n        ) {\r\n            return statistic.item\r\n        }\r\n\r\n        // 3. Get the item directly from the context clone\r\n        const itemClone = selfActor.items.get(params.item?.id ?? '')\r\n        if (itemClone?.isOfType('melee', 'spell', 'weapon')) return itemClone\r\n\r\n        // 4 Give up :(\r\n        return params.item ?? null\r\n    })()\r\n\r\n    const itemOptions = selfItem?.getRollOptions('item') ?? []\r\n    const isAttackAction = ['attack', 'strike-damage', 'attack-spell-damage'].some(d => params.domains.includes(d))\r\n\r\n    const traitSlugs = [\r\n        isAttackAction ? 'attack' : [],\r\n        // CRB p. 544: \"Due to the complexity involved in preparing bombs, Strikes to throw alchemical bombs gain\r\n        // the manipulate trait.\"\r\n        isStrike && selfItem?.isOfType('weapon') && selfItem.baseType === 'alchemical-bomb' ? 'manipulate' : [],\r\n    ].flat()\r\n\r\n    if (selfItem?.isOfType('weapon', 'melee')) {\r\n        for (const adjustment of this.synthetics.strikeAdjustments) {\r\n            adjustment.adjustTraits?.(selfItem, traitSlugs)\r\n        }\r\n    }\r\n\r\n    const traits = traitSlugs.map(t => traitSlugToObject(t, CONFIG.PF2E.actionTraits))\r\n    // Calculate distance and range increment, set as a roll option\r\n    const distance = selfToken && targetToken ? selfToken.distanceTo(targetToken) : null\r\n    const [originDistance, targetDistance] =\r\n        typeof distance === 'number' ? [`origin:distance:${distance}`, `target:distance:${distance}`] : [null, null]\r\n\r\n    // Target roll options\r\n    const getTargetRollOptions = actor => {\r\n        const targetOptions = actor?.getSelfRollOptions('target') ?? []\r\n        if (targetToken) {\r\n            targetOptions.push('target') // An indicator that there is a target of any kind\r\n            const mark = this.synthetics.targetMarks.get(targetToken.document.uuid)\r\n            if (mark) targetOptions.push(`target:mark:${mark}`)\r\n        }\r\n        return targetOptions\r\n    }\r\n    const targetRollOptions = getTargetRollOptions(targetToken?.actor)\r\n\r\n    // Get ephemeral effects from this actor that affect the target while being attacked\r\n    const targetEphemeralEffects = await extractEphemeralEffects({\r\n        affects: 'target',\r\n        origin: selfActor,\r\n        target: targetToken?.actor ?? null,\r\n        item: selfItem,\r\n        domains: params.domains,\r\n        options: [...params.options, ...itemOptions, ...targetRollOptions],\r\n    })\r\n\r\n    const [reach, isMelee] = params.item?.isOfType('melee')\r\n        ? [params.item.reach, params.item.isMelee]\r\n        : params.item?.isOfType('weapon')\r\n        ? [this.getReach({ action: 'attack', weapon: params.item }), params.item.isMelee]\r\n        : [null, false]\r\n\r\n    /**\r\n     * WE ADDED STUFF HERE\r\n     */\r\n    if (selfToken && targetToken) {\r\n        addConditionals({\r\n            selfToken,\r\n            targetToken,\r\n            ephemeralEffects: targetEphemeralEffects,\r\n            options: [...params.options, ...selfActor.getSelfRollOptions('origin'), ...itemOptions, ...targetRollOptions],\r\n        })\r\n    }\r\n    /**\r\n     * END OF THE ADDED STUFF\r\n     */\r\n\r\n    // Add an epehemeral effect from flanking\r\n    const isFlankingStrike = !!(\r\n        isMelee &&\r\n        typeof reach === 'number' &&\r\n        params.statistic instanceof game.pf2e.StatisticModifier &&\r\n        targetToken &&\r\n        selfToken?.isFlanking(targetToken, { reach })\r\n    )\r\n    if (isFlankingStrike && params.target?.token?.actor && isOffGuardFromFlanking(params.target.token.actor)) {\r\n        const name = game.i18n.localize('PF2E.Item.Condition.Flanked')\r\n        const condition = game.pf2e.ConditionManager.getCondition('flat-footed', { name })\r\n        targetEphemeralEffects.push(condition.toObject())\r\n    }\r\n\r\n    // Clone the actor to recalculate its AC with contextual roll options\r\n    const targetActor = params.viewOnly\r\n        ? null\r\n        : (params.target?.actor ?? targetToken?.actor)?.getContextualClone(\r\n              [...selfActor.getSelfRollOptions('origin'), ...itemOptions, ...(originDistance ? [originDistance] : [])],\r\n              targetEphemeralEffects\r\n          ) ?? null\r\n\r\n    const rollOptions = new Set([\r\n        ...params.options,\r\n        ...selfOptions,\r\n        ...(targetActor ? getTargetRollOptions(targetActor) : targetRollOptions),\r\n        ...itemOptions,\r\n        // Backward compatibility for predication looking for an \"attack\" trait by its lonesome\r\n        'attack',\r\n    ])\r\n\r\n    if (targetDistance) rollOptions.add(targetDistance)\r\n    const rangeIncrement = selfItem ? getRangeIncrement(selfItem, distance) : null\r\n    if (rangeIncrement) rollOptions.add(`target:range-increment:${rangeIncrement}`)\r\n\r\n    const self = {\r\n        actor: selfActor,\r\n        token: selfToken?.document ?? null,\r\n        statistic,\r\n        item: selfItem,\r\n        modifiers: [],\r\n    }\r\n\r\n    const target =\r\n        targetActor && targetToken && distance !== null\r\n            ? { actor: targetActor, token: targetToken.document, distance, rangeIncrement }\r\n            : null\r\n\r\n    return {\r\n        options: rollOptions,\r\n        self,\r\n        target,\r\n        traits,\r\n    }\r\n}\r\n\r\nfunction addConditionals({ ephemeralEffects, selfToken, targetToken, options }) {\r\n    let cover = getConditionalCover(selfToken, targetToken, options)\r\n    let visibility = getVisibility(selfToken, targetToken)\r\n\r\n    options = optionsToObject(options)\r\n\r\n    cover = updateFromOptions(cover, options, 'cover')\r\n    visibility = updateFromOptions(visibility, options, 'visibility')\r\n\r\n    let coverBonus = undefined\r\n    if (cover) {\r\n        const ac = getOption(options, cover, 'ac')?.[0]\r\n        if (ac == 0) cover = undefined\r\n        else if (ac) coverBonus = ac\r\n    }\r\n\r\n    if (visibility && testOption(visibility, options, 'visibility', 'noff')) {\r\n        visibility = undefined\r\n    }\r\n\r\n    if (visibility === 'hidden' && targetToken.actor?.hasDarkvision) visibility = undefined\r\n\r\n    if (COVER_VALUES[cover] > COVER_VALUES.none) ephemeralEffects.push(createCoverSource(cover, coverBonus))\r\n    if (VISIBILITY_VALUES[visibility] > VISIBILITY_VALUES.concealed) ephemeralEffects.push(createFlatFootedSource(visibility))\r\n}\r\n\r\nexport function getActorToken(actor, target = false) {\r\n    if (!actor) return undefined\r\n    const actorId = actor.id\r\n    const isToken = actor.isToken\r\n    const tokens = target ? game.user.targets : canvas.tokens.controlled\r\n    return (\r\n        tokens.find(token => (isToken ? token.actor === actor : token.actor.id === actorId)) ??\r\n        actor.getActiveTokens().shift() ??\r\n        null\r\n    )\r\n}\r\n\r\nexport function isProne(actor) {\r\n    return actor.itemTypes.condition.some(item => item.slug === 'prone')\r\n}\r\n\r\nexport function getCoverEffect(actor, selection = false) {\r\n    const effect = actor.itemTypes.effect.find(x => x.sourceId === COVER_UUID)\r\n    return selection ? findChoiceSetRule(effect)?.selection.level : effect\r\n}\r\n\r\nexport function getFeatWithUUID(actor, uuid) {\r\n    return actor.itemTypes.feat.find(f => f.sourceId === uuid)\r\n}\r\n\r\nexport function visionLevel() {\r\n    const sensesStr = this.system.traits.senses.value\r\n    const senses = sensesStr.toLowerCase().replaceAll(/[ -]/g, '').split(',')\r\n\r\n    const sensesRules = this.rules.filter(r => r.key === 'Sense').map(r => r.selector.toLowerCase())\r\n    senses.push(...sensesRules)\r\n\r\n    return this.getCondition('blinded')\r\n        ? VISION_LEVELS.BLINDED\r\n        : senses.includes('darkvision') || senses.includes('greaterdarkvision')\r\n        ? VISION_LEVELS.DARKVISION\r\n        : senses.includes('lowlightvision')\r\n        ? VISION_LEVELS.LOWLIGHT\r\n        : VISION_LEVELS.NORMAL\r\n}\r\n", "import {\r\n    CoverValidationMenu,\r\n    HideValidationMenu,\r\n    PointOutValidationMenu,\r\n    SeekValidationMenu,\r\n    UnHideValidationMenu,\r\n} from './apps/validation.js'\r\nimport { attackCheckRoll } from './constants.js'\r\nimport { MODULE_ID, getFlag, getFlags, localize, setFlag } from './module.js'\r\n\r\nexport function renderChatMessage(message, html) {\r\n    const token = message.token\r\n    if (!token) return\r\n\r\n    const isGM = game.user.isGM\r\n    const hasPlayerOwner = token.hasPlayerOwner\r\n    const { cover, selected, skipWait, validated, pointOut } = getFlags(message)\r\n    const pf2eContext = message.getFlag('pf2e', 'context')\r\n\r\n    if (cover) {\r\n        if (isGM) {\r\n            const button = createValidateButton({ property: 'cover', skipWait, validated })\r\n            html.find('.message-content').append(button)\r\n            html.find('[data-action=validate-cover]').on('click', () => {\r\n                CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n            })\r\n        } else if (!skipWait) {\r\n            const hint = createWaitHint('cover', validated)\r\n            html.find('.message-content').append(hint)\r\n        }\r\n    } else if (pf2eContext?.pf2ePerception?.visibility) {\r\n        if (!validated) html.find('.message-buttons').remove()\r\n\r\n        const flavor = html.find('.flavor-text')\r\n\r\n        if (!isGM && hasPlayerOwner) {\r\n            html.find('.message-sender').text(token.name)\r\n            flavor.empty()\r\n        }\r\n\r\n        const msg = localize(`message.flat-check.${validated === undefined ? 'blind' : validated ? 'success' : 'failure'}`)\r\n        const hint = createHint(msg, validated)\r\n        flavor.append(hint)\r\n\r\n        if (isGM) {\r\n            for (const type of ['success', 'failure']) {\r\n                flavor.append(\r\n                    createChatButton({\r\n                        action: `${type}-message`,\r\n                        icon: 'fa-solid fa-message',\r\n                        label: localize('message.flat-check.button', type),\r\n                    })\r\n                )\r\n                html.find(`[data-action=${type}-message]`).on('click', () => {\r\n                    setFlag(message, 'validated', type === 'success')\r\n                })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'skill-check' && pf2eContext.pf2ePerception) {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.pf2ePerception.selected,\r\n                    ValidationMenu: HideValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'perception-check' && pf2eContext.pf2ePerception) {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:seek')) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.pf2ePerception.selected,\r\n                    ValidationMenu: SeekValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:seek')) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    } else if (pointOut) {\r\n        const selectedToken = token.scene.tokens.get(pointOut)\r\n        if (!selectedToken) return\r\n\r\n        if (isGM) {\r\n            let buttons = '<div style=\"display: grid; grid-template-columns: 1fr auto; gap: 3px\">'\r\n\r\n            buttons += createValidateButton({ property: 'visibility', skipWait, validated })\r\n            buttons += createChatButton({ action: 'ping-token', icon: 'fa-solid fa-signal-stream' })\r\n\r\n            buttons += '</div>'\r\n\r\n            html.find('.message-content').append(buttons)\r\n\r\n            html.find('[data-action=validate-visibility]').on('click', async () => {\r\n                PointOutValidationMenu.openMenu({\r\n                    message,\r\n                    token: selectedToken,\r\n                    originator: token,\r\n                    selected: canvas.tokens.controlled.map(t => t.id),\r\n                })\r\n            })\r\n\r\n            html.find('[data-action=ping-token]').on('click', () => {\r\n                canvas.ping(selectedToken.center)\r\n            })\r\n        } else if (hasPlayerOwner) {\r\n            const hint = createWaitHint('visibility', validated)\r\n            html.find('.message-content').append(hint)\r\n        }\r\n    }\r\n\r\n    if (isGM && attackCheckRoll.includes(pf2eContext?.type)) {\r\n        const tooltip = localize('message.unhide.tooltip')\r\n        const button = `<span style=\"position: absolute; right: 0px; bottom: 1px;\">\r\n    <button data-action=\"unhide\" title=\"${tooltip}\" style=\"width: 22px; height: 22px; font-size: 10px; line-height: 1px;\">\r\n        <i class=\"fa-duotone fa-eye-slash\" style=\"right: 1px;\"></i>\r\n    </button>\r\n</span>`\r\n        html.find('.dice-result .dice-total').append(button)\r\n        html.find('[data-action=unhide]').on('click', event => {\r\n            event.stopPropagation()\r\n            UnHideValidationMenu.openMenu({ token })\r\n        })\r\n    }\r\n}\r\n\r\nexport function validateMessage(message) {\r\n    if (!getFlag(message, 'validated')) setFlag(message, 'validated', true)\r\n}\r\n\r\nfunction addBlindSkillCheckFlavor({ html, token, message, validated }) {\r\n    html.find('.message-sender').text(token.name)\r\n    let flavor = message.getFlag('pf2e', 'modifierName')\r\n    flavor += createWaitHint('visibility', validated)\r\n    html.find('.flavor-text').html(flavor)\r\n}\r\n\r\nfunction createWaitHint(property, validated) {\r\n    const hint = localize(`message.${property}.player.${validated ? 'validated' : 'wait'}`)\r\n    return createHint(hint, validated)\r\n}\r\n\r\nfunction createHint(hint, validated) {\r\n    if (validated === true) hint = '<i class=\"fa-solid fa-check\" style=\"color: green;\"></i> ' + hint\r\n    else if (validated === false) hint = '<i class=\"fa-solid fa-xmark\" style=\"color: red;\"></i> ' + hint\r\n    return `<i style=\"display: block; font-size: .9em; text-align: end;\">${hint}</i>`\r\n}\r\n\r\nfunction addVisibilityValidationButton({ skipWait, validated, html, message, ValidationMenu, token, selected }) {\r\n    const button = createValidateButton({ property: 'visibility', skipWait, validated })\r\n    html.find('.flavor-text').append(button)\r\n    html.find('[data-action=validate-visibility]').on('click', async () => {\r\n        const roll = message.rolls[0]\r\n        ValidationMenu.openMenu({ token, message, roll, selected })\r\n    })\r\n}\r\n\r\nfunction createValidateButton({ skipWait, validated, property }) {\r\n    let label = localize(`message.${property}.gm.${skipWait ? 'check' : validated ? 'validated' : 'validate'}`)\r\n    if (!skipWait && validated) label += '<i class=\"fa-solid fa-check\" style=\"color: green; margin-left: 0.3em;\"></i>'\r\n    return createChatButton({\r\n        action: `validate-${property}`,\r\n        icon: 'fa-solid fa-list',\r\n        label,\r\n    })\r\n}\r\n\r\nexport function createChatButton({ action, icon, label }) {\r\n    let button = `<button type=\"button\" style=\"margin: 0 0 5px; padding-block: 0;\" data-action=\"${action}\">`\r\n\r\n    if (icon) button += `<i class=\"${icon}\" ${label ? '' : 'style=\"margin: 0;\"'}></i>`\r\n    if (label) button += `${icon ? ' ' : ''}${label}`\r\n\r\n    button += '</button>'\r\n\r\n    return button\r\n}\r\n\r\nexport async function createTokenMessage({ content, token, flags, secret }) {\r\n    const data = { content, speaker: ChatMessage.getSpeaker({ token: token instanceof Token ? token.document : token }) }\r\n    if (flags) setProperty(data, `flags.${MODULE_ID}`, flags)\r\n    if (secret) {\r\n        data.type = CONST.CHAT_MESSAGE_TYPES.WHISPER\r\n        data.whisper = ChatMessage.getWhisperRecipients('gm')\r\n    }\r\n    return ChatMessage.create(data)\r\n}\r\n", "const DEGREE_ADJUSTMENT_AMOUNTS = {\r\n    LOWER_BY_TWO: -2,\r\n    LOWER: -1,\r\n    INCREASE: 1,\r\n    INCREASE_BY_TWO: 2,\r\n    TO_CRITICAL_FAILURE: 'criticalFailure',\r\n    TO_FAILURE: 'failure',\r\n    TO_SUCCESS: 'success',\r\n    TO_CRITICAL_SUCCESS: 'criticalSuccess',\r\n}\r\n\r\nexport const DEGREE_OF_SUCCESS_STRINGS = ['criticalFailure', 'failure', 'success', 'criticalSuccess']\r\n\r\nexport class DegreeOfSuccess {\r\n    constructor(roll, dc, dosAdjustments = null) {\r\n        if (roll instanceof Roll) {\r\n            this.dieResult =\r\n                (roll.isDeterministic\r\n                    ? roll.terms.find(t => t instanceof NumericTerm)\r\n                    : roll.dice.find(d => d instanceof Die && d.faces === 20)\r\n                )?.total ?? 1\r\n            this.rollTotal = roll.total\r\n        } else {\r\n            this.dieResult = roll.dieValue\r\n            this.rollTotal = roll.dieValue + roll.modifier\r\n        }\r\n\r\n        this.dc = typeof dc === 'number' ? { value: dc } : dc\r\n\r\n        this.unadjusted = this.#calculateDegreeOfSuccess()\r\n        this.adjustment = this.#getDegreeAdjustment(this.unadjusted, dosAdjustments)\r\n        this.value = this.adjustment ? this.#adjustDegreeOfSuccess(this.adjustment.amount, this.unadjusted) : this.unadjusted\r\n    }\r\n\r\n    static CRITICAL_FAILURE = 0\r\n    static FAILURE = 1\r\n    static SUCCESS = 2\r\n    static CRITICAL_SUCCESS = 3\r\n\r\n    #getDegreeAdjustment(degree, adjustments) {\r\n        if (!adjustments) return null\r\n\r\n        for (const outcome of ['all', ...DEGREE_OF_SUCCESS_STRINGS]) {\r\n            const { label, amount } = adjustments[outcome] ?? {}\r\n            if (\r\n                amount &&\r\n                label &&\r\n                !(degree === DegreeOfSuccess.CRITICAL_SUCCESS && amount === DEGREE_ADJUSTMENT_AMOUNTS.INCREASE) &&\r\n                !(degree === DegreeOfSuccess.CRITICAL_FAILURE && amount === DEGREE_ADJUSTMENT_AMOUNTS.LOWER) &&\r\n                (outcome === 'all' || DEGREE_OF_SUCCESS_STRINGS.indexOf(outcome) === degree)\r\n            ) {\r\n                return { label, amount }\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    #adjustDegreeOfSuccess(amount, degreeOfSuccess) {\r\n        switch (amount) {\r\n            case 'criticalFailure':\r\n                return 0\r\n            case 'failure':\r\n                return 1\r\n            case 'success':\r\n                return 2\r\n            case 'criticalSuccess':\r\n                return 3\r\n            default:\r\n                return Math.clamped(degreeOfSuccess + amount, 0, 3)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param degree The current success value\r\n     * @return The new success value\r\n     */\r\n    #adjustDegreeByDieValue(degree) {\r\n        if (this.dieResult === 20) {\r\n            return this.#adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.INCREASE, degree)\r\n        } else if (this.dieResult === 1) {\r\n            return this.#adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.LOWER, degree)\r\n        }\r\n\r\n        return degree\r\n    }\r\n\r\n    #calculateDegreeOfSuccess() {\r\n        const dc = this.dc.value\r\n\r\n        if (this.rollTotal - dc >= 10) {\r\n            return this.#adjustDegreeByDieValue(DegreeOfSuccess.CRITICAL_SUCCESS)\r\n        } else if (dc - this.rollTotal >= 10) {\r\n            return this.#adjustDegreeByDieValue(DegreeOfSuccess.CRITICAL_FAILURE)\r\n        } else if (this.rollTotal >= dc) {\r\n            return this.#adjustDegreeByDieValue(DegreeOfSuccess.SUCCESS)\r\n        }\r\n\r\n        return this.#adjustDegreeByDieValue(DegreeOfSuccess.FAILURE)\r\n    }\r\n}\r\n", "import { MODULE_ID, getFlag, localize } from './module.js'\r\n\r\nconst templateConversion = {\r\n    burst: 'circle',\r\n    emanation: 'circle',\r\n    line: 'ray',\r\n    cone: 'cone',\r\n    rect: 'rect',\r\n}\r\n\r\nexport function createSeekTemplate(type, token) {\r\n    createTemplate({\r\n        type,\r\n        token,\r\n        distance: type === 'cone' ? 30 : 15,\r\n        traits: ['concentrate', 'secret'],\r\n    })\r\n}\r\n\r\nexport function getTokenTemplate(token) {\r\n    return token.scene.templates.find(t => getFlag(t, 'tokenId') === token.id)\r\n}\r\n\r\nexport function getTokenTemplateTokens(token) {\r\n    if (!checkScene(token)) return null\r\n\r\n    const template = getTokenTemplate(token)\r\n    if (!template) return null\r\n\r\n    return getTokens(template.object)\r\n}\r\n\r\nexport async function deleteTokenTemplate(token) {\r\n    const templates = token.scene.templates.filter(t => getFlag(t, 'tokenId') === token.id)\r\n    for (const template of templates) {\r\n        await template.delete()\r\n    }\r\n}\r\n\r\nfunction checkScene(token) {\r\n    if (canvas.scene === token.scene) return true\r\n    ui.notifications.error(localize('template.scene'))\r\n    return false\r\n}\r\n\r\nfunction createTemplate({ type, distance, traits, fillColor, width, token }) {\r\n    if (!checkScene(token)) return\r\n\r\n    const templateData = {\r\n        distance,\r\n        t: templateConversion[type],\r\n        fillColor: fillColor || game.user.color,\r\n        flags: {\r\n            [MODULE_ID]: {\r\n                tokenId: token.id,\r\n            },\r\n        },\r\n    }\r\n\r\n    if (templateData.t === 'ray') {\r\n        templateData.width = width || CONFIG.MeasuredTemplate.defaults.width * (canvas.dimensions?.distance ?? 1)\r\n    } else if (templateData.t === 'cone') {\r\n        templateData.angle = CONFIG.MeasuredTemplate.defaults.angle\r\n    }\r\n\r\n    if (traits) setProperty(templateData, 'flags.pf2e.origin.traits', traits)\r\n\r\n    const templateDoc = new CONFIG.MeasuredTemplate.documentClass(templateData, { parent: canvas.scene })\r\n    new CONFIG.MeasuredTemplate.objectClass(templateDoc).drawPreview()\r\n}\r\n\r\n// TODO remove once it is in the system\r\nfunction getTokens(template, { collisionOrigin, collisionType = 'move' } = {}) {\r\n    if (!canvas.scene) return []\r\n    const { grid, dimensions } = canvas\r\n    if (!(grid && dimensions)) return []\r\n\r\n    const gridHighlight = grid.getHighlightLayer(template.highlightId)\r\n    if (!gridHighlight || grid.type !== CONST.GRID_TYPES.SQUARE) return []\r\n    const origin = collisionOrigin ?? template.center\r\n\r\n    // Get all the tokens that are inside the highlight bounds\r\n    const tokens = canvas.tokens.quadtree.getObjects(gridHighlight.getLocalBounds(undefined, true))\r\n\r\n    const containedTokens = []\r\n    for (const token of tokens) {\r\n        const tokenDoc = token.document\r\n\r\n        // Collect the position of all grid squares that this token occupies as \"x.y\"\r\n        const tokenPositions = []\r\n        for (let h = 0; h < tokenDoc.height; h++) {\r\n            const y = token.y + h * grid.size\r\n            tokenPositions.push(`${token.x}.${y}`)\r\n            if (tokenDoc.width > 1) {\r\n                for (let w = 1; w < tokenDoc.width; w++) {\r\n                    tokenPositions.push(`${token.x + w * grid.size}.${y}`)\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const position of tokenPositions) {\r\n            // Check if a position exists within this GridHiglight\r\n            if (!gridHighlight.positions.has(position)) {\r\n                continue\r\n            }\r\n            // Position of cell's top-left corner, in pixels\r\n            const [gx, gy] = position.split('.').map(s => Number(s))\r\n            // Position of cell's center in pixels\r\n            const destination = {\r\n                x: gx + dimensions.size * 0.5,\r\n                y: gy + dimensions.size * 0.5,\r\n            }\r\n            if (destination.x < 0 || destination.y < 0) continue\r\n\r\n            const hasCollision =\r\n                canvas.ready &&\r\n                collisionType &&\r\n                CONFIG.Canvas.polygonBackends[collisionType].testCollision(origin, destination, {\r\n                    type: collisionType,\r\n                    mode: 'any',\r\n                })\r\n\r\n            if (!hasCollision) {\r\n                containedTokens.push(token)\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return containedTokens\r\n}\r\n", "import { validateMessage } from '../chat.js'\r\nimport { COVERS, VISIBILITIES, VISIBILITY_VALUES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, getSetting, localize, templatePath } from '../module.js'\r\nimport { DegreeOfSuccess } from '../pf2e/success.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { deleteTokenTemplate } from '../template.js'\r\nimport { getTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nclass ValidationMenu extends BaseMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated && params.message) validateMessage(params.message)\r\n        return validated\r\n    }\r\n\r\n    get title() {\r\n        return localize('menu.validation.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('validation')\r\n    }\r\n\r\n    get selected() {\r\n        const selected = super.selected\r\n        if (selected.length) return selected\r\n\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        return getValidTokens(token)\r\n            .filter(t => t.actor.alliance !== alliance)\r\n            .map(t => t.id)\r\n    }\r\n\r\n    getSavedData(converted = true) {\r\n        const data = super.getSavedData()\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    _convertData(data) {\r\n        const property = this.property\r\n        const scene = this.scene\r\n        const selected = this.selected\r\n        const defaultValue = defaultValues[property]\r\n        const propertyList = property === 'cover' ? COVERS : VISIBILITIES\r\n\r\n        for (const tokenId of selected) {\r\n            const token = scene.tokens.get(tokenId)\r\n            const fullProperty = `${tokenId}.${property}`\r\n            const currentValue = getProperty(data, fullProperty) ?? defaultValue\r\n\r\n            let processedValue = this.processValue({ token, value: currentValue })\r\n            if (!propertyList.includes(processedValue)) processedValue = currentValue\r\n\r\n            if (currentValue === processedValue) continue\r\n            setProperty(data, fullProperty, processedValue)\r\n        }\r\n\r\n        return data\r\n    }\r\n\r\n    processValue(params) {\r\n        throw new Error(`${this.constructor.name} doesn't have a 'processValue' method defined`)\r\n    }\r\n\r\n    getData(options) {\r\n        const { covers, visibilities, i18n } = super.getData(options)\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData(false)\r\n        const property = this.property\r\n\r\n        let selected = this.selected\r\n        let tokens = getValidTokens(this.token)\r\n\r\n        tokens = tokens.map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                selected: selected.includes(id),\r\n                ...BaseMenu.createPropertyData(original, current, property),\r\n            }\r\n        })\r\n\r\n        const validation = getSetting('validation')\r\n        if (validation === 'selected') tokens = tokens.filter(t => t.selected)\r\n        else if (validation === 'changed') tokens = tokens.filter(t => t.changed)\r\n\r\n        return {\r\n            ...this._spliIntoAlliances(tokens),\r\n            i18n,\r\n            property: property,\r\n            options: property === 'cover' ? covers : visibilities,\r\n            showSelected: selected.length !== tokens.length && validation === 'all',\r\n            showChanges: validation !== 'changed',\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.find('[data-action=cancel]').on('click', event => {\r\n            this.close()\r\n        })\r\n    }\r\n}\r\n\r\nexport class CoverValidationMenu extends ValidationMenu {\r\n    #value\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#value = params.value\r\n    }\r\n\r\n    get property() {\r\n        return 'cover'\r\n    }\r\n\r\n    processValue() {\r\n        return this.#value\r\n    }\r\n}\r\n\r\nclass VisibilityValidationMenu extends ValidationMenu {\r\n    #roll\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#roll = params.roll\r\n    }\r\n\r\n    get property() {\r\n        return 'visibility'\r\n    }\r\n\r\n    get roll() {\r\n        return this.#roll\r\n    }\r\n}\r\n\r\nexport class HideValidationMenu extends VisibilityValidationMenu {\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.perception.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n        const success = new DegreeOfSuccess(roll, dc).value\r\n\r\n        if (success >= DegreeOfSuccess.SUCCESS && visibility < VISIBILITY_VALUES.hidden) return 'hidden'\r\n        else if (success <= DegreeOfSuccess.FAILURE && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else return value\r\n    }\r\n}\r\n\r\nexport class UnHideValidationMenu extends VisibilityValidationMenu {\r\n    get selected() {\r\n        return getValidTokens(this.token).map(t => t.id)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        const visibility = VISIBILITY_VALUES[value]\r\n        if (visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else return value\r\n    }\r\n}\r\n\r\nexport class PointOutValidationMenu extends VisibilityValidationMenu {\r\n    #originator\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#originator = params.originator\r\n    }\r\n\r\n    get selected() {\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        const originatorId = this.#originator.id\r\n        const data = getTokenData(token) ?? {}\r\n\r\n        return getValidTokens(token)\r\n            .filter(t => {\r\n                if (t.id === originatorId || t.actor.alliance === alliance) return false\r\n                const visibility = getProperty(data, `${t.id}.visibility`)\r\n                return VISIBILITY_VALUES[visibility] >= VISIBILITY_VALUES.undetected\r\n            })\r\n            .map(t => t.id)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        return VISIBILITY_VALUES[value] >= VISIBILITY_VALUES.undetected ? 'hidden' : value\r\n    }\r\n}\r\n\r\nclass ReverseVisibilityValidationMenu extends VisibilityValidationMenu {\r\n    getSavedData(converted = true) {\r\n        const thisId = this.token.id\r\n        const tokens = getValidTokens(this.token)\r\n        const data = {}\r\n\r\n        for (const token of tokens) {\r\n            const tokenData = getTokenData(token, thisId)\r\n            if (tokenData) data[token.id] = deepClone(tokenData)\r\n        }\r\n\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    getData() {\r\n        const parentData = super.getData()\r\n        parentData.isReversed = true\r\n        parentData.options = VISIBILITIES.map(value => ({ value, label: localize(`visibility.reversed.${value}`) }))\r\n        return parentData\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        const scene = this.scene\r\n        const thisId = this.token.id\r\n        const updates = []\r\n\r\n        for (const [tokenId, data] of Object.entries(currentData)) {\r\n            let update = { _id: tokenId }\r\n            const token = scene.tokens.get(tokenId)\r\n\r\n            if (token) {\r\n                if (data.visibility === defaultValues.visibility) delete data.visibility\r\n\r\n                const original = getTokenData(token, thisId)\r\n                if (original?.visibility === data.visibility) continue\r\n\r\n                if (!original.cover && !data.visibility) {\r\n                    update[`flags.${MODULE_ID}.data.-=${thisId}`] = true\r\n                } else if (!data.visibility) {\r\n                    update[`flags.${MODULE_ID}.data.${thisId}.-=visibility`] = true\r\n                } else {\r\n                    update[`flags.${MODULE_ID}.data.${thisId}.visibility`] = data.visibility\r\n                }\r\n            } else update[`flags.${MODULE_ID}.data.-=${thisId}`] = true\r\n\r\n            updates.push(update)\r\n        }\r\n\r\n        scene.updateEmbeddedDocuments('Token', updates)\r\n    }\r\n}\r\n\r\nexport class SeekValidationMenu extends ReverseVisibilityValidationMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated) deleteTokenTemplate(params.token)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.skills.stealth.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n        const success = new DegreeOfSuccess(roll, dc).value\r\n\r\n        if (success >= DegreeOfSuccess.CRITICAL_SUCCESS && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (success >= DegreeOfSuccess.SUCCESS && visibility === VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (success >= DegreeOfSuccess.SUCCESS && visibility >= VISIBILITY_VALUES.undetected) return 'hidden'\r\n        else return value\r\n    }\r\n}\r\n", "import { getActorToken, getCoverEffect, isProne } from './actor.js'\r\nimport { CoverValidationMenu, HideValidationMenu, SeekValidationMenu } from './apps/validation.js'\r\nimport { createTokenMessage } from './chat.js'\r\nimport { VISIBILITY_VALUES, defaultValues } from './constants.js'\r\nimport { createCoverSource } from './effect.js'\r\nimport { MODULE_ID, getSetting, localize, templatePath } from './module.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { createSeekTemplate, deleteTokenTemplate } from './template.js'\r\nimport { clearTokenData, getTokenData, setTokenData } from './token.js'\r\nimport { getPrototype } from './utils.js'\r\n\r\nexport function setupActions() {\r\n    const hide = game.pf2e.actions.get('hide')\r\n    const BaseAction = getPrototype(hide, 2).constructor\r\n    const BaseActionVariant = getPrototype(hide.toActionVariant(), 2).constructor\r\n    const SingleCheckAction = getPrototype(hide, 1).constructor\r\n    const SingleCheckActionVariant = getPrototype(hide.toActionVariant(), 1).constructor\r\n\r\n    setupCover(BaseAction, BaseActionVariant)\r\n    setupHide(SingleCheckAction, SingleCheckActionVariant)\r\n    setupSeek(SingleCheckAction, SingleCheckActionVariant)\r\n    setupPointOut(BaseAction, BaseActionVariant)\r\n}\r\n\r\n// function setupSneak(SingleCheckAction, SingleCheckActionVariant) {\r\n//     class SneakVariant extends SingleCheckActionVariant {\r\n//         // async use(options = {}) {\r\n//         //     const action = game.i18n.localize('PF2E.Actions.Hide.Title')\r\n//         //     const token = getSelectedToken(options, action)\r\n//         //     if (!token) return\r\n//         //     options.actors = [token.actor]\r\n//         //     const result = await super.use(options)\r\n//         //     if (game.user.isGM) {\r\n//         //         openVisibilityValidationMenu({ token, result, ValidationMenu: HideValidationMenu })\r\n//         //     }\r\n//         //     return result\r\n//         // }\r\n//     }\r\n\r\n//     class Sneak extends SingleCheckAction {\r\n//         constructor() {\r\n//             super({\r\n//                 cost: 1,\r\n//                 description: `PF2E.Actions.Sneak.Description`,\r\n//                 name: `PF2E.Actions.Sneak.Title`,\r\n//                 notes: [\r\n//                     { outcome: ['success', 'criticalSuccess'], text: `PF2E.Actions.Sneak.Notes.success` },\r\n//                     { outcome: ['failure'], text: `PF2E.Actions.Sneak.Notes.failure` },\r\n//                     { outcome: ['criticalFailure'], text: `PF2E.Actions.Sneak.Notes.criticalFailure` },\r\n//                 ],\r\n//                 rollOptions: ['action:sneak'],\r\n//                 slug: 'sneak',\r\n//                 traits: ['move', 'secret'],\r\n//             })\r\n//         }\r\n\r\n//         toActionVariant(data) {\r\n//             return new SneakVariant(this, data)\r\n//         }\r\n//     }\r\n\r\n//     game.pf2e.actions.set('sneak', new Sneak())\r\n// }\r\n\r\nfunction setupPointOut(BaseAction, BaseActionVariant) {\r\n    class PointOutVariant extends BaseActionVariant {\r\n        async use(options = {}) {\r\n            const action = localize('action.point-out')\r\n            const token = getSelectedToken(options, action)\r\n            if (token) pointOut(this, token)\r\n        }\r\n    }\r\n\r\n    class PointOut extends BaseAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                name: `${MODULE_ID}.action.point-out`,\r\n                description: `${MODULE_ID}.action.point-out.description`,\r\n                rollOptions: ['action:point-out'],\r\n                slug: 'point-out',\r\n                traits: ['auditory', 'manipulate', 'visual'],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data = {}) {\r\n            data.name ??= this.name\r\n            return new PointOutVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('point-out', new PointOut())\r\n}\r\n\r\nasync function pointOut({ name, traits }, token) {\r\n    const target = game.user.targets.filter(t => t.actor).first()\r\n    const visibility = target ? getTokenData(target, token.id, 'visibility') : undefined\r\n    const isVisible = target && VISIBILITY_VALUES[visibility] < VISIBILITY_VALUES.undetected\r\n\r\n    let description\r\n    if (isVisible) {\r\n        const dc = target.actor.skills.stealth.dc.value\r\n        description = localize('message.point-out.short-check', {\r\n            check: `@Check[type:perception|dc:${dc}|traits:auditory,manipulate,visual|showDC:gm]`,\r\n        })\r\n    } else description = localize('message.point-out.short')\r\n\r\n    const content = await renderTemplate(templatePath('point-out'), {\r\n        description,\r\n        name,\r\n        traits: traits.map(slug => ({\r\n            slug,\r\n            tooltip: CONFIG.PF2E.traitsDescriptions[slug],\r\n            name: CONFIG.PF2E.actionTraits[slug],\r\n        })),\r\n    })\r\n\r\n    const flags = {\r\n        pointOut: isVisible ? target.id : undefined,\r\n    }\r\n\r\n    createTokenMessage({ content, token, flags })\r\n}\r\n\r\nfunction setupSeek(SingleCheckAction, SingleCheckActionVariant) {\r\n    class SeekVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Seek.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            if (!(await seek(token))) return deleteTokenTemplate(token)\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                const { selected } = result[0].message.getFlag('pf2e', 'context.pf2ePerception')\r\n                if (selected) openVisibilityValidationMenu({ token, result, ValidationMenu: SeekValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Seek extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.Seek.Description',\r\n                name: 'PF2E.Actions.Seek.Title',\r\n                notes: [\r\n                    { outcome: ['criticalSuccess'], text: 'PF2E.Actions.Seek.Notes.criticalSuccess' },\r\n                    { outcome: ['success'], text: 'PF2E.Actions.Seek.Notes.success' },\r\n                ],\r\n                rollOptions: ['action:seek'],\r\n                slug: 'seek',\r\n                statistic: 'perception',\r\n                traits: ['concentrate', 'secret'],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new SeekVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('seek', new Seek())\r\n}\r\n\r\nasync function seek(token) {\r\n    const unit = game.i18n.localize('PF2E.Foot')\r\n\r\n    let content = '<p style=\"margin: 0 0.3em; text-align: center;\">'\r\n    content += `${localize('dialog.seek.hint')}</p><p>`\r\n\r\n    content += createButton(\r\n        'create-cone',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 30,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.cone),\r\n        })\r\n    )\r\n\r\n    content += createButton(\r\n        'create-burst',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 15,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.burst),\r\n        })\r\n    )\r\n\r\n    content += '</p>'\r\n\r\n    return Dialog.wait(\r\n        {\r\n            title: `${token.name} - ${game.i18n.localize('PF2E.Actions.Seek.Title')}`,\r\n            content,\r\n            buttons: {\r\n                ok: {\r\n                    icon: '<i class=\"fa-solid fa-check\"></i>',\r\n                    label: localize('dialog.seek.accept'),\r\n                    callback: () => true,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fa-solid fa-xmark\"></i>',\r\n                    label: localize('dialog.seek.cancel'),\r\n                    callback: html => false,\r\n                },\r\n            },\r\n            close: () => false,\r\n            render: html => {\r\n                const content = html.filter('.dialog-content')\r\n                content.find('[data-action=create-cone], [data-action=create-burst]').on('click', event => {\r\n                    const { action } = event.currentTarget.dataset\r\n                    deleteTokenTemplate(token)\r\n                    createSeekTemplate(action === 'create-cone' ? 'cone' : 'burst', token)\r\n                })\r\n            },\r\n        },\r\n        { width: 300, left: 10 }\r\n    )\r\n}\r\n\r\nfunction setupHide(SingleCheckAction, SingleCheckActionVariant) {\r\n    class HideVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Hide.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                openVisibilityValidationMenu({ token, result, ValidationMenu: HideValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Hide extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: `PF2E.Actions.Hide.Description`,\r\n                name: `PF2E.Actions.Hide.Title`,\r\n                rollOptions: ['action:hide'],\r\n                slug: 'hide',\r\n                statistic: 'stealth',\r\n                traits: ['secret'],\r\n                notes: [{ outcome: ['success', 'criticalSuccess'], text: `PF2E.Actions.Hide.Notes.success` }],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new HideVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('hide', new Hide())\r\n}\r\n\r\nfunction setupCover(BaseAction, BaseActionVariant) {\r\n    class TakeCoverVariant extends BaseActionVariant {\r\n        async use(options = {}) {\r\n            const action = localize('action.take-cover')\r\n            const token = getSelectedToken(options, action)\r\n            if (token) takeCover(token)\r\n        }\r\n    }\r\n\r\n    class TakeCover extends BaseAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.TakeCover.Description',\r\n                img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n                name: 'PF2E.Actions.TakeCover.Title',\r\n                slug: 'take-cover',\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new TakeCoverVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('take-cover', new TakeCover())\r\n}\r\n\r\nasync function takeCover(token) {\r\n    const actor = token.actor\r\n    const cover = getCoverEffect(actor)\r\n\r\n    const targets = validateTokens(token, game.user.targets.ids)\r\n    if (cover && !targets.length) return cover.delete()\r\n\r\n    const data = getTokenData(token) ?? {}\r\n    const covers = Object.entries(data).reduce((covers, [tokenId, { cover }]) => {\r\n        if (cover) covers[tokenId] = cover\r\n        return covers\r\n    }, {})\r\n\r\n    const content = await renderTemplate(templatePath('covers-dialog'), {\r\n        i18n: localize,\r\n        hasTargets: !!targets.length,\r\n        hasCovers: !isEmpty(covers),\r\n        hasTargetCover: targets.some(id => id in covers),\r\n        isProne: isProne(actor),\r\n    })\r\n\r\n    const dialog = new Dialog({\r\n        title: `${token.name} - ${localize('action.take-cover')}`,\r\n        content,\r\n        buttons: {},\r\n        render: html => {\r\n            html.find('button').on('click', async event => {\r\n                const { level } = event.currentTarget.dataset\r\n                const skip = getSetting('skip-cover')\r\n\r\n                const process = async (cover, selected) => {\r\n                    selected = selected ? targets : undefined\r\n\r\n                    const flavor = cover === defaultValues.cover ? (selected ? 'remove' : 'remove-all') : 'take'\r\n                    const message = await createTokenMessage({\r\n                        content: localize(`message.cover.${flavor}`, { cover: localize(`cover.${cover}`) }),\r\n                        flags: { selected, cover, skipWait: skip },\r\n                        token,\r\n                    })\r\n\r\n                    if (skip) {\r\n                        if (cover === defaultValues.cover && !selected) return clearTokenData(token)\r\n                        const data = deepClone(getTokenData(token)) ?? {}\r\n                        for (const tokenId of targets) {\r\n                            setProperty(data, `${tokenId}.cover`, cover)\r\n                        }\r\n                        return setTokenData(token, data)\r\n                    } else if (game.user.isGM) {\r\n                        CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n                    }\r\n                }\r\n\r\n                if (level === 'remove-all') process(defaultValues.cover)\r\n                else if (level === 'remove') process(defaultValues.cover, true)\r\n                else if (targets.length) process(level, true)\r\n                else {\r\n                    const source = createCoverSource(level)\r\n                    actor.createEmbeddedDocuments('Item', [source])\r\n                }\r\n\r\n                dialog.close()\r\n            })\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nfunction getSelectedToken(options, action) {\r\n    let tokens = options.tokens?.filter(t => t.actor) ?? []\r\n    if (!Array.isArray(tokens)) tokens = [tokens]\r\n\r\n    let actors = options.actors ?? []\r\n    if (!Array.isArray(actors)) actors = [actors]\r\n\r\n    if (!tokens.length && actors.length === 1) tokens = [getActorToken(actors[0])].filter(Boolean)\r\n    if (!tokens.length) tokens = canvas.tokens.controlled.filter(t => t.actor)\r\n    if (!tokens.length) tokens = [getActorToken(game.user.character)].filter(Boolean)\r\n\r\n    if (tokens.length > 1) {\r\n        ui.notifications.warn(localize('action.only-one', { action }))\r\n        return\r\n    } else if (!tokens.length) {\r\n        ui.notifications.warn(localize('action.must-one', { action }))\r\n        return\r\n    }\r\n\r\n    const token = tokens[0]\r\n    if (!token?.actor?.isOfType('creature')) {\r\n        ui.notifications.warn(localize('action.must-creature', { action }))\r\n        return\r\n    }\r\n\r\n    return token\r\n}\r\n\r\nfunction createButton(action, icon, label) {\r\n    return `<button type=\"button\" data-action=\"${action}\" style=\"margin: 0 0 5px; padding: 0;\">\r\n    <i class=\"${icon}\"></i> ${label}</button>\r\n</button>`\r\n}\r\n\r\nfunction openVisibilityValidationMenu({ token, result, ValidationMenu }) {\r\n    const roll = result[0].roll\r\n    const message = result[0].message\r\n    const { selected } = message.getFlag('pf2e', 'context.pf2ePerception')\r\n    ValidationMenu.openMenu({ token, roll, selected, message })\r\n}\r\n", "import { getActorToken, getCoverEffect, isProne } from './actor.js'\r\nimport { COVERS, COVER_UUID, VISIBILITY_VALUES, attackCheckRoll, validCheckRoll } from './constants.js'\r\nimport { createCoverSource, findChoiceSetRule } from './effect.js'\r\nimport { MODULE_ID, getFlag, getSetting, localize } from './module.js'\r\nimport { getOption, optionsToObject, updateFromOptions } from './options.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { getTokenTemplateTokens } from './template.js'\r\nimport { getVisibility } from './token.js'\r\n\r\nexport async function checkRoll(wrapped, ...args) {\r\n    const context = args[1]\r\n    if (!context) return wrapped(...args)\r\n\r\n    if (Array.isArray(context.options)) context.options = new Set(context.options)\r\n\r\n    const { actor, createMessage = 'true', type, token, target, isReroll } = context\r\n    const originToken = token ?? getActorToken(actor)\r\n    const targetToken = target?.token\r\n    const isAttackRoll = attackCheckRoll.includes(type)\r\n    const flatCheck = getSetting('flat-check')\r\n\r\n    if (\r\n        isReroll ||\r\n        !createMessage ||\r\n        !originToken ||\r\n        !validCheckRoll.includes(type) ||\r\n        (isAttackRoll && (!targetToken || flatCheck === 'none'))\r\n    )\r\n        return wrapped(...args)\r\n\r\n    if (isAttackRoll && targetToken.actor) {\r\n        const options = optionsToObject(context.options)\r\n        const visibility = updateFromOptions(getVisibility(targetToken, originToken), options, 'visibility')\r\n\r\n        if (!visibility) return wrapped(...args)\r\n\r\n        const optionDC = getOption(options, visibility === 'concealed' ? 'concealed' : 'hidden', 'dc')?.[0]\r\n        if (optionDC == 0) return wrapped(...args)\r\n\r\n        const dc = optionDC ?? (visibility === 'concealed' ? 5 : 11)\r\n        const roll = await new Roll('1d20').evaluate({ async: true })\r\n        const total = roll.total\r\n        const isSuccess = total >= dc\r\n        const isUndetected = VISIBILITY_VALUES[visibility] >= VISIBILITY_VALUES.undetected\r\n\r\n        new originToken.actor.perception.constructor(originToken.actor, {\r\n            slug: 'visibility-check',\r\n            label: `${game.i18n.localize('PF2E.FlatCheck')}: ${game.i18n.localize(`PF2E.condition.${visibility}.name`)}`,\r\n            check: { type: 'flat-check' },\r\n        }).roll({\r\n            dc,\r\n            target: targetToken.actor,\r\n            rollMode: isUndetected ? (game.user.isGM ? 'gmroll' : 'blindroll') : 'roll',\r\n        })\r\n\r\n        if (isUndetected) {\r\n            context.options.add('secret')\r\n            context.pf2ePerception = {\r\n                isSuccess: isSuccess,\r\n                visibility: visibility,\r\n            }\r\n        }\r\n\r\n        if (flatCheck !== 'roll' && !isUndetected && !isSuccess) return\r\n    } else if (context.options.has('action:hide')) {\r\n        setProperty(context, 'pf2ePerception.selected', game.user.targets.ids)\r\n        // } else if (context.options.has('action:sneak')) {\r\n        //     context.selected = game.user.targets.ids\r\n    } else if (context.options.has('action:seek')) {\r\n        const highlighted = getTokenTemplateTokens(originToken)\r\n        if (highlighted === undefined) return wrapped(...args)\r\n\r\n        const tokens = highlighted ?? Array.from(game.user.targets)\r\n        const selected = validateTokens(originToken, tokens)\r\n            .filter(t => !t.document.hidden)\r\n            .map(t => t.id)\r\n\r\n        setProperty(context, 'pf2ePerception.selected', selected)\r\n    }\r\n\r\n    return wrapped(...args)\r\n}\r\n\r\nexport function renderCheckModifiersDialog(dialog, html) {\r\n    const { createMessage = 'true', type, token, target, isReroll, options, dc } = dialog.context\r\n    const originToken = token\r\n    const targetToken = target?.token\r\n    const targetActor = target?.actor\r\n\r\n    if (isReroll || !createMessage || !originToken || !targetToken || !targetActor || !attackCheckRoll.includes(type)) return\r\n\r\n    const coverEffect = getCoverEffect(targetActor)\r\n    const currentCover = coverEffect\r\n        ? findChoiceSetRule(coverEffect)?.selection.level ?? getFlag(coverEffect, 'level')\r\n        : undefined\r\n    let coverOverride = dialog[MODULE_ID]?.coverOverride ?? currentCover\r\n\r\n    let template = '<div class=\"roll-mode-panel\">'\r\n    template += `<div class=\"label\">${localize('dice-checks.cover.label')}</div>`\r\n    template += `<select name=\"overrideCover\"><option value=\"\">${localize('dice-checks.cover.none')}</option>`\r\n\r\n    const covers = isProne(targetActor) ? COVERS.slice(1) : COVERS.slice(1, -1)\r\n\r\n    covers.forEach(slug => {\r\n        const selected = slug === coverOverride ? 'selected' : ''\r\n        const label = localize(`cover.${slug}`)\r\n        template += `<option value=\"${slug}\" ${selected}>${label}</option>`\r\n    })\r\n\r\n    template += '</select></div>'\r\n\r\n    // visibility override here\r\n\r\n    template += '<hr>'\r\n\r\n    html.find('.roll-mode-panel').before(template)\r\n\r\n    html.find('select[name=overrideCover]').on('change', event => {\r\n        const value = event.currentTarget.value || undefined\r\n        setProperty(dialog, `${MODULE_ID}.coverOverride`, value)\r\n        coverOverride = value\r\n    })\r\n\r\n    html.find('button.roll')[0].addEventListener(\r\n        'click',\r\n        event => {\r\n            event.preventDefault()\r\n            event.stopPropagation()\r\n            event.stopImmediatePropagation()\r\n\r\n            let modified = false\r\n            const items = deepClone(targetActor._source.items)\r\n\r\n            if (coverOverride !== currentCover) {\r\n                modified = true\r\n\r\n                const coverIndex = items.findIndex(i => getProperty(i, 'flags.core.sourceId') === COVER_UUID)\r\n                if (coverIndex !== -1) items.splice(coverIndex, 1)\r\n\r\n                if (coverOverride) {\r\n                    const source = createCoverSource(coverOverride)\r\n                    items.push(source)\r\n                }\r\n            }\r\n\r\n            if (modified) {\r\n                target.actor = targetActor.clone({ items }, { keepId: true })\r\n\r\n                if (dc?.slug) {\r\n                    const statistic = target.actor.getStatistic(dc.slug)?.dc\r\n                    if (statistic) {\r\n                        dc.value = statistic.value\r\n                        dc.statistic = statistic\r\n                    }\r\n                }\r\n            }\r\n\r\n            dialog.resolve(true)\r\n            dialog.isResolved = true\r\n            dialog.close()\r\n        },\r\n        true\r\n    )\r\n\r\n    dialog.setPosition()\r\n}\r\n", "import { VISIBILITY_VALUES } from './constants.js'\r\nimport { getTokenData } from './token.js'\r\n\r\nexport function basicSightCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return !isValidTarget(target) || (!isUndetected(target, 'basicSight') && !isHidden(target))\r\n}\r\n\r\nexport function hearingCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    if (!game.settings.get('pf2e', 'automation.rulesBasedVision')) return true\r\n    return !visionSource.object.actor?.hasCondition('deafened') && isValidTarget(target) && !isUndetected(target, 'hearing')\r\n}\r\n\r\nexport function feelTremorCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return isValidTarget(target) && !isUndetected(target, 'feelTremor')\r\n}\r\n\r\nfunction isValidTarget(target) {\r\n    return !!(target instanceof Token && target.actor)\r\n}\r\n\r\nfunction reachesThreshold(target, tokens, threshold) {\r\n    for (const origin of tokens) {\r\n        const visibility = getTokenData(target, origin.id, 'visibility')\r\n        if (VISIBILITY_VALUES[visibility] >= threshold) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isUndetected(target, mode, unnoticed = false) {\r\n    const tokens = game.user.isGM ? canvas.tokens.controlled : target.scene.tokens.filter(t => t.isOwner)\r\n    const filtered = tokens.filter(t => t.detectionModes.some(d => d.id === mode))\r\n    return reachesThreshold(target, filtered, unnoticed ? VISIBILITY_VALUES.unnoticed : VISIBILITY_VALUES.undetected)\r\n}\r\n\r\nfunction isHidden(target) {\r\n    let tokens = canvas.tokens.controlled\r\n    if (!game.user.isGM && !tokens.length) {\r\n        tokens = target.scene.tokens.filter(t => t.isOwner)\r\n        if (tokens.length !== 1) return false\r\n    }\r\n    tokens = tokens.filter(t => !t.actor.hasDarkvision)\r\n    return reachesThreshold(target, tokens, VISIBILITY_VALUES.hidden)\r\n}\r\n", "import { isUndetected } from './detection.js'\r\nimport { getSetting, localize, setSetting } from './module.js'\r\n\r\nexport function renderCombatTracker(tracker, html) {\r\n    if (getSetting('target')) setupToggleTarget(html)\r\n    hideUndetected(html)\r\n}\r\n\r\nfunction hideUndetected(html) {\r\n    if (!canvas.ready) return\r\n\r\n    const combatants = game.combats.viewed?.combatants\r\n    if (!combatants?.size) return\r\n\r\n    html.find('#combat-tracker .combatant').each((i, li) => {\r\n        const { combatantId } = li.dataset\r\n        const token = combatants.get(combatantId ?? '')?.token\r\n        if (!token) return\r\n        if (isUndetected(token, 'basicSight', true)) li.remove()\r\n    })\r\n}\r\n\r\nfunction setupToggleTarget(html) {\r\n    html.find('[data-control=toggleTarget]').each((_, el) => {\r\n        el.addEventListener(\r\n            'click',\r\n            event => {\r\n                event.preventDefault()\r\n                event.stopPropagation()\r\n                event.stopImmediatePropagation()\r\n\r\n                const { combatantId } = event.currentTarget.closest('.combatant').dataset\r\n                const combatant = game.combats.viewed.combatants.get(combatantId ?? '')\r\n                const token = combatant?.token\r\n                if (!token) return\r\n\r\n                const isTargeted = Array.from(game.user.targets).some(t => t.document === token)\r\n                token.object.setTarget(!isTargeted, { releaseOthers: !event.shiftKey })\r\n            },\r\n            true\r\n        )\r\n    })\r\n}\r\n\r\nexport function renderCombatTrackerConfig(config, html) {\r\n    const checked = getSetting('encounter')\r\n\r\n    html.find('.form-group').last().after(`<div class=\"form-group\">\r\n    <label>${localize('settings.encounter.name')}</label>\r\n    <input type=\"checkbox\" name=\"pf2e-perception.encounter\" ${checked ? 'checked' : ''}>\r\n    <p class=\"notes\">${localize('settings.encounter.short')}</p>\r\n</div>`)\r\n\r\n    html.find('input[name=\"pf2e-perception.encounter\"]').on('change', event => {\r\n        const checked = event.currentTarget.checked\r\n        setSetting('encounter', checked)\r\n    })\r\n}\r\n", "import { ICONS_PATHS } from '../constants.js'\r\nimport { getSetting, localize, setSetting, templatePath } from '../module.js'\r\n\r\nconst ICONS = ['cover', 'concealed', 'hidden', 'undetected', 'unnoticed']\r\n\r\nexport class IconPathMenu extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            template: templatePath('icon-path-menu'),\r\n            title: localize('settings.icon-path.name'),\r\n            width: 500,\r\n        })\r\n    }\r\n\r\n    getData() {\r\n        const saved = getSetting('icon-path')\r\n\r\n        const icons = ICONS.map(name => ({\r\n            name,\r\n            placeholder: ICONS_PATHS[name],\r\n            value: saved[name] ?? '',\r\n            label: name === 'cover' ? localize('icon-path.cover') : game.i18n.localize(CONFIG.PF2E.conditionTypes[name]),\r\n        }))\r\n\r\n        return {\r\n            icons,\r\n            i18n: localize,\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.find('button[name=cancel]').on('click', event => {\r\n            event.prefentDefault()\r\n            this.close()\r\n        })\r\n    }\r\n\r\n    async _updateObject(event, formData) {\r\n        setSetting('icon-path', formData)\r\n    }\r\n}\r\n", "import { IconPathMenu } from './apps/icon-path-menu.js'\r\nimport { MODULE_ID } from './module.js'\r\n\r\nexport function registerSettings() {\r\n    register('icon-path', Object, {}, { config: false })\r\n    game.settings.registerMenu(MODULE_ID, 'icon-path-menu', {\r\n        name: path('icon-path', 'name'),\r\n        label: path('icon-path', 'label'),\r\n        icon: 'fa-solid fa-list',\r\n        restricted: true,\r\n        type: IconPathMenu,\r\n    })\r\n\r\n    register('permission', String, CONST.USER_ROLES.GAMEMASTER, {\r\n        choices: {\r\n            1: path('permission', 'choices.1'),\r\n            2: path('permission', 'choices.2'),\r\n            3: path('permission', 'choices.3'),\r\n            4: path('permission', 'choices.4'),\r\n        },\r\n    })\r\n\r\n    register('npc-vision', Boolean, false)\r\n\r\n    register('target', Boolean, true, {\r\n        onChange: () => ui.combat?.render(),\r\n    })\r\n\r\n    register('lesser', String, 'ten', {\r\n        choices: {\r\n            none: path('lesser', 'choices.none'),\r\n            cross: path('lesser', 'choices.cross'),\r\n            zero: path('lesser', 'choices.zero'),\r\n            ten: path('lesser', 'choices.ten'),\r\n            twenty: path('lesser', 'choices.twenty'),\r\n        },\r\n    })\r\n\r\n    register('standard', Boolean, true)\r\n\r\n    register('standard-type', String, 'center', {\r\n        choices: {\r\n            center: path('standard-type', 'choices.center'),\r\n            points: path('standard-type', 'choices.points'),\r\n        },\r\n    })\r\n\r\n    register('skip-cover', Boolean, true)\r\n\r\n    register('validation', String, 'all', {\r\n        choices: {\r\n            all: path('validation', 'choices.all'),\r\n            selected: path('validation', 'choices.selected'),\r\n            changed: path('validation', 'choices.changed'),\r\n        },\r\n    })\r\n\r\n    register('flat-check', String, 'cancel', {\r\n        choices: {\r\n            none: path('flat-check', 'choices.none'),\r\n            roll: path('flat-check', 'choices.roll'),\r\n            cancel: path('flat-check', 'choices.cancel'),\r\n        },\r\n    })\r\n\r\n    register('encounter', Boolean, false)\r\n}\r\n\r\nfunction path(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction register(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        scope: 'world',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n        ...extra,\r\n    })\r\n}\r\n", "import { setupActions } from './action.js'\r\nimport { getActorToken, getCoverEffect, getRollContext, isProne, visionLevel } from './actor.js'\r\nimport { renderChatMessage } from './chat.js'\r\nimport { checkRoll, renderCheckModifiersDialog } from './check.js'\r\nimport { renderCombatTracker, renderCombatTrackerConfig } from './combat.js'\r\nimport { basicSightCanDetect, feelTremorCanDetect, hearingCanDetect, isUndetected } from './detection.js'\r\nimport { clearDebug, lineIntersectWall, pointToTokenIntersectWall } from './geometry.js'\r\nimport { getLightExposure } from './lighting.js'\r\nimport { MODULE_ID } from './module.js'\r\nimport { getSceneSetting, getValidTokens, renderSceneConfig, validateTokens } from './scene.js'\r\nimport { registerSettings } from './settings.js'\r\nimport {\r\n    clearConditionals,\r\n    controlToken,\r\n    deleteToken,\r\n    getConditionalCover,\r\n    getCreatureCover,\r\n    getTokenData,\r\n    getVisibility,\r\n    hasStandardCover,\r\n    hoverToken,\r\n    pasteToken,\r\n    preCreateToken,\r\n    renderTokenHUD,\r\n    rulesBasedVision,\r\n    showAllConditionals,\r\n    showConditionals,\r\n    updateToken,\r\n} from './token.js'\r\n\r\nconst CHECK_ROLL = 'game.pf2e.Check.roll'\r\n\r\nconst RULES_BASED_VISION = 'CONFIG.Token.documentClass.prototype.rulesBasedVision'\r\n\r\nconst GET_ROLL_CONTEXT = 'CONFIG.Actor.documentClass.prototype.getRollContext'\r\nconst VISION_LEVEL = 'CONFIG.PF2E.Actor.documentClasses.npc.prototype.visionLevel'\r\n\r\nconst BASIC_SIGHT_CAN_DETECT = 'CONFIG.Canvas.detectionModes.basicSight._canDetect'\r\nconst HEARING_CAN_DETECT = 'CONFIG.Canvas.detectionModes.hearing._canDetect'\r\nconst FEEL_TREMOR_CAN_DETECT = 'CONFIG.Canvas.detectionModes.feelTremor._canDetect'\r\n\r\nHooks.once('init', () => {\r\n    registerSettings()\r\n    setupActions()\r\n\r\n    libWrapper.register(MODULE_ID, CHECK_ROLL, checkRoll)\r\n\r\n    libWrapper.register(MODULE_ID, RULES_BASED_VISION, rulesBasedVision, 'OVERRIDE')\r\n\r\n    libWrapper.register(MODULE_ID, GET_ROLL_CONTEXT, getRollContext, 'OVERRIDE')\r\n    libWrapper.register(MODULE_ID, VISION_LEVEL, visionLevel, 'OVERRIDE')\r\n\r\n    libWrapper.register(MODULE_ID, BASIC_SIGHT_CAN_DETECT, basicSightCanDetect)\r\n    libWrapper.register(MODULE_ID, HEARING_CAN_DETECT, hearingCanDetect)\r\n    libWrapper.register(MODULE_ID, FEEL_TREMOR_CAN_DETECT, feelTremorCanDetect)\r\n\r\n    const isGM = game.data.users.find(x => x._id === game.data.userId).role >= CONST.USER_ROLES.GAMEMASTER\r\n    if (isGM) {\r\n        Hooks.on('renderSceneConfig', renderSceneConfig)\r\n        Hooks.on('renderCombatTrackerConfig', renderCombatTrackerConfig)\r\n    } else {\r\n        Hooks.on('renderCombatTracker', renderCombatTracker)\r\n    }\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    game.modules.get(MODULE_ID).api = {\r\n        geometry: {\r\n            clearDebug,\r\n            lineIntersectWall,\r\n            pointToTokenIntersectWall,\r\n        },\r\n        token: {\r\n            getCreatureCover,\r\n            getVisibility,\r\n            clearConditionals,\r\n            showConditionals,\r\n            showAllConditionals,\r\n            hasStandardCover,\r\n            getTokenData,\r\n        },\r\n        lighting: {\r\n            getLightExposure,\r\n        },\r\n        actor: {\r\n            getActorToken,\r\n            isProne,\r\n            getCoverEffect,\r\n            getConditionalCover,\r\n        },\r\n        scene: {\r\n            getValidTokens,\r\n            validateTokens,\r\n            getSceneSetting,\r\n        },\r\n        detection: {\r\n            isUndetected,\r\n        },\r\n    }\r\n\r\n    Hooks.on('renderChatMessage', renderChatMessage)\r\n\r\n    for (const el of document.querySelectorAll('#chat-log .chat-message')) {\r\n        const message = game.messages.get(el.dataset.messageId)\r\n        if (!message) continue\r\n        renderChatMessage(message, $(el))\r\n    }\r\n\r\n    if (game.user.isGM && game.modules.get('pf2e-rules-based-npc-vision')?.active) {\r\n        ui.notifications.error(`${MODULE_ID}.warning.npc-vision`, { permanent: true, localize: true })\r\n    }\r\n})\r\n\r\nHooks.on('hoverToken', hoverToken)\r\nHooks.on('pasteToken', pasteToken)\r\nHooks.on('updateToken', updateToken)\r\nHooks.on('deleteToken', deleteToken)\r\nHooks.on('controlToken', controlToken)\r\nHooks.on('renderTokenHUD', renderTokenHUD)\r\nHooks.on('preCreateToken', preCreateToken)\r\n\r\nHooks.on('canvasPan', () => clearConditionals())\r\n\r\nHooks.on('renderCheckModifiersDialog', renderCheckModifiersDialog)\r\n"],
  "mappings": "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",
  "names": ["COVER_UUID", "VISIBILITY_VALUES", "VISIBILITIES", "COVERS", "COVER_VALUES", "defaultValues", "attackCheckRoll", "validCheckRoll", "ICONS_PATHS", "VISION_LEVELS", "MODULE_ID", "templatePath", "template", "__name", "localize", "args", "data", "useFormat", "keys", "getFlag", "doc", "flag", "setFlag", "value", "unsetFlag", "getFlags", "getSetting", "setting", "setSetting", "hasPermission", "createFlatFootedSource", "visibility", "name", "__name", "createCoverSource", "level", "bonus", "COVER_VALUES", "localize", "COVER_UUID", "MODULE_ID", "findChoiceSetRule", "item", "flag", "rule", "optionsToObject", "options", "affects", "obj", "split", "first", "last", "path", "value", "__name", "testOption", "type", "option", "test", "values", "x", "selfResult", "targetResult", "getOption", "selfOption", "updateFromOptions", "list", "COVERS", "VISIBILITIES", "setValue", "index", "PredicatePF2e", "statements", "s", "StatementValidator", "predicate", "options", "domain", "#isTrue", "statement", "#testBinaryOp", "#testCompound", "operator", "left", "right", "domainArray", "getValues", "__name", "operand", "maybeNumber", "pattern", "leftValues", "rightValues", "l", "r", "subProp", "_binaryOperators", "isObject", "entries", "operands", "__privateGet", "__privateAdd", "extractEphemeralEffects", "affects", "origin", "target", "item", "domains", "options", "effectsFrom", "effectsTo", "fullOptions", "resolvables", "s", "e", "__name", "traitSlugToObject", "trait", "dictionary", "traitObject", "objectHasKey", "obj", "key", "getRangeIncrement", "attackItem", "distance", "isOffGuardFromFlanking", "actor", "flanking", "rollOptions", "PredicatePF2e", "isObject", "value", "renderSceneConfig", "config", "html", "settings", "list", "setting", "checked", "getSceneSetting", "localize", "addedHeight", "height", "el", "__name", "getValidTokens", "token", "tokens", "t", "getSetting", "combat", "actor", "traits", "validateTokens", "validToken", "id", "scene", "getFlag", "getPrototype", "obj", "depth", "prototype", "__name", "sortByName", "a", "b", "BaseMenu", "#token", "#resolve", "#selected", "#_currentData", "#hoverTokenListener", "token", "resolve", "selected", "options", "hover", "tokenId", "tokens", "params", "localize", "MODULE_ID", "win", "x", "original", "current", "property", "defaultValue", "defaultValues", "originalValue", "currentValue", "validateTokens", "#currentData", "data", "getTokenData", "id", "covers", "COVERS", "value", "isProne", "VISIBILITIES", "html", "event", "target", "tokenIds", "currentData", "setTokenData", "el", "allies", "enemies", "neutral", "alliance", "opposition", "actorAlliance", "sortByName", "__name", "PerceptionMenu", "BaseMenu", "localize", "templatePath", "options", "selected", "currentData", "originalData", "tokens", "getValidTokens", "id", "name", "actor", "current", "original", "html", "event", "section", "allSelected", "t", "__name", "RECT_CORNERS", "RECT_SPREAD", "getRectEdges", "rect", "margin", "opposite", "getRectPoint", "__name", "lineIntersectWall", "origin", "target", "debug", "drawDebugLine", "pointToTokenIntersectWall", "token", "point", "rectSpread", "clearDebug", "color", "hex", "rectCorners", "getLightExposure", "token", "debug", "scene", "clearDebug", "rect", "exposure", "light", "bright", "dim", "contained", "point", "rectCorners", "drawDebugLine", "__name", "renderTokenHUD", "hud", "html", "hasPermission", "event", "PerceptionMenu", "__name", "pasteToken", "originals", "sources", "source", "MODULE_ID", "getTokenData", "token", "path", "getFlag", "clearTokenData", "unsetFlag", "setTokenData", "data", "valid", "getValidTokens", "t", "updates", "tokenId", "current", "original", "defaultValues", "property", "hasStandardCover", "origin", "target", "debug", "scene", "getSceneSetting", "clearDebug", "standard", "getSetting", "lineIntersectWall", "pointToTokenIntersectWall", "SIZES", "getCreatureCover", "originToken", "targetToken", "options", "setting", "optionsToObject", "ignoreIds", "cover", "drawDebugLine", "isExtraLarge", "size", "originSize", "targetSize", "tokens", "a", "b", "extralarges", "margin", "intersectsEdge", "edge", "intersectsWith", "edges", "tokenDocument", "getRectEdges", "getVisibility", "systemVisibility", "originActor", "visibilities", "visibility", "mergedVisibility", "VISIBILITY_VALUES", "mergedVisibilityValue", "exposure", "getLightExposure", "exposedVisibility", "updateToken", "context", "userId", "flags", "hk", "refreshed", "hoverToken", "hovered", "showAllConditionals", "clearConditionals", "deleteToken", "controlToken", "showConditionals", "scale", "coords", "content", "savedPaths", "value", "icon", "ICONS_PATHS", "getConditionalCover", "prone", "isProne", "systemCover", "getCoverEffect", "COVER_VALUES", "rulesBasedVision", "preCreateToken", "getRollContext", "params", "selfToken", "targetToken", "t", "selfOptions", "originEphemeralEffects", "extractEphemeralEffects", "selfActor", "isStrike", "strikeActions", "a", "statistic", "action", "selfItem", "itemClone", "itemOptions", "traitSlugs", "d", "adjustment", "traits", "traitSlugToObject", "distance", "originDistance", "targetDistance", "getTargetRollOptions", "__name", "actor", "targetOptions", "mark", "targetRollOptions", "targetEphemeralEffects", "reach", "isMelee", "addConditionals", "isOffGuardFromFlanking", "name", "condition", "targetActor", "rollOptions", "rangeIncrement", "getRangeIncrement", "self", "target", "ephemeralEffects", "options", "cover", "getConditionalCover", "visibility", "getVisibility", "optionsToObject", "updateFromOptions", "coverBonus", "ac", "getOption", "testOption", "COVER_VALUES", "createCoverSource", "VISIBILITY_VALUES", "createFlatFootedSource", "getActorToken", "actorId", "isToken", "token", "isProne", "item", "getCoverEffect", "selection", "effect", "x", "COVER_UUID", "findChoiceSetRule", "visionLevel", "senses", "sensesRules", "r", "VISION_LEVELS", "__name", "renderChatMessage", "message", "html", "token", "isGM", "hasPlayerOwner", "cover", "selected", "skipWait", "validated", "pointOut", "getFlags", "pf2eContext", "button", "createValidateButton", "CoverValidationMenu", "hint", "createWaitHint", "flavor", "msg", "localize", "createHint", "type", "createChatButton", "setFlag", "addVisibilityValidationButton", "HideValidationMenu", "addBlindSkillCheckFlavor", "SeekValidationMenu", "selectedToken", "buttons", "PointOutValidationMenu", "t", "attackCheckRoll", "event", "UnHideValidationMenu", "__name", "validateMessage", "getFlag", "property", "ValidationMenu", "roll", "label", "action", "icon", "createTokenMessage", "content", "flags", "secret", "data", "MODULE_ID", "DEGREE_ADJUSTMENT_AMOUNTS", "DEGREE_OF_SUCCESS_STRINGS", "_getDegreeAdjustment", "getDegreeAdjustment_fn", "_adjustDegreeOfSuccess", "adjustDegreeOfSuccess_fn", "_adjustDegreeByDieValue", "adjustDegreeByDieValue_fn", "_calculateDegreeOfSuccess", "calculateDegreeOfSuccess_fn", "_DegreeOfSuccess", "roll", "dc", "dosAdjustments", "__privateAdd", "t", "d", "__privateMethod", "DegreeOfSuccess", "__name", "degree", "adjustments", "outcome", "label", "amount", "degreeOfSuccess", "__publicField", "templateConversion", "createSeekTemplate", "type", "token", "createTemplate", "__name", "getTokenTemplate", "t", "getFlag", "getTokenTemplateTokens", "checkScene", "template", "getTokens", "deleteTokenTemplate", "templates", "localize", "distance", "traits", "fillColor", "width", "templateData", "MODULE_ID", "templateDoc", "collisionOrigin", "collisionType", "grid", "dimensions", "gridHighlight", "origin", "tokens", "containedTokens", "tokenDoc", "tokenPositions", "h", "y", "w", "position", "gx", "gy", "s", "destination", "ValidationMenu", "BaseMenu", "params", "options", "validated", "validateMessage", "localize", "templatePath", "selected", "token", "alliance", "getValidTokens", "t", "converted", "data", "property", "scene", "defaultValue", "defaultValues", "propertyList", "COVERS", "VISIBILITIES", "tokenId", "fullProperty", "currentValue", "processedValue", "covers", "visibilities", "i18n", "currentData", "originalData", "tokens", "id", "name", "actor", "current", "original", "validation", "getSetting", "html", "event", "__name", "CoverValidationMenu", "#value", "VisibilityValidationMenu", "#roll", "HideValidationMenu", "value", "roll", "dc", "visibility", "VISIBILITY_VALUES", "success", "DegreeOfSuccess", "UnHideValidationMenu", "PointOutValidationMenu", "#originator", "originatorId", "getTokenData", "ReverseVisibilityValidationMenu", "thisId", "tokenData", "parentData", "updates", "update", "MODULE_ID", "SeekValidationMenu", "deleteTokenTemplate", "setupActions", "hide", "BaseAction", "getPrototype", "BaseActionVariant", "SingleCheckAction", "SingleCheckActionVariant", "setupCover", "setupHide", "setupSeek", "setupPointOut", "__name", "PointOutVariant", "options", "action", "localize", "token", "getSelectedToken", "pointOut", "PointOut", "MODULE_ID", "data", "name", "traits", "target", "t", "visibility", "getTokenData", "isVisible", "VISIBILITY_VALUES", "description", "dc", "content", "templatePath", "slug", "flags", "createTokenMessage", "SeekVariant", "seek", "deleteTokenTemplate", "result", "selected", "openVisibilityValidationMenu", "SeekValidationMenu", "Seek", "unit", "createButton", "html", "event", "createSeekTemplate", "HideVariant", "HideValidationMenu", "Hide", "TakeCoverVariant", "takeCover", "TakeCover", "actor", "cover", "getCoverEffect", "targets", "validateTokens", "covers", "tokenId", "id", "isProne", "dialog", "level", "skip", "getSetting", "process", "flavor", "defaultValues", "message", "clearTokenData", "setTokenData", "CoverValidationMenu", "source", "createCoverSource", "tokens", "actors", "getActorToken", "icon", "label", "ValidationMenu", "roll", "checkRoll", "wrapped", "args", "context", "actor", "createMessage", "type", "token", "target", "isReroll", "originToken", "getActorToken", "targetToken", "isAttackRoll", "attackCheckRoll", "flatCheck", "getSetting", "validCheckRoll", "options", "optionsToObject", "visibility", "updateFromOptions", "getVisibility", "optionDC", "getOption", "dc", "isSuccess", "isUndetected", "VISIBILITY_VALUES", "highlighted", "getTokenTemplateTokens", "tokens", "selected", "validateTokens", "t", "__name", "renderCheckModifiersDialog", "dialog", "html", "targetActor", "coverEffect", "getCoverEffect", "currentCover", "findChoiceSetRule", "getFlag", "coverOverride", "MODULE_ID", "template", "localize", "isProne", "COVERS", "slug", "label", "event", "value", "modified", "items", "coverIndex", "i", "COVER_UUID", "source", "createCoverSource", "statistic", "basicSightCanDetect", "wrapped", "visionSource", "target", "isValidTarget", "isUndetected", "isHidden", "__name", "hearingCanDetect", "feelTremorCanDetect", "reachesThreshold", "tokens", "threshold", "origin", "visibility", "getTokenData", "VISIBILITY_VALUES", "mode", "unnoticed", "filtered", "t", "d", "renderCombatTracker", "tracker", "html", "getSetting", "setupToggleTarget", "hideUndetected", "__name", "combatants", "i", "li", "combatantId", "token", "isUndetected", "_", "el", "event", "isTargeted", "t", "renderCombatTrackerConfig", "config", "checked", "localize", "setSetting", "ICONS", "IconPathMenu", "templatePath", "localize", "saved", "getSetting", "name", "ICONS_PATHS", "html", "event", "formData", "setSetting", "__name", "registerSettings", "register", "MODULE_ID", "path", "IconPathMenu", "__name", "setting", "key", "name", "type", "defValue", "extra", "CHECK_ROLL", "RULES_BASED_VISION", "GET_ROLL_CONTEXT", "VISION_LEVEL", "BASIC_SIGHT_CAN_DETECT", "HEARING_CAN_DETECT", "FEEL_TREMOR_CAN_DETECT", "registerSettings", "setupActions", "MODULE_ID", "checkRoll", "rulesBasedVision", "getRollContext", "visionLevel", "basicSightCanDetect", "hearingCanDetect", "feelTremorCanDetect", "x", "renderSceneConfig", "renderCombatTrackerConfig", "renderCombatTracker", "clearDebug", "lineIntersectWall", "pointToTokenIntersectWall", "getCreatureCover", "getVisibility", "clearConditionals", "showConditionals", "showAllConditionals", "hasStandardCover", "getTokenData", "getLightExposure", "getActorToken", "isProne", "getCoverEffect", "getConditionalCover", "getValidTokens", "validateTokens", "getSceneSetting", "isUndetected", "renderChatMessage", "el", "message", "hoverToken", "pasteToken", "updateToken", "deleteToken", "controlToken", "renderTokenHUD", "preCreateToken", "renderCheckModifiersDialog"]
}
