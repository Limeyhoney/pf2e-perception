{
  "version": 3,
  "sources": ["../src/constants.js", "../src/module.js", "../src/effect.js", "../src/scene.js", "../src/utils.js", "../src/apps/base-menu.js", "../src/apps/perception.js", "../src/geometry.js", "../src/lighting.js", "../src/token.js", "../src/actor.js", "../src/chat.js", "../src/template.js", "../src/apps/validation.js", "../src/action.js", "../src/combat.js", "../src/detection.js", "../src/roll.js", "../src/settings.js", "../src/main.js"],
  "sourcesContent": ["export const COVER_UUID = 'Compendium.pf2e.other-effects.Item.I9lfZUiCwMiGogVi'\r\n\r\nexport const VISIBILITY_VALUES = {\r\n    [undefined]: 0,\r\n    observed: 0,\r\n    concealed: 1,\r\n    hidden: 2,\r\n    undetected: 3,\r\n    unnoticed: 4,\r\n}\r\n\r\nexport const VISIBILITIES = ['observed', 'concealed', 'hidden', 'undetected', 'unnoticed']\r\n\r\nexport const COVERS = ['none', 'lesser', 'standard', 'greater', 'greater-prone']\r\n\r\nexport const COVER_VALUES = {\r\n    [undefined]: 0,\r\n    none: 0,\r\n    lesser: 1,\r\n    standard: 2,\r\n    greater: 3,\r\n    'greater-prone': 4,\r\n}\r\n\r\nexport const defaultValues = {\r\n    cover: 'none',\r\n    visibility: 'observed',\r\n}\r\n\r\nexport const attackCheckRoll = ['attack-roll', 'spell-attack-roll']\r\n\r\nexport const validCheckRoll = [...attackCheckRoll, 'skill-check', 'perception-check']\r\n", "export const MODULE_ID = 'pf2e-perception'\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function getFlag(doc, flag) {\r\n    return doc.getFlag(MODULE_ID, flag)\r\n}\r\n\r\nexport function setFlag(doc, flag, value) {\r\n    return doc.setFlag(MODULE_ID, flag, value)\r\n}\r\n\r\nexport function unsetFlag(doc, flag) {\r\n    return doc.unsetFlag(MODULE_ID, flag, true)\r\n}\r\n\r\nexport function getFlags(doc) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) ?? {}\r\n}\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n", "import { COVER_UUID, COVER_VALUES } from './constants.js'\r\nimport { localize } from './module.js'\r\n\r\nexport function createFlatFootedSource(visibility) {\r\n    const name = game.i18n.localize(`PF2E.condition.${visibility}.name`)\r\n    const condition = game.pf2e.ConditionManager.getCondition('flat-footed', { name })\r\n    return condition.toObject()\r\n}\r\n\r\nexport function createCoverSource(cover) {\r\n    const bonus = COVER_VALUES[cover]\r\n\r\n    return {\r\n        _id: 'I9lfZUiCwMiGogVi',\r\n        img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n        name: localize('cover', cover),\r\n        system: {\r\n            description: {\r\n                gm: '',\r\n                value: \"<p>When you're behind an obstacle that could block weapons, guard you against explosions, and make you harder to detect, you're behind cover. Standard cover gives you a +2 circumstance bonus to AC, to Reflex saves against area effects, and to Stealth checks to Hide, Sneak, or otherwise avoid detection. You can increase this to greater cover using the Take Cover basic action, increasing the circumstance bonus to +4. If cover is especially light, typically when it's provided by a creature, you have lesser cover, which grants a +1 circumstance bonus to AC. A creature with standard cover or greater cover can attempt to use Stealth to Hide, but lesser cover isn't sufficient.</p>\",\r\n            },\r\n            rules: [\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-bonus:${bonus}` },\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-level:${cover}` },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: [{ and: ['self:condition:prone', 'item:ranged'] }, { not: 'self:cover-level:greater-prone' }] },\r\n                    ],\r\n                    selector: 'ac',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['area-effect', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'reflex',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: ['action:hide', 'action:sneak', 'avoid-detection'] },\r\n                        { not: 'self:cover-level:greater-prone' },\r\n                    ],\r\n                    selector: 'stealth',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['action:avoid-notice', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'initiative',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n            ],\r\n            slug: 'effect-cover',\r\n        },\r\n        type: 'effect',\r\n        flags: { core: { sourceId: COVER_UUID } },\r\n    }\r\n}\r\n\r\nexport function findChoiceSetRule(item, flag = undefined) {\r\n    if (!item) return undefined\r\n    return item.system.rules.find(rule => rule.key === 'ChoiceSet' && (!flag || rule.flag === flag))\r\n}\r\n", "import { getFlag, getSetting, localize } from './module.js'\r\n\r\nexport function renderSceneConfig(config, html) {\r\n    const tab = html.find('.tab[data-tab=\"basic\"]')\r\n    const checked = getStandardSetting(config.object)\r\n\r\n    tab.find('hr').first().after(`<div class=\"form-group\">\r\n    <label>${localize('settings.standard.name')}</label>\r\n    <input type=\"checkbox\" name=\"flags.pf2e-perception.standard\" ${checked ? 'checked' : ''}>\r\n    <p class=\"notes\">${localize('settings.standard.short')}</p>\r\n</div><hr>`)\r\n\r\n    config.setPosition()\r\n}\r\n\r\nexport function getValidTokens(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    if (!(token instanceof TokenDocument)) return []\r\n    return token.scene.tokens.filter(t => t !== token && t.actor?.isOfType('creature'))\r\n}\r\n\r\nexport function validateTokens(token, tokens) {\r\n    const validToken = getValidTokens(token).map(t => t.id)\r\n    return tokens.filter(t => {\r\n        const id = t instanceof Token || t instanceof TokenDocument ? t.id : t\r\n        return validToken.includes(id)\r\n    })\r\n}\r\n\r\nexport function getStandardSetting(scene) {\r\n    return getFlag(scene, 'standard') ?? getSetting('standard')\r\n}\r\n\r\nexport function getConcealedSetting(scene) {\r\n    return getFlag(scene, 'concealed') ?? getSetting('concealed')\r\n}\r\n", "export function modifier(value) {\r\n    return value >= 0 ? `+${value}` : value\r\n}\r\n\r\nexport function omit(object, names) {\r\n    const set = new Set(names)\r\n    return Object.entries(object).reduce((acc, [name, value]) => {\r\n        if (!set.has(name)) acc[name] = value\r\n        return acc\r\n    }, {})\r\n}\r\n\r\nexport function getPrototype(obj, depth = 1) {\r\n    const prototype = Object.getPrototypeOf(obj)\r\n    if (depth > 1) return getPrototype(prototype, depth - 1)\r\n    return prototype\r\n}\r\n\r\nexport function sortByName(a, b) {\r\n    return a.name.localeCompare(b.name)\r\n}\r\n", "import { isProne } from '../actor.js'\r\nimport { COVERS, VISIBILITIES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, localize } from '../module.js'\r\nimport { validateTokens } from '../scene.js'\r\nimport { getTokenData, setTokenData } from '../token.js'\r\nimport { sortByName } from '../utils.js'\r\n\r\nexport class BaseMenu extends Application {\r\n    #token\r\n    #resolve\r\n    #selected\r\n    #_currentData\r\n    #hoverTokenListener\r\n\r\n    constructor({ token, resolve, selected = [] }, options = {}) {\r\n        super(options)\r\n\r\n        this.#token = token\r\n        this.#resolve = resolve\r\n        this.#selected = selected\r\n\r\n        this.#hoverTokenListener = (token, hover) => {\r\n            const tokenId = token.id\r\n            const tokens = this.element.find('[data-token-id]')\r\n            tokens.removeClass('hover')\r\n            if (hover) tokens.filter(`[data-token-id=${tokenId}]`).addClass('hover')\r\n        }\r\n\r\n        Hooks.on('hoverToken', this.#hoverTokenListener)\r\n    }\r\n\r\n    async close(options = {}) {\r\n        Hooks.off('hoverToken', this.#hoverTokenListener)\r\n        this.#resolve?.(options.resolve ?? false)\r\n        super.close(options)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            minimizable: false,\r\n        })\r\n    }\r\n\r\n    static async openMenu(params, options = {}) {\r\n        if (params.token instanceof TokenDocument) params.token = params.token.object\r\n        if (!params.token) {\r\n            ui.notifications.error(localize('menu.no-token'))\r\n            return\r\n        }\r\n\r\n        options.id = `${MODULE_ID}-${params.token.document.uuid}`\r\n\r\n        const win = Object.values(ui.windows).find(x => x.id === options.id)\r\n        if (win) win.close()\r\n\r\n        return new Promise(resolve => {\r\n            params.resolve = resolve\r\n            new this(params, options).render(true)\r\n        })\r\n    }\r\n\r\n    static createPropertyData(original, current, property) {\r\n        const defaultValue = defaultValues[property]\r\n        const originalValue = original[property] ?? defaultValue\r\n        const currentValue = current[property] ?? defaultValue\r\n        return {\r\n            original: originalValue,\r\n            current: currentValue,\r\n            changed: originalValue !== currentValue,\r\n            custom: currentValue !== defaultValue,\r\n            originalCustom: originalValue !== defaultValue,\r\n        }\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get document() {\r\n        return this.#token.document\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token.actor\r\n    }\r\n\r\n    get scene() {\r\n        return this.#token.scene\r\n    }\r\n\r\n    get selected() {\r\n        return this.#selected.length ? validateTokens(this.token, this.#selected) : []\r\n    }\r\n\r\n    get currentData() {\r\n        return deepClone(this.#currentData)\r\n    }\r\n\r\n    get #currentData() {\r\n        if (!this.#_currentData) this.#_currentData = this.getSavedData()\r\n        return this.#_currentData\r\n    }\r\n\r\n    getSavedData() {\r\n        const data = getTokenData(this.document) ?? {}\r\n        return deepClone(data)\r\n    }\r\n\r\n    reset() {\r\n        this.#_currentData = this.getSavedData()\r\n        this.#selected = []\r\n        this.render()\r\n    }\r\n\r\n    isSelected(token) {\r\n        const id = typeof token === 'object' ? token.id : token\r\n        return this.#selected.includes(id)\r\n    }\r\n\r\n    getData(options) {\r\n        const covers = COVERS.map(value => ({ value, label: localize(`cover.${value}`) }))\r\n\r\n        return {\r\n            i18n: (...args) => localize(...args),\r\n            covers: isProne(this.actor) ? covers : covers.slice(0, -1),\r\n            visibilities: VISIBILITIES.map(value => ({ value, label: localize(`visibility.${value}`) })),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('[data-token-id]').on('mouseenter', event => {\r\n            const { tokenId } = event.currentTarget.dataset\r\n            const token = this.scene.tokens.get(tokenId)?.object\r\n            if (!token || token.controlled) return\r\n            token._onHoverIn(event, { hoverOutOthers: true })\r\n        })\r\n\r\n        html.find('[data-action=close]').on('click', () => {\r\n            this.close({ resolve: true })\r\n        })\r\n\r\n        html.find('select[name=visibility], select[name=cover]').on('change', event => {\r\n            const target = event.currentTarget\r\n            const property = target.name\r\n            const defaultValue = defaultValues[property]\r\n            const value = target.value || defaultValue\r\n            const tokenId = target.closest('.token')?.dataset.tokenId\r\n            const tokenIds = tokenId ? [tokenId] : this.#selected\r\n\r\n            for (const tokenId of tokenIds) {\r\n                setProperty(this.#currentData, `${tokenId}.${property}`, value)\r\n            }\r\n\r\n            if (tokenId) {\r\n                target.classList.toggle('changed', value !== target.dataset.original)\r\n                target.classList.toggle('custom', value !== defaultValue)\r\n            } else this.render()\r\n        })\r\n\r\n        html.find('[data-action=accept]').on('click', event => {\r\n            this._saveData(this.#currentData)\r\n            this.close({ resolve: true })\r\n        })\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        setTokenData(this.document, currentData)\r\n    }\r\n\r\n    _setSelected(selected) {\r\n        this.#selected =\r\n            selected ??\r\n            this.element\r\n                .find('[data-token-id].ui-selected')\r\n                .toArray()\r\n                .map(el => el.dataset.tokenId)\r\n    }\r\n\r\n    _spliIntoAlliances(tokens) {\r\n        const allies = []\r\n        const enemies = []\r\n        const neutral = []\r\n\r\n        const alliance = this.actor.alliance\r\n        const opposition = alliance === 'party' ? 'opposition' : alliance === 'opposition' ? 'party' : null\r\n\r\n        for (const token of tokens) {\r\n            if (opposition) {\r\n                const actorAlliance = token.actor ? token.actor.alliance : token.alliance\r\n                if (actorAlliance === alliance) allies.push(token)\r\n                else if (actorAlliance === opposition) enemies.push(token)\r\n                else if (actorAlliance === null) neutral.push(token)\r\n            } else neutral.push(token)\r\n        }\r\n\r\n        return {\r\n            allies: allies.sort(sortByName),\r\n            neutral: neutral.sort(sortByName),\r\n            enemies: enemies.sort(sortByName),\r\n            hasTokens: allies.length || enemies.length || neutral.length,\r\n        }\r\n    }\r\n}\r\n", "import { localize, templatePath } from '../module.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { setTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nexport class PerceptionMenu extends BaseMenu {\r\n    get title() {\r\n        return localize('menu.perception.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('perception')\r\n    }\r\n\r\n    getData(options) {\r\n        const selected = this.selected\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData()\r\n\r\n        const tokens = getValidTokens(this.token).map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                cover: BaseMenu.createPropertyData(original, current, 'cover'),\r\n                visibility: BaseMenu.createPropertyData(original, current, 'visibility'),\r\n                selected: selected.includes(id),\r\n            }\r\n        })\r\n\r\n        return {\r\n            ...super.getData(options),\r\n            ...this._spliIntoAlliances(tokens),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.filter('.tokens').selectable({\r\n            autoRefresh: false,\r\n            filter: '.token',\r\n            cancel: 'header,select',\r\n            stop: () => this._setSelected(),\r\n        })\r\n\r\n        html.find('[data-action=select-all]').on('click', event => {\r\n            const section = $(event.currentTarget).closest('section')\r\n            const tokens = (section.length ? section : html).find('[data-token-id]')\r\n            const allSelected = tokens.filter(':not(.ui-selected)').length === 0\r\n            tokens.toggleClass('ui-selected', !allSelected)\r\n            this._setSelected()\r\n        })\r\n\r\n        html.find('[data-action=use-selection]').on('click', event => {\r\n            this._setSelected(canvas.tokens.controlled.map(t => t.id))\r\n            this.render()\r\n        })\r\n\r\n        html.find('[data-action=reset]').on('click', event => this.reset())\r\n    }\r\n}\r\n", "export const RECT_CORNERS = [\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 1, y: 1 },\r\n]\r\n\r\nexport const RECT_SPREAD = [\r\n    { x: 0.25, y: 0.25 },\r\n    { x: 0.5, y: 0.25 },\r\n    { x: 0.75, y: 0.25 },\r\n    { x: 0.25, y: 0.5 },\r\n    { x: 0.5, y: 0.5 },\r\n    { x: 0.75, y: 0.5 },\r\n    { x: 0.25, y: 0.75 },\r\n    { x: 0.5, y: 0.75 },\r\n    { x: 0.75, y: 0.75 },\r\n]\r\n\r\nexport function getRectEdges(rect, margin) {\r\n    const opposite = 1 - margin\r\n    return {\r\n        top: { A: getRectPoint({ x: margin, y: margin }, rect), B: getRectPoint({ x: opposite, y: margin }, rect) },\r\n        right: { A: getRectPoint({ x: opposite, y: margin }, rect), B: getRectPoint({ x: opposite, y: opposite }, rect) },\r\n        bottom: { A: getRectPoint({ x: opposite, y: opposite }, rect), B: getRectPoint({ x: margin, y: opposite }, rect) },\r\n        left: { A: getRectPoint({ x: margin, y: opposite }, rect), B: getRectPoint({ x: margin, y: margin }, rect) },\r\n    }\r\n}\r\n\r\nexport function lineIntersectWall(origin, target) {\r\n    // drawDebugLine(origin, target)\r\n    return CONFIG.Canvas.polygonBackends.move.testCollision(origin, target, { type: 'move', mode: 'any' })\r\n}\r\n\r\nexport function pointToTokenIntersectWall(origin, token) {\r\n    const rect = token.bounds\r\n    for (const point of RECT_SPREAD) {\r\n        const coords = getRectPoint(point, rect)\r\n        if (lineIntersectWall(origin, coords)) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getRectPoint(point, rect) {\r\n    return { x: rect.x + rect.width * point.x, y: rect.y + rect.height * point.y }\r\n}\r\n\r\nexport function clearDebug() {\r\n    canvas.controls.debug.clear()\r\n}\r\n\r\nexport function drawDebugLine(origin, target, color = 'blue') {\r\n    const hex = color === 'blue' ? 0x0066cc : 0xff0000\r\n    canvas.controls.debug.lineStyle(4, hex).moveTo(origin.x, origin.y).lineTo(target.x, target.y)\r\n}\r\n", "import { RECT_CORNERS, RECT_SPREAD, getRectPoint } from './geometry.js'\r\nimport { getConcealedSetting } from './scene.js'\r\n\r\nexport function isConcealed(token) {\r\n    token = token instanceof Token ? token : token.object\r\n\r\n    if (token.document.hasStatusEffect(CONFIG.specialStatusEffects.INVISIBLE)) return false\r\n\r\n    const scene = token.scene\r\n    if (\r\n        scene !== canvas.scene ||\r\n        !scene.tokenVision ||\r\n        scene.darkness < scene.globalLightThreshold ||\r\n        !getConcealedSetting(scene)\r\n    )\r\n        return false\r\n\r\n    return !inBrightLight(token)\r\n}\r\n\r\nfunction inBrightLight(token) {\r\n    const rect = token.bounds\r\n\r\n    for (const light of canvas.effects.lightSources) {\r\n        if (!light.active || light.data.bright === 0) continue\r\n\r\n        if (light.object === token) return true\r\n\r\n        if (!inBrightRange(light.object.center, rect, light.data.bright)) continue\r\n\r\n        if (light.data.walls === false) return true\r\n\r\n        for (const point of RECT_SPREAD) {\r\n            const { x, y } = getRectPoint(point, rect)\r\n            if (light.shape.contains(x, y)) return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nfunction inBrightRange(origin, rect, bright) {\r\n    for (const point of RECT_CORNERS) {\r\n        const rectPoint = getRectPoint(point, rect)\r\n        const distance = new Ray(origin, rectPoint).distance\r\n        if (distance < bright) return true\r\n    }\r\n    return false\r\n}\r\n", "import { PerceptionMenu } from './apps/perception.js'\r\nimport { VISIBILITY_VALUES, defaultValues } from './constants.js'\r\nimport { getRectEdges, lineIntersectWall, pointToTokenIntersectWall } from './geometry.js'\r\nimport { isConcealed } from './lighting.js'\r\nimport { MODULE_ID, getFlag, getSetting, unsetFlag } from './module.js'\r\nimport { getStandardSetting, getValidTokens } from './scene.js'\r\n\r\nexport function renderTokenHUD(hud, html) {\r\n    if (!hud.object.actor?.isOfType('creature')) return\r\n    html.find('.col.left').append(`<div class=\"control-icon\" data-action=\"pf2e-perception\"><i class=\"fa-solid fa-eye\"></i></div>`)\r\n    html.find('[data-action=pf2e-perception]').on('click', event => PerceptionMenu.openMenu({ token: hud.object }))\r\n}\r\n\r\nexport function pasteToken(originals, sources) {\r\n    for (const source of sources) {\r\n        delete source.flags?.[MODULE_ID]\r\n    }\r\n}\r\n\r\nexport function getTokenData(token, ...path) {\r\n    path.unshift('data')\r\n    token = token instanceof Token ? token.document : token\r\n    const data = getFlag(token, path.join('.'))\r\n    return getFlag(token, path.join('.'))\r\n}\r\n\r\nexport async function clearTokenData(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    return unsetFlag(token, 'data')\r\n}\r\n\r\nexport async function setTokenData(token, data) {\r\n    const valid = getValidTokens(token).map(t => t.id)\r\n    const updates = {}\r\n\r\n    for (const tokenId in data) {\r\n        if (!valid.includes(tokenId)) {\r\n            delete data[tokenId]\r\n            continue\r\n        }\r\n\r\n        const current = data[tokenId]\r\n        const original = getTokenData(token, tokenId) ?? {}\r\n\r\n        if (current.visibility === defaultValues.visibility) delete current.visibility\r\n        if (current.cover === defaultValues.cover) delete current.cover\r\n\r\n        if (original.cover === current.cover && original.visibility === current.visibility) continue\r\n\r\n        if (!current.visibility && !current.cover) {\r\n            updates[`flags.${MODULE_ID}.data.-=${tokenId}`] = true\r\n        } else {\r\n            for (const property of ['cover', 'visibility']) {\r\n                if (original[property] === current[property]) continue\r\n                if (!current[property]) updates[`flags.${MODULE_ID}.data.${tokenId}.-=${property}`] = true\r\n                else updates[`flags.${MODULE_ID}.data.${tokenId}.${property}`] = current[property]\r\n            }\r\n        }\r\n    }\r\n\r\n    token = token instanceof Token ? token.document : token\r\n    return token.update(updates)\r\n}\r\n\r\nexport function hasStandardCover(origin, target) {\r\n    const scene = origin.scene\r\n    if (!getStandardSetting(scene)) return false\r\n\r\n    // clearDebug()\r\n\r\n    const standard = getSetting('standard-type')\r\n    if (standard === 'center') return lineIntersectWall(origin.center, target.center)\r\n    else if (standard === 'points') return pointToTokenIntersectWall(origin.center, target)\r\n    // else return allTokenCornersToPointIntersectWall(origin, target.center)\r\n}\r\n\r\nconst SIZES = {\r\n    tiny: 0,\r\n    sm: 1,\r\n    med: 2,\r\n    lg: 3,\r\n    huge: 4,\r\n    grg: 5,\r\n}\r\n\r\nexport function getCreatureCover(originToken, targetToken) {\r\n    const setting = getSetting('lesser')\r\n    if (setting === 'none') return undefined\r\n\r\n    let cover = undefined\r\n    const origin = originToken.center\r\n    const target = targetToken.center\r\n    const originSize = SIZES[originToken.actor.size]\r\n    const targetSize = SIZES[targetToken.actor.size]\r\n    const tokens = originToken.scene.tokens\r\n\r\n    // clearDebug()\r\n    // drawDebugLine(origin, target)\r\n\r\n    const isExtraLarge = token => {\r\n        const size = SIZES[token.actor.size]\r\n        return size - originSize >= 2 && size - targetSize >= 2\r\n    }\r\n    const hasExtraLarge = originSize < SIZES.huge && targetSize < SIZES.huge && tokens.some(isExtraLarge)\r\n\r\n    const margin = setting === 'ten' ? 0.1 : setting === 'twenty' ? 0.2 : 0\r\n\r\n    const intersectsEdge = edge => {\r\n        // drawDebugLine(edge.A, edge.B, 'red')\r\n        return lineSegmentIntersects(origin, target, edge.A, edge.B)\r\n    }\r\n    const intersectsWith =\r\n        setting === 'cross'\r\n            ? edges => {\r\n                  return (\r\n                      (intersectsEdge(edges.top) && intersectsEdge(edges.bottom)) ||\r\n                      (intersectsEdge(edges.left) && intersectsEdge(edges.right))\r\n                  )\r\n              }\r\n            : edges => Object.values(edges).some(edge => intersectsEdge(edge))\r\n\r\n    for (const tokenDocument of tokens) {\r\n        const token = tokenDocument.object\r\n        if (tokenDocument.hidden || token === originToken || token === targetToken) continue\r\n\r\n        const edges = getRectEdges(token.bounds, margin)\r\n        if (!intersectsWith(edges)) continue\r\n\r\n        if (!hasExtraLarge) return 'lesser'\r\n        else if (isExtraLarge(tokenDocument)) return 'standard'\r\n        else cover = 'lesser'\r\n    }\r\n\r\n    return cover\r\n}\r\n\r\nexport function getVisibility(origin, target, checkConcealed = false) {\r\n    const systemVisibility = (() => {\r\n        const originActor = origin.actor\r\n        const visibilities = ['unnoticed', 'undetected', 'hidden']\r\n        if (checkConcealed) visibilities.push('concealed')\r\n\r\n        for (const visibility of visibilities) {\r\n            if (originActor.hasCondition(visibility)) return visibility\r\n        }\r\n    })()\r\n\r\n    const visibility = getTokenData(origin, target.id, 'visibility')\r\n    const mergedVisibility = VISIBILITY_VALUES[systemVisibility] > VISIBILITY_VALUES[visibility] ? systemVisibility : visibility\r\n\r\n    if (checkConcealed && VISIBILITY_VALUES[mergedVisibility] < VISIBILITY_VALUES.concealed && !target.actor.hasLowLightVision) {\r\n        const concealed = isConcealed(origin)\r\n        if (concealed) return 'concealed'\r\n    }\r\n\r\n    return mergedVisibility\r\n}\r\n\r\nexport function updateToken(token, data, context, userId) {\r\n    const flags = data.flags?.['pf2e-perception']\r\n    if (flags && (flags.data || flags['-=data'] !== undefined)) {\r\n        token.object.renderFlags.set({ refreshVisibility: true })\r\n    }\r\n}\r\n\r\nexport function hoverToken(token, hovered) {\r\n    if (hovered) showAllConditionals(token)\r\n    else clearConditionals(token)\r\n}\r\n\r\nexport function deleteToken(token) {\r\n    clearConditionals(token)\r\n}\r\n\r\nexport function controlToken(token) {\r\n    clearConditionals(token)\r\n    Hooks.once('sightRefresh', () => token.hover && showAllConditionals(token))\r\n}\r\n\r\nexport function clearConditionals(token) {\r\n    const tokenId = token?.id\r\n    if (!tokenId) return $('.pf2e-conditionals').remove()\r\n    $(`.pf2e-conditionals[data-hover-id=${token.id}]`).remove()\r\n    $(`.pf2e-conditionals[data-token-id=${token.id}]`).remove()\r\n}\r\n\r\nexport function showAllConditionals(token) {\r\n    const tokens = getValidTokens(token)\r\n    for (const target of tokens) {\r\n        showConditionals(target, token)\r\n    }\r\n}\r\n\r\nexport async function showConditionals(origin, target) {\r\n    origin = origin instanceof Token ? origin : origin.object\r\n    if (!origin.visible || !origin.actor.isOfType('creature')) return\r\n\r\n    const data = getTokenData(origin, target.id)\r\n    if (isEmpty(data)) return\r\n\r\n    const scale = origin.worldTransform.a\r\n    const coords = canvas.clientCoordinatesFromCanvas(origin.document._source)\r\n\r\n    let content = `<div class=\"pf2e-conditionals\" data-hover-id=\"${origin.id}\" data-token-id=\"${target.id}\" `\r\n    content += `style=\"top: ${coords.y}px; left: ${coords.x + (origin.hitArea.width * scale) / 2}px;\">`\r\n\r\n    Object.entries(data).map(([property, value]) => {\r\n        const img = property === 'cover' ? 'modules/pf2e-perception/images/cover' : `systems/pf2e/icons/conditions/${value}`\r\n        content += `<div class=\"conditional\"><img src=\"../../../${img}.webp\"></img></div>`\r\n    })\r\n\r\n    content += '</div>'\r\n\r\n    $(document.body).append(content)\r\n}\r\n", "import { COVER_UUID, COVER_VALUES, VISIBILITY_VALUES } from './constants.js'\r\nimport { createCoverSource, createFlatFootedSource, findChoiceSetRule } from './effect.js'\r\nimport { getTokenData, getVisibility, getCreatureCover, hasStandardCover } from './token.js'\r\n\r\nexport function getSelfRollOptions(wrapped, prefix) {\r\n    const result = wrapped(prefix)\r\n\r\n    if (prefix === 'origin') {\r\n        const token = getActorToken(this)\r\n        if (token) result.push(`origin:tokenid:${token.id}`)\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function getContextualClone(wrapped, rollOptions, ephemeralEffects) {\r\n    const originId = rollOptions.find(option => option.startsWith('origin:tokenid:'))?.slice(15)\r\n    if (!originId) return wrapped(rollOptions, ephemeralEffects)\r\n\r\n    const target = getActorToken(this, true)\r\n    const origin = target?.scene.tokens.get(originId).object\r\n    if (!origin || !target) return wrapped(rollOptions, ephemeralEffects)\r\n\r\n    const conditionalCover = getConditionalCover(origin, target, rollOptions)\r\n    if (conditionalCover) ephemeralEffects.push(createCoverSource(conditionalCover))\r\n\r\n    const visibility = getVisibility(origin, target)\r\n    if (VISIBILITY_VALUES[visibility] > VISIBILITY_VALUES.concealed) ephemeralEffects.push(createFlatFootedSource(visibility))\r\n\r\n    return wrapped(rollOptions, ephemeralEffects)\r\n}\r\n\r\nexport function getActorToken(actor, target = false) {\r\n    if (!actor) return undefined\r\n    const tokens = target ? game.user.targets : canvas.tokens.controlled\r\n    return tokens.find(token => token.actor === actor) ?? actor.getActiveTokens().shift() ?? null\r\n}\r\n\r\nexport function isProne(actor) {\r\n    return actor.itemTypes.condition.some(item => item.slug === 'prone')\r\n}\r\n\r\nexport function getCoverEffect(actor, selection = false) {\r\n    const effect = actor.itemTypes.effect.find(x => x.sourceId === COVER_UUID)\r\n    return selection ? findChoiceSetRule(effect)?.selection.level : effect\r\n}\r\n\r\nfunction getConditionalCover(origin, target, options) {\r\n    const ranged = options.includes('item:ranged')\r\n    const prone = ranged ? isProne(target.actor) : false\r\n\r\n    let systemCover = getCoverEffect(target.actor, true)\r\n    if (prone && COVER_VALUES[systemCover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && systemCover === 'greater-prone') systemCover = undefined\r\n\r\n    let cover = getTokenData(target, origin.id, 'cover')\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && cover === 'greater-prone') cover = undefined\r\n\r\n    const isCoverable = ranged || options.includes('item:trait:reach') || options.includes('item:type:spell')\r\n\r\n    if (\r\n        COVER_VALUES[cover] < COVER_VALUES.standard &&\r\n        COVER_VALUES[systemCover] < COVER_VALUES.standard &&\r\n        hasStandardCover(origin, target)\r\n    ) {\r\n        cover = 'standard'\r\n    } else if (!cover && !systemCover && isCoverable && origin.distanceTo(target) > 5) {\r\n        cover = getCreatureCover(origin, target)\r\n    }\r\n\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n\r\n    return COVER_VALUES[cover] > COVER_VALUES[systemCover] ? cover : undefined\r\n}\r\n", "import { CoverValidationMenu, HideValidationMenu, SeekValidationMenu } from './apps/validation.js'\r\nimport { MODULE_ID, getFlag, getFlags, localize, setFlag } from './module.js'\r\n\r\nexport function renderChatMessage(message, html) {\r\n    const token = message.token\r\n    if (!token) return\r\n\r\n    const isGM = game.user.isGM\r\n    const hasPlayerOwner = token.hasPlayerOwner\r\n    const { cover, selected, skipWait, validated, blindCheck } = getFlags(message)\r\n    const pf2eContext = message.getFlag('pf2e', 'context')\r\n\r\n    if (blindCheck && !isGM && hasPlayerOwner) {\r\n        html.find('.message-header .message-sender').text(token.name)\r\n        html.find('.message-header .flavor-text').html(blindCheck)\r\n    } else if (cover) {\r\n        if (isGM) {\r\n            const button = createValidateButton({ property: 'cover', skipWait, validated })\r\n            html.find('.message-content').append(button)\r\n            html.find('[data-action=validate-cover]').on('click', () => {\r\n                CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n            })\r\n        } else if (!skipWait) {\r\n            const hint = createWaitHint('cover', validated)\r\n            html.find('.message-content').append(hint)\r\n        }\r\n    } else if (pf2eContext?.visibility) {\r\n        if (!validated) html.find('.message-buttons').remove()\r\n\r\n        const flavor = html.find('.message-header .flavor-text')\r\n\r\n        if (!isGM && hasPlayerOwner) {\r\n            html.find('.message-header .message-sender').text(token.name)\r\n            flavor.empty()\r\n        }\r\n\r\n        const msg = localize(`message.flat-check.${validated === undefined ? 'blind' : validated ? 'success' : 'failure'}`)\r\n        const hint = createHint(msg, validated)\r\n        flavor.append(hint)\r\n\r\n        if (isGM) {\r\n            for (const type of ['success', 'failure']) {\r\n                flavor.append(\r\n                    createChatButton({\r\n                        action: `${type}-message`,\r\n                        icon: 'fa-solid fa-message',\r\n                        label: localize('message.flat-check.button', type),\r\n                    })\r\n                )\r\n                html.find(`[data-action=${type}-message]`).on('click', () => {\r\n                    setFlag(message, 'validated', type === 'success')\r\n                })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'skill-check') {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.selected,\r\n                    ValidationMenu: HideValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'perception-check') {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:seek') && pf2eContext.selected) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.selected,\r\n                    ValidationMenu: SeekValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:seek') && pf2eContext.selected) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function validateMessage(message) {\r\n    if (!getFlag(message, 'validated')) setFlag(message, 'validated', true)\r\n}\r\n\r\nfunction addBlindSkillCheckFlavor({ html, token, message, validated }) {\r\n    html.find('.message-header .message-sender').text(token.name)\r\n    let flavor = message.getFlag('pf2e', 'modifierName')\r\n    flavor += createWaitHint('visibility', validated)\r\n    html.find('.message-header .flavor-text').html(flavor)\r\n}\r\n\r\nfunction createWaitHint(property, validated) {\r\n    const hint = localize(`message.${property}.player.${validated ? 'validated' : 'wait'}`)\r\n    return createHint(hint, validated)\r\n}\r\n\r\nfunction createHint(hint, validated) {\r\n    if (validated === true) hint = '<i class=\"fa-solid fa-check\" style=\"color: green;\"></i> ' + hint\r\n    else if (validated === false) hint = '<i class=\"fa-solid fa-xmark\" style=\"color: red;\"></i> ' + hint\r\n    return `<i style=\"display: block; font-size: .9em; text-align: end;\">${hint}</i>`\r\n}\r\n\r\nfunction addVisibilityValidationButton({ skipWait, validated, html, message, ValidationMenu, token, selected }) {\r\n    const button = createValidateButton({ property: 'visibility', skipWait, validated })\r\n    html.find('.message-header .flavor-text').append(button)\r\n    html.find('[data-action=validate-visibility]').on('click', async () => {\r\n        const roll = message.rolls[0].total\r\n        ValidationMenu.openMenu({ token, message, roll, selected })\r\n    })\r\n}\r\n\r\nfunction createValidateButton({ skipWait, validated, property }) {\r\n    let label = localize(`message.${property}.gm.${skipWait ? 'check' : validated ? 'validated' : 'validate'}`)\r\n    if (!skipWait && validated) label += '<i class=\"fa-solid fa-check\" style=\"color: green; margin-left: 0.3em;\"></i>'\r\n    return createChatButton({\r\n        action: `validate-${property}`,\r\n        icon: 'fa-solid fa-list',\r\n        label,\r\n    })\r\n}\r\n\r\nexport function createChatButton({ action, icon, label }) {\r\n    let button = `<button type=\"button\" style=\"margin: 0 0 5px; padding: 0;\" data-action=\"${action}\">`\r\n    if (icon) button += `<i class=\"${icon}\"></i> ${label}</button>`\r\n    else button += label\r\n    return button\r\n}\r\n\r\nexport async function createTokenMessage({ content, token, flags, secret }) {\r\n    const data = { content, speaker: ChatMessage.getSpeaker({ token: token instanceof Token ? token.document : token }) }\r\n    if (flags) setProperty(data, `flags.${MODULE_ID}`, flags)\r\n    if (secret) {\r\n        data.type = CONST.CHAT_MESSAGE_TYPES.WHISPER\r\n        data.whisper = ChatMessage.getWhisperRecipients('gm')\r\n    }\r\n    return ChatMessage.create(data)\r\n}\r\n", "import { MODULE_ID, getFlag, localize } from './module.js'\r\n\r\nconst templateConversion = {\r\n    burst: 'circle',\r\n    emanation: 'circle',\r\n    line: 'ray',\r\n    cone: 'cone',\r\n    rect: 'rect',\r\n}\r\n\r\nexport function createSeekTemplate(type, token) {\r\n    createTemplate({\r\n        type,\r\n        token,\r\n        distance: type === 'cone' ? 30 : 15,\r\n        traits: ['concentrate', 'secret'],\r\n    })\r\n}\r\n\r\nexport function getTokenTemplate(token) {\r\n    return token.scene.templates.find(t => getFlag(t, 'tokenId') === token.id)\r\n}\r\n\r\nexport function getTokenTemplateTokens(token) {\r\n    if (!checkScene(token)) return null\r\n\r\n    const template = getTokenTemplate(token)\r\n    if (!template) return null\r\n\r\n    return getTokens(template.object)\r\n}\r\n\r\nexport async function deleteTokenTemplate(token) {\r\n    const templates = token.scene.templates.filter(t => getFlag(t, 'tokenId') === token.id)\r\n    for (const template of templates) {\r\n        await template.delete()\r\n    }\r\n}\r\n\r\nfunction checkScene(token) {\r\n    if (canvas.scene === token.scene) return true\r\n    ui.notifications.error(localize('template.scene'))\r\n    return false\r\n}\r\n\r\nfunction createTemplate({ type, distance, traits, fillColor, width, token }) {\r\n    if (!checkScene(token)) return\r\n\r\n    const templateData = {\r\n        distance,\r\n        t: templateConversion[type],\r\n        fillColor: fillColor || game.user.color,\r\n        flags: {\r\n            [MODULE_ID]: {\r\n                tokenId: token.id,\r\n            },\r\n        },\r\n    }\r\n\r\n    if (templateData.t === 'ray') {\r\n        templateData.width = width || CONFIG.MeasuredTemplate.defaults.width * (canvas.dimensions?.distance ?? 1)\r\n    } else if (templateData.t === 'cone') {\r\n        templateData.angle = CONFIG.MeasuredTemplate.defaults.angle\r\n    }\r\n\r\n    if (traits) setProperty(templateData, 'flags.pf2e.origin.traits', traits)\r\n\r\n    const templateDoc = new CONFIG.MeasuredTemplate.documentClass(templateData, { parent: canvas.scene })\r\n    new CONFIG.MeasuredTemplate.objectClass(templateDoc).drawPreview()\r\n}\r\n\r\n// TODO remove once it is in the system\r\nfunction getTokens(template, { collisionOrigin, collisionType = 'move' } = {}) {\r\n    if (!canvas.scene) return []\r\n    const { grid, dimensions } = canvas\r\n    if (!(grid && dimensions)) return []\r\n\r\n    const gridHighlight = grid.getHighlightLayer(template.highlightId)\r\n    if (!gridHighlight || grid.type !== CONST.GRID_TYPES.SQUARE) return []\r\n    const origin = collisionOrigin ?? template.center\r\n\r\n    // Get all the tokens that are inside the highlight bounds\r\n    const tokens = canvas.tokens.quadtree.getObjects(gridHighlight.getLocalBounds(undefined, true))\r\n\r\n    const containedTokens = []\r\n    for (const token of tokens) {\r\n        const tokenDoc = token.document\r\n\r\n        // Collect the position of all grid squares that this token occupies as \"x.y\"\r\n        const tokenPositions = []\r\n        for (let h = 0; h < tokenDoc.height; h++) {\r\n            const y = token.y + h * grid.size\r\n            tokenPositions.push(`${token.x}.${y}`)\r\n            if (tokenDoc.width > 1) {\r\n                for (let w = 1; w < tokenDoc.width; w++) {\r\n                    tokenPositions.push(`${token.x + w * grid.size}.${y}`)\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const position of tokenPositions) {\r\n            // Check if a position exists within this GridHiglight\r\n            if (!gridHighlight.positions.has(position)) {\r\n                continue\r\n            }\r\n            // Position of cell's top-left corner, in pixels\r\n            const [gx, gy] = position.split('.').map(s => Number(s))\r\n            // Position of cell's center in pixels\r\n            const destination = {\r\n                x: gx + dimensions.size * 0.5,\r\n                y: gy + dimensions.size * 0.5,\r\n            }\r\n            if (destination.x < 0 || destination.y < 0) continue\r\n\r\n            const hasCollision =\r\n                canvas.ready &&\r\n                collisionType &&\r\n                CONFIG.Canvas.polygonBackends[collisionType].testCollision(origin, destination, {\r\n                    type: collisionType,\r\n                    mode: 'any',\r\n                })\r\n\r\n            if (!hasCollision) {\r\n                containedTokens.push(token)\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return containedTokens\r\n}\r\n", "import { validateMessage } from '../chat.js'\r\nimport { COVERS, VISIBILITIES, VISIBILITY_VALUES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, getSetting, localize, templatePath } from '../module.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { deleteTokenTemplate } from '../template.js'\r\nimport { getTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nclass ValidationMenu extends BaseMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated && params.message) validateMessage(params.message)\r\n        return validated\r\n    }\r\n\r\n    get title() {\r\n        return localize('menu.validation.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('validation')\r\n    }\r\n\r\n    getSavedData(converted = true) {\r\n        const data = super.getSavedData()\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    _convertData(data) {\r\n        const property = this.property\r\n        const scene = this.scene\r\n        const selected = this.selected\r\n        const defaultValue = defaultValues[property]\r\n        const propertyList = property === 'cover' ? COVERS : VISIBILITIES\r\n\r\n        for (const tokenId of selected) {\r\n            const token = scene.tokens.get(tokenId)\r\n            const fullProperty = `${tokenId}.${property}`\r\n            const currentValue = getProperty(data, fullProperty) ?? defaultValue\r\n\r\n            let processedValue = this.processValue({ token, value: currentValue })\r\n            if (!propertyList.includes(processedValue)) processedValue = currentValue\r\n\r\n            if (currentValue === processedValue) continue\r\n            setProperty(data, fullProperty, processedValue)\r\n        }\r\n\r\n        return data\r\n    }\r\n\r\n    processValue(params) {\r\n        throw new Error(`${this.constructor.name} doesn't have a 'processValue' method defined`)\r\n    }\r\n\r\n    getData(options) {\r\n        const { covers, visibilities, i18n } = super.getData(options)\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData(false)\r\n        const property = this.property\r\n\r\n        let selected = this.selected\r\n        let tokens = getValidTokens(this.token)\r\n\r\n        tokens = tokens.map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                selected: selected.includes(id),\r\n                ...BaseMenu.createPropertyData(original, current, property),\r\n            }\r\n        })\r\n\r\n        const validation = getSetting('validation')\r\n        if (validation === 'selected') tokens = tokens.filter(t => t.selected)\r\n        else if (validation === 'changed') tokens = tokens.filter(t => t.changed)\r\n\r\n        return {\r\n            ...this._spliIntoAlliances(tokens),\r\n            i18n,\r\n            property: property,\r\n            options: property === 'cover' ? covers : visibilities,\r\n            showSelected: validation === 'all',\r\n            showChanges: validation !== 'changed',\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.find('[data-action=cancel]').on('click', event => {\r\n            this.close()\r\n        })\r\n    }\r\n}\r\n\r\nexport class CoverValidationMenu extends ValidationMenu {\r\n    #value\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#value = params.value\r\n    }\r\n\r\n    get property() {\r\n        return 'cover'\r\n    }\r\n\r\n    processValue() {\r\n        return this.#value\r\n    }\r\n}\r\n\r\nclass VisibilityValidationMenu extends ValidationMenu {\r\n    #roll\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#roll = params.roll\r\n    }\r\n\r\n    get property() {\r\n        return 'visibility'\r\n    }\r\n\r\n    get roll() {\r\n        return this.#roll\r\n    }\r\n}\r\n\r\nexport class HideValidationMenu extends VisibilityValidationMenu {\r\n    get selected() {\r\n        const selected = super.selected\r\n        if (selected.length) return selected\r\n\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        return getValidTokens(token)\r\n            .filter(t => t.actor.alliance !== alliance)\r\n            .map(t => t.id)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.perception.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n\r\n        if (roll >= dc && visibility < VISIBILITY_VALUES.hidden) return 'hidden'\r\n        else if (roll < dc && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else return value\r\n    }\r\n}\r\n\r\nclass ReverseVisibilityValidationMenu extends VisibilityValidationMenu {\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.skills.stealth.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n\r\n        if (roll >= dc + 10 && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (roll >= dc && visibility === VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (roll >= dc && visibility >= VISIBILITY_VALUES.undetected) return 'hidden'\r\n        else return value\r\n    }\r\n\r\n    getSavedData(converted = true) {\r\n        const thisId = this.token.id\r\n        const tokens = getValidTokens(this.token)\r\n        const data = {}\r\n\r\n        for (const token of tokens) {\r\n            const tokenData = getTokenData(token, thisId)\r\n            if (tokenData) data[token.id] = deepClone(tokenData)\r\n        }\r\n\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    getData() {\r\n        const parentData = super.getData()\r\n        parentData.isReversed = true\r\n        parentData.options = VISIBILITIES.map(value => ({ value, label: localize(`visibility.reversed.${value}`) }))\r\n        return parentData\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        const scene = this.scene\r\n        const thisId = this.token.id\r\n        const updates = []\r\n\r\n        for (const [tokenId, data] of Object.entries(currentData)) {\r\n            const token = scene.tokens.get(tokenId)\r\n            if (!token) continue\r\n\r\n            if (data.visibility === defaultValues.visibility) delete data.visibility\r\n\r\n            const original = getTokenData(token, thisId)\r\n            if (original?.visibility === data.visibility) continue\r\n\r\n            let update = { _id: tokenId }\r\n            if (!original.cover && !data.visibility) {\r\n                update[`flags.${MODULE_ID}.data.-=${thisId}`] = true\r\n            } else if (!data.visibility) {\r\n                update[`flags.${MODULE_ID}.data.${thisId}.-=visibility`] = true\r\n            } else {\r\n                update[`flags.${MODULE_ID}.data.${thisId}.visibility`] = data.visibility\r\n            }\r\n\r\n            updates.push(update)\r\n        }\r\n\r\n        scene.updateEmbeddedDocuments('Token', updates)\r\n    }\r\n}\r\n\r\nexport class SeekValidationMenu extends ReverseVisibilityValidationMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated) deleteTokenTemplate(params.token)\r\n    }\r\n}\r\n", "import { getActorToken, getCoverEffect, isProne } from './actor.js'\r\nimport { CoverValidationMenu, HideValidationMenu, SeekValidationMenu } from './apps/validation.js'\r\nimport { createTokenMessage } from './chat.js'\r\nimport { defaultValues } from './constants.js'\r\nimport { createCoverSource } from './effect.js'\r\nimport { getSetting, localize, templatePath } from './module.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { createSeekTemplate, deleteTokenTemplate } from './template.js'\r\nimport { clearTokenData, getTokenData, setTokenData } from './token.js'\r\nimport { getPrototype } from './utils.js'\r\n\r\nexport function setupActions() {\r\n    const hide = game.pf2e.actions.get('hide')\r\n    const BaseAction = getPrototype(hide, 2).constructor\r\n    const BaseActionVariant = getPrototype(hide.toActionVariant(), 2).constructor\r\n    const SingleCheckAction = getPrototype(hide, 1).constructor\r\n    const SingleCheckActionVariant = getPrototype(hide.toActionVariant(), 1).constructor\r\n\r\n    setupCover(BaseAction, BaseActionVariant)\r\n    setupHide(SingleCheckAction, SingleCheckActionVariant)\r\n    setupSeek(SingleCheckAction, SingleCheckActionVariant)\r\n}\r\n\r\nfunction setupSeek(SingleCheckAction, SingleCheckActionVariant) {\r\n    class SeekVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Seek.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            if (!(await seek(token))) return deleteTokenTemplate(token)\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                const { selected } = result[0].message.getFlag('pf2e', 'context')\r\n                if (selected) openVisibilityValidationMenu({ token, result, ValidationMenu: SeekValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Seek extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.Seek.Description',\r\n                name: 'PF2E.Actions.Seek.Title',\r\n                notes: [\r\n                    { outcome: ['criticalSuccess'], text: 'PF2E.Actions.Seek.Notes.criticalSuccess' },\r\n                    { outcome: ['success'], text: 'PF2E.Actions.Seek.Notes.success' },\r\n                ],\r\n                rollOptions: ['action:seek'],\r\n                slug: 'seek',\r\n                statistic: 'perception',\r\n                traits: ['concentrate', 'secret'],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new SeekVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('seek', new Seek())\r\n}\r\n\r\nasync function seek(token) {\r\n    const unit = game.i18n.localize('PF2E.Foot')\r\n\r\n    let content = '<p style=\"margin: 0 0.3em; text-align: center;\">'\r\n    content += `${localize('dialog.seek.hint')}</p><p>`\r\n\r\n    content += createButton(\r\n        'create-cone',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 30,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.cone),\r\n        })\r\n    )\r\n\r\n    content += createButton(\r\n        'create-burst',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 15,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.burst),\r\n        })\r\n    )\r\n\r\n    content += '</p>'\r\n\r\n    return Dialog.wait(\r\n        {\r\n            title: `${token.name} - ${game.i18n.localize('PF2E.Actions.Seek.Title')}`,\r\n            content,\r\n            buttons: {\r\n                ok: {\r\n                    icon: '<i class=\"fa-solid fa-check\"></i>',\r\n                    label: localize('dialog.seek.accept'),\r\n                    callback: () => true,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fa-solid fa-xmark\"></i>',\r\n                    label: localize('dialog.seek.cancel'),\r\n                    callback: html => false,\r\n                },\r\n            },\r\n            close: () => false,\r\n            render: html => {\r\n                const content = html.filter('.dialog-content')\r\n                content.find('[data-action=create-cone], [data-action=create-burst]').on('click', event => {\r\n                    const { action } = event.currentTarget.dataset\r\n                    deleteTokenTemplate(token)\r\n                    createSeekTemplate(action === 'create-cone' ? 'cone' : 'burst', token)\r\n                })\r\n            },\r\n        },\r\n        { width: 300, left: 10 }\r\n    )\r\n}\r\n\r\nfunction setupHide(SingleCheckAction, SingleCheckActionVariant) {\r\n    class HideVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Hide.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                openVisibilityValidationMenu({ token, result, ValidationMenu: HideValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Hide extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: `PF2E.Actions.Hide.Description`,\r\n                name: `PF2E.Actions.Hide.Title`,\r\n                rollOptions: ['action:hide'],\r\n                slug: 'hide',\r\n                statistic: 'stealth',\r\n                traits: ['secret'],\r\n                notes: [{ outcome: ['success', 'criticalSuccess'], text: `PF2E.Actions.Hide.Notes.success` }],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new HideVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('hide', new Hide())\r\n}\r\n\r\nfunction setupCover(BaseAction, BaseActionVariant) {\r\n    class TakeCoverVariant extends BaseActionVariant {\r\n        async use(options = {}) {\r\n            const action = localize('actions.take-cover')\r\n            const token = getSelectedToken(options, action)\r\n            if (token) takeCover(token)\r\n        }\r\n    }\r\n\r\n    class TakeCover extends BaseAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.TakeCover.Description',\r\n                img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n                name: 'PF2E.Actions.TakeCover.Title',\r\n                slug: 'take-cover',\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new TakeCoverVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('take-cover', new TakeCover())\r\n}\r\n\r\nasync function takeCover(token) {\r\n    const actor = token.actor\r\n    const cover = getCoverEffect(actor)\r\n\r\n    const targets = validateTokens(token, game.user.targets.ids)\r\n    if (cover && !targets.length) return cover.delete()\r\n\r\n    const data = getTokenData(token) ?? {}\r\n    const covers = Object.entries(data).reduce((covers, [tokenId, { cover }]) => {\r\n        if (cover) covers[tokenId] = cover\r\n        return covers\r\n    }, {})\r\n\r\n    const content = await renderTemplate(templatePath('covers-dialog'), {\r\n        i18n: key => localize(key),\r\n        hasTargets: !!targets.length,\r\n        hasCovers: !isEmpty(covers),\r\n        hasTargetCover: targets.some(id => id in covers),\r\n        isProne: isProne(actor),\r\n    })\r\n\r\n    const dialog = new Dialog({\r\n        title: `${token.name} - ${localize('actions.take-cover')}`,\r\n        content,\r\n        buttons: {},\r\n        render: html => {\r\n            html.find('button').on('click', async event => {\r\n                const { level } = event.currentTarget.dataset\r\n                const skip = getSetting('skip-cover')\r\n\r\n                const process = async (cover, selected) => {\r\n                    selected = selected ? targets : undefined\r\n\r\n                    const flavor = cover === defaultValues.cover ? (selected ? 'remove' : 'remove-all') : 'take'\r\n                    const message = await createTokenMessage({\r\n                        content: localize(`message.cover.${flavor}`, { cover: localize(`cover.${cover}`) }),\r\n                        flags: { selected, cover, skipWait: skip },\r\n                        token,\r\n                    })\r\n\r\n                    if (skip) {\r\n                        if (cover === defaultValues.cover && !selected) return clearTokenData(token)\r\n                        const data = deepClone(getTokenData(token)) ?? {}\r\n                        for (const tokenId of targets) {\r\n                            setProperty(data, `${tokenId}.cover`, cover)\r\n                        }\r\n                        return setTokenData(token, data)\r\n                    } else if (game.user.isGM) {\r\n                        CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n                    }\r\n                }\r\n\r\n                if (level === 'remove-all') process(defaultValues.cover)\r\n                else if (level === 'remove') process(defaultValues.cover, true)\r\n                else if (targets.length) process(level, true)\r\n                else {\r\n                    const source = createCoverSource(level)\r\n                    actor.createEmbeddedDocuments('Item', [source])\r\n                }\r\n\r\n                dialog.close()\r\n            })\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nfunction getSelectedToken(options, action) {\r\n    let tokens = options.tokens ?? []\r\n    if (!Array.isArray(tokens)) tokens = [tokens]\r\n\r\n    let actors = options.actors ?? []\r\n    if (!Array.isArray(actors)) actors = [actors]\r\n\r\n    if (!tokens.length && actors.length === 1) tokens = [getActorToken(actors[0])].filter(Boolean)\r\n    if (!tokens.length) tokens = canvas.tokens.controlled\r\n    if (!tokens.length) tokens = [getActorToken(game.user.character)].filter(Boolean)\r\n\r\n    if (tokens.length > 1) {\r\n        ui.notifications.warn(localize('actions.only-one', { action }))\r\n        return\r\n    } else if (!tokens.length) {\r\n        ui.notifications.warn(localize('actions.must-one', { action }))\r\n        return\r\n    }\r\n\r\n    const token = tokens[0]\r\n    if (!token?.actor.isOfType('creature')) {\r\n        ui.notifications.warn(localize('actions.must-creature', { action }))\r\n        return\r\n    }\r\n\r\n    return token\r\n}\r\n\r\nfunction createButton(action, icon, label) {\r\n    return `<button type=\"button\" data-action=\"${action}\" style=\"margin: 0 0 5px; padding: 0;\">\r\n    <i class=\"${icon}\"></i> ${label}</button>\r\n</button>`\r\n}\r\n\r\nfunction openVisibilityValidationMenu({ token, result, ValidationMenu }) {\r\n    const roll = result[0].roll.total\r\n    const message = result[0].message\r\n    const selected = message.getFlag('pf2e', 'context.selected')\r\n    ValidationMenu.openMenu({ token, roll, selected, message })\r\n}\r\n", "export function allowCombatTarget(allow) {\r\n    Hooks[allow ? 'on' : 'off']('renderCombatTracker', renderCombatTracker)\r\n    ui.combat?.render()\r\n}\r\n\r\nfunction renderCombatTracker(tracker, html) {\r\n    html.find('[data-control=toggleTarget]').each((_, el) => {\r\n        el.addEventListener(\r\n            'click',\r\n            event => {\r\n                event.preventDefault()\r\n                event.stopPropagation()\r\n                event.stopImmediatePropagation()\r\n\r\n                const { combatantId } = event.currentTarget.closest('.combatant').dataset\r\n                const combatant = game.combats.viewed.combatants.get(combatantId ?? '')\r\n                const token = combatant?.token\r\n                if (!token) return\r\n\r\n                const isTargeted = Array.from(game.user.targets).some(t => t.document === token)\r\n                token.object.setTarget(!isTargeted, { releaseOthers: !event.shiftKey })\r\n            },\r\n            true\r\n        )\r\n    })\r\n}\r\n", "import { VISIBILITY_VALUES } from './constants.js'\r\nimport { getTokenData } from './token.js'\r\n\r\nexport function basicSightCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return !isValidTarget(target) || (!isUndetected(target, 'basicSight') && !isHidden(target))\r\n}\r\n\r\nexport function hearingCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    if (!game.settings.get('pf2e', 'automation.rulesBasedVision')) return true\r\n    return !visionSource.object.actor?.hasCondition('deafened') && isValidTarget(target) && !isUndetected(target, 'hearing')\r\n}\r\n\r\nexport function feelTremorCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return isValidTarget(target) && !isUndetected(target, 'feelTremor')\r\n}\r\n\r\nfunction isValidTarget(target) {\r\n    return !!(target instanceof Token && target.actor)\r\n}\r\n\r\nfunction reachesThreshold(target, tokens, threshold) {\r\n    for (const origin of tokens) {\r\n        const visibility = getTokenData(target, origin.id, 'visibility')\r\n        if (VISIBILITY_VALUES[visibility] >= threshold) return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction isUndetected(target, mode) {\r\n    const tokens = game.user.isGM ? canvas.tokens.controlled : target.scene.tokens.filter(t => t.isOwner)\r\n    const filtered = tokens.filter(t => t.detectionModes.some(d => d.id === mode))\r\n    return reachesThreshold(target, filtered, VISIBILITY_VALUES.undetected)\r\n}\r\n\r\nfunction isHidden(target) {\r\n    let tokens = canvas.tokens.controlled\r\n    if (!game.user.isGM && !tokens.length) {\r\n        tokens = target.scene.tokens.filter(t => t.isOwner)\r\n        if (tokens.length !== 1) return false\r\n    }\r\n    return reachesThreshold(target, tokens, VISIBILITY_VALUES.hidden)\r\n}\r\n", "import { getActorToken } from './actor.js'\r\nimport { VISIBILITY_VALUES, attackCheckRoll, validCheckRoll } from './constants.js'\r\nimport { MODULE_ID } from './module.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { getTokenTemplateTokens } from './template.js'\r\nimport { getVisibility } from './token.js'\r\n\r\nexport async function checkRoll(wrapped, ...args) {\r\n    const context = args[1]\r\n    if (!context) return wrapped(...args)\r\n\r\n    if (Array.isArray(context.options)) context.options = new Set(context.options)\r\n\r\n    const { actor, createMessage = 'true', type, token, target, isReroll } = context\r\n    const originToken = token ?? getActorToken(actor)\r\n    const targetToken = target?.token\r\n    const isAttackRoll = attackCheckRoll.includes(type)\r\n\r\n    if (isReroll || !createMessage || !originToken || !validCheckRoll.includes(type) || (isAttackRoll && !targetToken))\r\n        return wrapped(...args)\r\n\r\n    if (isAttackRoll) {\r\n        const visibility = getVisibility(targetToken, originToken, true)\r\n        if (!visibility) return wrapped(...args)\r\n\r\n        if (visibility === 'concealed' && originToken.actor.hasLowLightVision) return wrapped(...args)\r\n\r\n        const dc = visibility === 'concealed' ? 5 : 11\r\n        const roll = await new Roll('1d20').evaluate({ async: true })\r\n        const total = roll.total\r\n        const isSuccess = total >= dc\r\n        const isUndetected = VISIBILITY_VALUES[visibility] >= VISIBILITY_VALUES.undetected\r\n        const success = isSuccess ? 2 : 1\r\n\r\n        let flavor = `${game.i18n.localize('PF2E.FlatCheck')}:`\r\n        flavor += `<strong> ${game.i18n.localize(`PF2E.condition.${visibility}.name`)}</strong>`\r\n\r\n        flavor += (\r\n            await game.pf2e.Check.createResultFlavor({\r\n                target,\r\n                degree: {\r\n                    value: success,\r\n                    unadjusted: success,\r\n                    adjustment: null,\r\n                    dieResult: total,\r\n                    rollTotal: total,\r\n                    dc: { value: dc },\r\n                },\r\n            })\r\n        ).outerHTML\r\n\r\n        const messageData = {\r\n            flavor,\r\n            speaker: ChatMessage.getSpeaker({ token: originToken }),\r\n        }\r\n\r\n        if (isUndetected) {\r\n            context.options.add('secret')\r\n            context.isSuccess = isSuccess\r\n            context.visibility = visibility\r\n\r\n            let blindCheck = `${game.i18n.localize('PF2E.FlatCheck')}:`\r\n            blindCheck += `<strong> ${game.i18n.localize(`PF2E.condition.undetected.name`)}</strong>`\r\n            messageData.flags = {\r\n                [MODULE_ID]: {\r\n                    blindCheck,\r\n                },\r\n            }\r\n        }\r\n\r\n        await roll.toMessage(messageData, { rollMode: isUndetected ? (game.user.isGM ? 'gmroll' : 'blindroll') : 'roll' })\r\n\r\n        if (!isUndetected && !isSuccess) return\r\n    } else if (context.options.has('action:hide')) {\r\n        context.selected = game.user.targets.ids\r\n    } else if (context.options.has('action:seek')) {\r\n        const alliance = originToken.actor.alliance\r\n        const highlighted = getTokenTemplateTokens(originToken)\r\n        if (!highlighted) return wrapped(...args)\r\n\r\n        context.selected = validateTokens(originToken, highlighted)\r\n            .filter(t => {\r\n                const otherAlliance = t.actor.alliance\r\n                return !t.document.hidden && (!otherAlliance || otherAlliance !== alliance)\r\n            })\r\n            .map(t => t.id)\r\n    }\r\n\r\n    return wrapped(...args)\r\n}\r\n", "import { MODULE_ID } from './module.js'\r\nimport { allowCombatTarget } from './combat.js'\r\n\r\nexport function registerSettings() {\r\n    register('target', Boolean, true, {\r\n        onChange: allowCombatTarget,\r\n    })\r\n\r\n    register('lesser', String, 'ten', {\r\n        choices: {\r\n            none: path('lesser', 'choices.none'),\r\n            cross: path('lesser', 'choices.cross'),\r\n            zero: path('lesser', 'choices.zero'),\r\n            ten: path('lesser', 'choices.ten'),\r\n            twenty: path('lesser', 'choices.twenty'),\r\n        },\r\n    })\r\n\r\n    register('standard', Boolean, true)\r\n\r\n    register('standard-type', String, 'center', {\r\n        choices: {\r\n            center: path('standard-type', 'choices.center'),\r\n            points: path('standard-type', 'choices.points'),\r\n            // corners: path('standard-type', 'choices.corners'),\r\n        },\r\n    })\r\n\r\n    register('skip-cover', Boolean, true)\r\n\r\n    register('validation', String, 'all', {\r\n        choices: {\r\n            all: path('validation', 'choices.all'),\r\n            selected: path('validation', 'choices.selected'),\r\n            changed: path('validation', 'choices.changed'),\r\n        },\r\n    })\r\n\r\n    register('concealed', Boolean, true)\r\n}\r\n\r\nfunction path(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction register(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        scope: 'world',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n        ...extra,\r\n    })\r\n}\r\n", "import { setupActions } from './action.js'\r\nimport { getContextualClone, getSelfRollOptions } from './actor.js'\r\nimport { renderChatMessage } from './chat.js'\r\nimport { allowCombatTarget } from './combat.js'\r\nimport { basicSightCanDetect, feelTremorCanDetect, hearingCanDetect } from './detection.js'\r\nimport { MODULE_ID, getSetting } from './module.js'\r\nimport { checkRoll } from './roll.js'\r\nimport { renderSceneConfig } from './scene.js'\r\nimport { registerSettings } from './settings.js'\r\nimport { clearConditionals, controlToken, deleteToken, hoverToken, pasteToken, renderTokenHUD, updateToken } from './token.js'\r\n\r\nconst CHECK_ROLL = 'game.pf2e.Check.roll'\r\n\r\nconst GET_CONTEXTUAL_CLONE = 'CONFIG.Actor.documentClass.prototype.getContextualClone'\r\nconst GET_SELF_ROLL_OPTIONS = 'CONFIG.Actor.documentClass.prototype.getSelfRollOptions'\r\n\r\nconst BASIC_SIGHT_CAN_DETECT = 'CONFIG.Canvas.detectionModes.basicSight._canDetect'\r\nconst HEARING_CAN_DETECT = 'CONFIG.Canvas.detectionModes.hearing._canDetect'\r\nconst FEEL_TREMOR_CAN_DETECT = 'CONFIG.Canvas.detectionModes.feelTremor._canDetect'\r\n\r\nHooks.once('setup', () => {\r\n    registerSettings()\r\n    setupActions()\r\n\r\n    if (game.user.isGM) {\r\n        Hooks.on('renderTokenHUD', renderTokenHUD)\r\n    }\r\n\r\n    libWrapper.register(MODULE_ID, CHECK_ROLL, checkRoll)\r\n\r\n    libWrapper.register(MODULE_ID, GET_CONTEXTUAL_CLONE, getContextualClone)\r\n    libWrapper.register(MODULE_ID, GET_SELF_ROLL_OPTIONS, getSelfRollOptions)\r\n\r\n    libWrapper.register(MODULE_ID, BASIC_SIGHT_CAN_DETECT, basicSightCanDetect)\r\n    libWrapper.register(MODULE_ID, HEARING_CAN_DETECT, hearingCanDetect)\r\n    libWrapper.register(MODULE_ID, FEEL_TREMOR_CAN_DETECT, feelTremorCanDetect)\r\n\r\n    if (!game.user.isGM && getSetting('target')) allowCombatTarget(true)\r\n})\r\n\r\nHooks.on('hoverToken', hoverToken)\r\nHooks.on('pasteToken', pasteToken)\r\nHooks.on('updateToken', updateToken)\r\nHooks.on('deleteToken', deleteToken)\r\nHooks.on('controlToken', controlToken)\r\n\r\nHooks.on('canvasPan', () => clearConditionals())\r\n\r\nHooks.on('renderChatMessage', renderChatMessage)\r\n\r\nHooks.on('renderSceneConfig', renderSceneConfig)\r\n"],
  "mappings": "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",
  "names": ["token", "tokenId", "path", "visibility", "ValidationMenu", "content", "covers", "cover", "data", "ValidationMenu", "isUndetected"]
}
