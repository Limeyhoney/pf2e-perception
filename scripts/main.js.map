{
  "version": 3,
  "sources": ["../src/constants.js", "../src/module.js", "../src/effect.js", "../src/scene.js", "../src/utils.js", "../src/apps/base-menu.js", "../src/apps/perception.js", "../src/geometry.js", "../src/lighting.js", "../src/token.js", "../src/actor.js", "../src/chat.js", "../src/template.js", "../src/apps/validation.js", "../src/action.js", "../src/check.js", "../src/detection.js", "../src/combat.js", "../src/settings.js", "../src/main.js"],
  "sourcesContent": ["export const COVER_UUID = 'Compendium.pf2e.other-effects.Item.I9lfZUiCwMiGogVi'\r\nexport const BLIND_FIGHT_UUID = 'Compendium.pf2e.feats-srd.Item.y2XeMe1F18lIyo59'\r\n\r\nexport const VISIBILITY_VALUES = {\r\n    [undefined]: 0,\r\n    observed: 0,\r\n    concealed: 1,\r\n    hidden: 2,\r\n    undetected: 3,\r\n    unnoticed: 4,\r\n}\r\n\r\nexport const VISIBILITIES = ['observed', 'concealed', 'hidden', 'undetected', 'unnoticed']\r\n\r\nexport const COVERS = ['none', 'lesser', 'standard', 'greater', 'greater-prone']\r\n\r\nexport const COVER_VALUES = {\r\n    [undefined]: 0,\r\n    none: 0,\r\n    lesser: 1,\r\n    standard: 2,\r\n    greater: 3,\r\n    'greater-prone': 4,\r\n}\r\n\r\nexport const defaultValues = {\r\n    cover: 'none',\r\n    visibility: 'observed',\r\n}\r\n\r\nexport const attackCheckRoll = ['attack-roll', 'spell-attack-roll']\r\n\r\nexport const validCheckRoll = [...attackCheckRoll, 'skill-check', 'perception-check']\r\n\r\nexport const skipConditional = {\r\n    cover: 'conditional:cover:skip',\r\n}\r\n", "export const MODULE_ID = 'pf2e-perception'\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function getFlag(doc, flag) {\r\n    return doc.getFlag(MODULE_ID, flag)\r\n}\r\n\r\nexport function setFlag(doc, flag, value) {\r\n    return doc.setFlag(MODULE_ID, flag, value)\r\n}\r\n\r\nexport function unsetFlag(doc, flag) {\r\n    return doc.unsetFlag(MODULE_ID, flag, true)\r\n}\r\n\r\nexport function getFlags(doc) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) ?? {}\r\n}\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function setSetting(setting, value) {\r\n    return game.settings.set(MODULE_ID, setting, value)\r\n}\r\n", "import { COVER_UUID, COVER_VALUES } from './constants.js'\r\nimport { MODULE_ID, localize } from './module.js'\r\n\r\nexport function createFlatFootedSource(visibility) {\r\n    const name = game.i18n.localize(`PF2E.condition.${visibility}.name`)\r\n    const condition = game.pf2e.ConditionManager.getCondition('flat-footed', { name })\r\n    return condition.toObject()\r\n}\r\n\r\nexport function createCoverSource(cover, canSkip = false) {\r\n    const bonus = COVER_VALUES[cover]\r\n\r\n    return {\r\n        _id: 'I9lfZUiCwMiGogVi',\r\n        img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n        name: localize('cover', cover),\r\n        system: {\r\n            description: {\r\n                gm: '',\r\n                value: \"<p>When you're behind an obstacle that could block weapons, guard you against explosions, and make you harder to detect, you're behind cover. Standard cover gives you a +2 circumstance bonus to AC, to Reflex saves against area effects, and to Stealth checks to Hide, Sneak, or otherwise avoid detection. You can increase this to greater cover using the Take Cover basic action, increasing the circumstance bonus to +4. If cover is especially light, typically when it's provided by a creature, you have lesser cover, which grants a +1 circumstance bonus to AC. A creature with standard cover or greater cover can attempt to use Stealth to Hide, but lesser cover isn't sufficient.</p>\",\r\n            },\r\n            rules: [\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-bonus:${bonus}` },\r\n                { domain: 'all', key: 'RollOption', option: `self:cover-level:${cover}` },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: [{ and: ['self:condition:prone', 'item:ranged'] }, { not: 'self:cover-level:greater-prone' }] },\r\n                    ],\r\n                    selector: 'ac',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['area-effect', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'reflex',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: [\r\n                        { or: ['action:hide', 'action:sneak', 'avoid-detection'] },\r\n                        { not: 'self:cover-level:greater-prone' },\r\n                    ],\r\n                    selector: 'stealth',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n                {\r\n                    key: 'FlatModifier',\r\n                    predicate: ['action:avoid-notice', { not: 'self:cover-level:greater-prone' }],\r\n                    selector: 'initiative',\r\n                    type: 'circumstance',\r\n                    value: bonus,\r\n                },\r\n            ],\r\n            slug: 'effect-cover',\r\n        },\r\n        type: 'effect',\r\n        flags: {\r\n            core: { sourceId: COVER_UUID },\r\n            [MODULE_ID]: { canSkip },\r\n        },\r\n    }\r\n}\r\n\r\nexport function findChoiceSetRule(item, flag = undefined) {\r\n    if (!item) return undefined\r\n    return item.system.rules.find(rule => rule.key === 'ChoiceSet' && (!flag || rule.flag === flag))\r\n}\r\n", "import { getFlag, getSetting, localize } from './module.js'\r\n\r\nexport function renderSceneConfig(config, html) {\r\n    let settings = ''\r\n\r\n    for (const setting of ['standard', 'concealed']) {\r\n        const checked = getSceneSetting(config.object, setting)\r\n\r\n        settings += `<div class=\"form-group\">\r\n    <label>${localize(`settings.${setting}.name`)}</label>\r\n    <input type=\"checkbox\" name=\"flags.pf2e-perception.${setting}\" ${checked ? 'checked' : ''}>\r\n    <p class=\"notes\">${localize(`settings.${setting}.short`)}</p>\r\n</div>`\r\n    }\r\n\r\n    settings += '<hr>'\r\n\r\n    html.find('.tab[data-tab=\"basic\"] hr').first().after(settings)\r\n    config.setPosition()\r\n}\r\n\r\nexport function getValidTokens(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    if (!(token instanceof TokenDocument)) return []\r\n\r\n    let tokens = token.scene.tokens.filter(t => t !== token && t.actor?.isOfType('creature'))\r\n\r\n    if (getSetting('encounter')) {\r\n        const combat = game.combats.active\r\n        if (!combat) return tokens\r\n\r\n        return tokens.filter(t => {\r\n            const actor = t.actor\r\n            const traits = actor.traits\r\n            return actor.type === 'familiar' || traits.has('minion') || traits.has('eidolon') || combat.getCombatantByToken(t.id)\r\n        })\r\n    }\r\n\r\n    return tokens\r\n}\r\n\r\nexport function validateTokens(token, tokens) {\r\n    const validToken = getValidTokens(token).map(t => t.id)\r\n    return tokens.filter(t => {\r\n        const id = t instanceof Token || t instanceof TokenDocument ? t.id : t\r\n        return validToken.includes(id)\r\n    })\r\n}\r\n\r\nexport function getSceneSetting(scene, setting) {\r\n    return getFlag(scene, setting) ?? getSetting(setting)\r\n}\r\n", "export function modifier(value) {\r\n    return value >= 0 ? `+${value}` : value\r\n}\r\n\r\nexport function omit(object, names) {\r\n    const set = new Set(names)\r\n    return Object.entries(object).reduce((acc, [name, value]) => {\r\n        if (!set.has(name)) acc[name] = value\r\n        return acc\r\n    }, {})\r\n}\r\n\r\nexport function getPrototype(obj, depth = 1) {\r\n    const prototype = Object.getPrototypeOf(obj)\r\n    if (depth > 1) return getPrototype(prototype, depth - 1)\r\n    return prototype\r\n}\r\n\r\nexport function sortByName(a, b) {\r\n    return a.name.localeCompare(b.name)\r\n}\r\n", "import { isProne } from '../actor.js'\r\nimport { COVERS, VISIBILITIES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, localize } from '../module.js'\r\nimport { validateTokens } from '../scene.js'\r\nimport { getTokenData, setTokenData } from '../token.js'\r\nimport { sortByName } from '../utils.js'\r\n\r\nexport class BaseMenu extends Application {\r\n    #token\r\n    #resolve\r\n    #selected\r\n    #_currentData\r\n    #hoverTokenListener\r\n\r\n    constructor({ token, resolve, selected = [] }, options = {}) {\r\n        super(options)\r\n\r\n        this.#token = token\r\n        this.#resolve = resolve\r\n        this.#selected = selected\r\n\r\n        this.#hoverTokenListener = (token, hover) => {\r\n            const tokenId = token.id\r\n            const tokens = this.element.find('[data-token-id]')\r\n            tokens.removeClass('hover')\r\n            if (hover) tokens.filter(`[data-token-id=${tokenId}]`).addClass('hover')\r\n        }\r\n\r\n        Hooks.on('hoverToken', this.#hoverTokenListener)\r\n    }\r\n\r\n    async close(options = {}) {\r\n        Hooks.off('hoverToken', this.#hoverTokenListener)\r\n        this.#resolve?.(options.resolve ?? false)\r\n        super.close(options)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            minimizable: false,\r\n        })\r\n    }\r\n\r\n    static async openMenu(params, options = {}) {\r\n        if (params.token instanceof TokenDocument) params.token = params.token.object\r\n        if (!params.token) {\r\n            ui.notifications.error(localize('menu.no-token'))\r\n            return\r\n        }\r\n\r\n        options.id = `${MODULE_ID}-${params.token.document.uuid}`\r\n\r\n        const win = Object.values(ui.windows).find(x => x.id === options.id)\r\n        if (win) win.close()\r\n\r\n        return new Promise(resolve => {\r\n            params.resolve = resolve\r\n            new this(params, options).render(true)\r\n        })\r\n    }\r\n\r\n    static createPropertyData(original, current, property) {\r\n        const defaultValue = defaultValues[property]\r\n        const originalValue = original[property] ?? defaultValue\r\n        const currentValue = current[property] ?? defaultValue\r\n        return {\r\n            original: originalValue,\r\n            current: currentValue,\r\n            changed: originalValue !== currentValue,\r\n            custom: currentValue !== defaultValue,\r\n            originalCustom: originalValue !== defaultValue,\r\n        }\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get document() {\r\n        return this.#token.document\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token.actor\r\n    }\r\n\r\n    get scene() {\r\n        return this.#token.scene\r\n    }\r\n\r\n    get selected() {\r\n        return this.#selected.length ? validateTokens(this.token, this.#selected) : []\r\n    }\r\n\r\n    get currentData() {\r\n        return deepClone(this.#currentData)\r\n    }\r\n\r\n    get #currentData() {\r\n        if (!this.#_currentData) this.#_currentData = this.getSavedData()\r\n        return this.#_currentData\r\n    }\r\n\r\n    getSavedData() {\r\n        const data = getTokenData(this.document) ?? {}\r\n        return deepClone(data)\r\n    }\r\n\r\n    reset() {\r\n        this.#_currentData = this.getSavedData()\r\n        this.#selected = []\r\n        this.render()\r\n    }\r\n\r\n    isSelected(token) {\r\n        const id = typeof token === 'object' ? token.id : token\r\n        return this.#selected.includes(id)\r\n    }\r\n\r\n    getData(options) {\r\n        const covers = COVERS.map(value => ({ value, label: localize(`cover.${value}`) }))\r\n\r\n        return {\r\n            i18n: (...args) => localize(...args),\r\n            covers: isProne(this.actor) ? covers : covers.slice(0, -1),\r\n            visibilities: VISIBILITIES.map(value => ({ value, label: localize(`visibility.${value}`) })),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('[data-token-id]').on('mouseenter', event => {\r\n            const { tokenId } = event.currentTarget.dataset\r\n            const token = this.scene.tokens.get(tokenId)?.object\r\n            if (!token || token.controlled) return\r\n            token._onHoverIn(event, { hoverOutOthers: true })\r\n        })\r\n\r\n        html.find('[data-action=close]').on('click', () => {\r\n            this.close({ resolve: true })\r\n        })\r\n\r\n        html.find('select[name=visibility], select[name=cover]').on('change', event => {\r\n            const target = event.currentTarget\r\n            const property = target.name\r\n            const defaultValue = defaultValues[property]\r\n            const value = target.value || defaultValue\r\n            const tokenId = target.closest('.token')?.dataset.tokenId\r\n            const tokenIds = tokenId ? [tokenId] : this.#selected\r\n\r\n            for (const tokenId of tokenIds) {\r\n                setProperty(this.#currentData, `${tokenId}.${property}`, value)\r\n            }\r\n\r\n            if (tokenId) {\r\n                target.classList.toggle('changed', value !== target.dataset.original)\r\n                target.classList.toggle('custom', value !== defaultValue)\r\n            } else this.render()\r\n        })\r\n\r\n        html.find('[data-action=accept]').on('click', event => {\r\n            this._saveData(this.#currentData)\r\n            this.close({ resolve: true })\r\n        })\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        setTokenData(this.document, currentData)\r\n    }\r\n\r\n    _setSelected(selected) {\r\n        this.#selected =\r\n            selected ??\r\n            this.element\r\n                .find('[data-token-id].ui-selected')\r\n                .toArray()\r\n                .map(el => el.dataset.tokenId)\r\n    }\r\n\r\n    _spliIntoAlliances(tokens) {\r\n        const allies = []\r\n        const enemies = []\r\n        const neutral = []\r\n\r\n        const alliance = this.actor.alliance\r\n        const opposition = alliance === 'party' ? 'opposition' : alliance === 'opposition' ? 'party' : null\r\n\r\n        for (const token of tokens) {\r\n            if (opposition) {\r\n                const actorAlliance = token.actor ? token.actor.alliance : token.alliance\r\n                if (actorAlliance === alliance) allies.push(token)\r\n                else if (actorAlliance === opposition) enemies.push(token)\r\n                else if (actorAlliance === null) neutral.push(token)\r\n            } else neutral.push(token)\r\n        }\r\n\r\n        return {\r\n            allies: allies.sort(sortByName),\r\n            neutral: neutral.sort(sortByName),\r\n            enemies: enemies.sort(sortByName),\r\n            hasTokens: allies.length || enemies.length || neutral.length,\r\n        }\r\n    }\r\n}\r\n", "import { localize, templatePath } from '../module.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { setTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nexport class PerceptionMenu extends BaseMenu {\r\n    get title() {\r\n        return localize('menu.perception.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('perception')\r\n    }\r\n\r\n    getData(options) {\r\n        const selected = this.selected\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData()\r\n\r\n        const tokens = getValidTokens(this.token).map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                cover: BaseMenu.createPropertyData(original, current, 'cover'),\r\n                visibility: BaseMenu.createPropertyData(original, current, 'visibility'),\r\n                selected: selected.includes(id),\r\n            }\r\n        })\r\n\r\n        return {\r\n            ...super.getData(options),\r\n            ...this._spliIntoAlliances(tokens),\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.filter('.tokens').selectable({\r\n            autoRefresh: false,\r\n            filter: '.token',\r\n            cancel: 'header,select',\r\n            stop: () => this._setSelected(),\r\n        })\r\n\r\n        html.find('[data-action=select-all]').on('click', event => {\r\n            const section = $(event.currentTarget).closest('section')\r\n            const tokens = (section.length ? section : html).find('[data-token-id]')\r\n            const allSelected = tokens.filter(':not(.ui-selected)').length === 0\r\n            tokens.toggleClass('ui-selected', !allSelected)\r\n            this._setSelected()\r\n        })\r\n\r\n        html.find('[data-action=use-selection]').on('click', event => {\r\n            this._setSelected(canvas.tokens.controlled.map(t => t.id))\r\n            this.render()\r\n        })\r\n\r\n        html.find('[data-action=reset]').on('click', event => this.reset())\r\n    }\r\n}\r\n", "export const RECT_CORNERS = [\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 1, y: 1 },\r\n]\r\n\r\nexport const RECT_SPREAD = [\r\n    { x: 0.25, y: 0.25 },\r\n    { x: 0.5, y: 0.25 },\r\n    { x: 0.75, y: 0.25 },\r\n    { x: 0.25, y: 0.5 },\r\n    { x: 0.5, y: 0.5 },\r\n    { x: 0.75, y: 0.5 },\r\n    { x: 0.25, y: 0.75 },\r\n    { x: 0.5, y: 0.75 },\r\n    { x: 0.75, y: 0.75 },\r\n]\r\n\r\nexport function getRectEdges(rect, margin) {\r\n    const opposite = 1 - margin\r\n    return {\r\n        top: { A: getRectPoint({ x: margin, y: margin }, rect), B: getRectPoint({ x: opposite, y: margin }, rect) },\r\n        right: { A: getRectPoint({ x: opposite, y: margin }, rect), B: getRectPoint({ x: opposite, y: opposite }, rect) },\r\n        bottom: { A: getRectPoint({ x: opposite, y: opposite }, rect), B: getRectPoint({ x: margin, y: opposite }, rect) },\r\n        left: { A: getRectPoint({ x: margin, y: opposite }, rect), B: getRectPoint({ x: margin, y: margin }, rect) },\r\n    }\r\n}\r\n\r\nexport function lineIntersectWall(origin, target, debug = false) {\r\n    if (debug) drawDebugLine(origin, target)\r\n    return CONFIG.Canvas.polygonBackends.move.testCollision(origin, target, { type: 'move', mode: 'any' })\r\n}\r\n\r\nexport function pointToTokenIntersectWall(origin, token, debug = false) {\r\n    const rect = token.bounds\r\n    for (const point of RECT_SPREAD) {\r\n        const coords = getRectPoint(point, rect)\r\n        if (lineIntersectWall(origin, coords, debug)) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getRectPoint(point, rect) {\r\n    return { x: rect.x + rect.width * point.x, y: rect.y + rect.height * point.y }\r\n}\r\n\r\nexport function clearDebug() {\r\n    canvas.controls.debug.clear()\r\n}\r\n\r\nexport function drawDebugLine(origin, target, color = 'blue') {\r\n    const hex = color === 'blue' ? 0x0066cc : color === 'red' ? 0xff0000 : 0x16a103\r\n    canvas.controls.debug.lineStyle(4, hex).moveTo(origin.x, origin.y).lineTo(target.x, target.y)\r\n}\r\n", "import { RECT_CORNERS, RECT_SPREAD, clearDebug, drawDebugLine, getRectPoint } from './geometry.js'\r\nimport { getSceneSetting } from './scene.js'\r\n\r\nexport function isConcealed(token) {\r\n    token = token instanceof Token ? token : token.object\r\n\r\n    if (token.document.hasStatusEffect(CONFIG.specialStatusEffects.INVISIBLE)) return false\r\n\r\n    const scene = token.scene\r\n    if (\r\n        scene !== canvas.scene ||\r\n        !scene.tokenVision ||\r\n        scene.darkness < scene.globalLightThreshold ||\r\n        !getSceneSetting(scene, 'concealed')\r\n    )\r\n        return false\r\n\r\n    return !inBrightLight(token)\r\n}\r\n\r\nexport function inBrightLight(token, debug = false) {\r\n    const rect = token.bounds\r\n\r\n    if (debug) clearDebug()\r\n\r\n    for (const light of canvas.effects.lightSources) {\r\n        if (!light.active || light.data.bright === 0) continue\r\n\r\n        if (light.object === token) return true\r\n\r\n        if (!inBrightRange(light.object.center, rect, light.data.bright, debug)) continue\r\n\r\n        if (light.data.walls === false) return true\r\n\r\n        for (const point of RECT_SPREAD) {\r\n            const { x, y } = getRectPoint(point, rect)\r\n            if (light.shape.contains(x, y)) {\r\n                if (debug) drawDebugLine(light, { x, y }, 'green')\r\n                return true\r\n            } else if (debug) drawDebugLine(light, { x, y }, 'blue')\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nfunction inBrightRange(origin, rect, bright, debug = false) {\r\n    for (const point of RECT_CORNERS) {\r\n        const rectPoint = getRectPoint(point, rect)\r\n        const distance = new Ray(origin, rectPoint).distance\r\n        if (distance < bright) return true\r\n        else if (debug) drawDebugLine(origin, rectPoint, 'red')\r\n    }\r\n    return false\r\n}\r\n", "import { PerceptionMenu } from './apps/perception.js'\r\nimport { VISIBILITY_VALUES, defaultValues } from './constants.js'\r\nimport { clearDebug, drawDebugLine, getRectEdges, lineIntersectWall, pointToTokenIntersectWall } from './geometry.js'\r\nimport { isConcealed } from './lighting.js'\r\nimport { MODULE_ID, getFlag, getSetting, unsetFlag } from './module.js'\r\nimport { getSceneSetting, getValidTokens } from './scene.js'\r\n\r\nexport function renderTokenHUD(hud, html) {\r\n    if (!hud.object.actor?.isOfType('creature')) return\r\n    html.find('.col.left').append(`<div class=\"control-icon\" data-action=\"pf2e-perception\"><i class=\"fa-solid fa-eye\"></i></div>`)\r\n    html.find('[data-action=pf2e-perception]').on('click', event => PerceptionMenu.openMenu({ token: hud.object }))\r\n}\r\n\r\nexport function pasteToken(originals, sources) {\r\n    for (const source of sources) {\r\n        delete source.flags?.[MODULE_ID]\r\n    }\r\n}\r\n\r\nexport function getTokenData(token, ...path) {\r\n    path.unshift('data')\r\n    token = token instanceof Token ? token.document : token\r\n    return getFlag(token, path.join('.'))\r\n}\r\n\r\nexport async function clearTokenData(token) {\r\n    token = token instanceof Token ? token.document : token\r\n    return unsetFlag(token, 'data')\r\n}\r\n\r\nexport async function setTokenData(token, data) {\r\n    const valid = getValidTokens(token).map(t => t.id)\r\n    const updates = {}\r\n\r\n    for (const tokenId in data) {\r\n        if (!valid.includes(tokenId)) {\r\n            updates[`flags.${MODULE_ID}.data.-=${tokenId}`] = true\r\n            continue\r\n        }\r\n\r\n        const current = data[tokenId]\r\n        const original = getTokenData(token, tokenId) ?? {}\r\n\r\n        if (current.visibility === defaultValues.visibility) delete current.visibility\r\n        if (current.cover === defaultValues.cover) delete current.cover\r\n\r\n        if (original.cover === current.cover && original.visibility === current.visibility) continue\r\n\r\n        if (!current.visibility && !current.cover) {\r\n            updates[`flags.${MODULE_ID}.data.-=${tokenId}`] = true\r\n        } else {\r\n            for (const property of ['cover', 'visibility']) {\r\n                if (original[property] === current[property]) continue\r\n                if (!current[property]) updates[`flags.${MODULE_ID}.data.${tokenId}.-=${property}`] = true\r\n                else updates[`flags.${MODULE_ID}.data.${tokenId}.${property}`] = current[property]\r\n            }\r\n        }\r\n    }\r\n\r\n    token = token instanceof Token ? token.document : token\r\n    return token.update(updates)\r\n}\r\n\r\nexport function hasStandardCover(origin, target, debug = false) {\r\n    const scene = origin.scene\r\n    if (!getSceneSetting(scene, 'standard')) return false\r\n\r\n    if (debug) clearDebug()\r\n\r\n    const standard = getSetting('standard-type')\r\n    if (standard === 'center') return lineIntersectWall(origin.center, target.center, debug)\r\n    else if (standard === 'points') return pointToTokenIntersectWall(origin.center, target, debug)\r\n    // else return allTokenCornersToPointIntersectWall(origin, target.center)\r\n}\r\n\r\nconst SIZES = {\r\n    tiny: 0,\r\n    sm: 1,\r\n    med: 2,\r\n    lg: 3,\r\n    huge: 4,\r\n    grg: 5,\r\n}\r\n\r\nexport function getCreatureCover(originToken, targetToken, debug = false) {\r\n    const setting = getSetting('lesser')\r\n    if (setting === 'none') return undefined\r\n\r\n    let cover = undefined\r\n    const origin = originToken.center\r\n    const target = targetToken.center\r\n\r\n    if (debug) {\r\n        clearDebug()\r\n        drawDebugLine(origin, target)\r\n    }\r\n\r\n    const isExtraLarge = token => {\r\n        const size = SIZES[token.actor.size]\r\n        return size - originSize >= 2 && size - targetSize >= 2\r\n    }\r\n\r\n    const originSize = SIZES[originToken.actor.size]\r\n    const targetSize = SIZES[targetToken.actor.size]\r\n\r\n    const tokens = originToken.scene.tokens.contents.sort((a, b) => SIZES[b.actor.size] - SIZES[a.actor.size])\r\n\r\n    let extralarges = originSize < SIZES.huge && targetSize < SIZES.huge && tokens.filter(isExtraLarge).length\r\n\r\n    const margin = setting === 'ten' ? 0.1 : setting === 'twenty' ? 0.2 : 0\r\n\r\n    const intersectsEdge = edge => {\r\n        if (debug) drawDebugLine(edge.A, edge.B, 'red')\r\n        return lineSegmentIntersects(origin, target, edge.A, edge.B)\r\n    }\r\n    const intersectsWith =\r\n        setting === 'cross'\r\n            ? edges => {\r\n                  return (\r\n                      (intersectsEdge(edges.top) && intersectsEdge(edges.bottom)) ||\r\n                      (intersectsEdge(edges.left) && intersectsEdge(edges.right))\r\n                  )\r\n              }\r\n            : edges => Object.values(edges).some(edge => intersectsEdge(edge))\r\n\r\n    for (const tokenDocument of tokens) {\r\n        const token = tokenDocument.object\r\n        if (tokenDocument.hidden || token === originToken || token === targetToken) continue\r\n\r\n        const edges = getRectEdges(token.bounds, margin)\r\n\r\n        if (intersectsWith(edges)) return extralarges ? 'standard' : 'lesser'\r\n        else if (isExtraLarge(tokenDocument)) extralarges--\r\n    }\r\n\r\n    return cover\r\n}\r\n\r\nexport function getVisibility(origin, target, checkConcealed = false) {\r\n    const systemVisibility = (() => {\r\n        const originActor = origin.actor\r\n        const visibilities = ['unnoticed', 'undetected', 'hidden']\r\n        if (checkConcealed) visibilities.push('concealed')\r\n\r\n        for (const visibility of visibilities) {\r\n            if (originActor.hasCondition(visibility)) return visibility\r\n        }\r\n    })()\r\n\r\n    const visibility = getTokenData(origin, target.id, 'visibility')\r\n    const mergedVisibility = VISIBILITY_VALUES[systemVisibility] > VISIBILITY_VALUES[visibility] ? systemVisibility : visibility\r\n\r\n    if (checkConcealed && VISIBILITY_VALUES[mergedVisibility] < VISIBILITY_VALUES.concealed && !target.actor.hasLowLightVision) {\r\n        const concealed = isConcealed(origin)\r\n        if (concealed) return 'concealed'\r\n    }\r\n\r\n    return mergedVisibility\r\n}\r\n\r\nexport function updateToken(token, data, context, userId) {\r\n    const flags = data.flags?.['pf2e-perception']\r\n\r\n    if (flags && (flags.data || flags['-=data'] !== undefined)) {\r\n        token.object.renderFlags.set({ refreshVisibility: true })\r\n\r\n        if (game.user.isGM) return\r\n\r\n        const hk = Hooks.on('refreshToken', refreshed => {\r\n            if (!token.object === refreshed) return\r\n            Hooks.off('refreshToken', hk)\r\n            if (game.combat?.getCombatantByToken(token.id)) ui.combat.render()\r\n        })\r\n    }\r\n}\r\n\r\nexport function hoverToken(token, hovered) {\r\n    if (hovered) showAllConditionals(token)\r\n    else clearConditionals(token)\r\n}\r\n\r\nexport function deleteToken(token) {\r\n    clearConditionals(token)\r\n    if (!game.user.isGM) ui.combat.render()\r\n}\r\n\r\nexport function controlToken(token) {\r\n    clearConditionals(token)\r\n    Hooks.once('sightRefresh', () => token.hover && showAllConditionals(token))\r\n}\r\n\r\nexport function clearConditionals(token) {\r\n    const tokenId = token?.id\r\n    if (!tokenId) return $('.pf2e-conditionals').remove()\r\n    $(`.pf2e-conditionals[data-hover-id=${token.id}]`).remove()\r\n    $(`.pf2e-conditionals[data-token-id=${token.id}]`).remove()\r\n}\r\n\r\nexport function showAllConditionals(token) {\r\n    const tokens = getValidTokens(token)\r\n    for (const target of tokens) {\r\n        showConditionals(target, token)\r\n    }\r\n}\r\n\r\nexport async function showConditionals(origin, target) {\r\n    origin = origin instanceof Token ? origin : origin.object\r\n    if (!origin.visible || !origin.actor.isOfType('creature')) return\r\n\r\n    const data = getTokenData(origin, target.id)\r\n    if (isEmpty(data)) return\r\n\r\n    const scale = origin.worldTransform.a\r\n    const coords = canvas.clientCoordinatesFromCanvas(origin.document._source)\r\n\r\n    let content = `<div class=\"pf2e-conditionals\" data-hover-id=\"${origin.id}\" data-token-id=\"${target.id}\" `\r\n    content += `style=\"top: ${coords.y}px; left: ${coords.x + (origin.hitArea.width * scale) / 2}px;\">`\r\n\r\n    Object.entries(data).map(([property, value]) => {\r\n        const img = property === 'cover' ? 'modules/pf2e-perception/images/cover' : `systems/pf2e/icons/conditions/${value}`\r\n        content += `<div class=\"conditional\"><img src=\"../../../${img}.webp\"></img></div>`\r\n    })\r\n\r\n    content += '</div>'\r\n\r\n    $(document.body).append(content)\r\n}\r\n", "import { BLIND_FIGHT_UUID, COVER_UUID, COVER_VALUES, VISIBILITY_VALUES } from './constants.js'\r\nimport { createCoverSource, createFlatFootedSource, findChoiceSetRule } from './effect.js'\r\nimport { getTokenData, getVisibility, getCreatureCover, hasStandardCover } from './token.js'\r\n\r\nexport function getSelfRollOptions(wrapped, prefix) {\r\n    const result = wrapped(prefix)\r\n\r\n    if (prefix === 'origin' && canvas.ready) {\r\n        const token = getActorToken(this)\r\n        if (token) result.push(`origin:tokenid:${token.id}`)\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function getContextualClone(wrapped, rollOptions, ephemeralEffects) {\r\n    const originId = rollOptions.find(option => option.startsWith('origin:tokenid:'))?.slice(15)\r\n    if (!originId) return wrapped(rollOptions, ephemeralEffects)\r\n\r\n    const target = getActorToken(this, true)\r\n    const origin = target?.scene.tokens.get(originId).object\r\n    if (!origin || !target) return wrapped(rollOptions, ephemeralEffects)\r\n\r\n    const conditionalCover = getConditionalCover(origin, target, rollOptions)\r\n    if (conditionalCover) ephemeralEffects.push(createCoverSource(conditionalCover, true))\r\n\r\n    const visibility = getVisibility(origin, target)\r\n    if (VISIBILITY_VALUES[visibility] > VISIBILITY_VALUES.concealed) {\r\n        if (VISIBILITY_VALUES[visibility] === VISIBILITY_VALUES.hidden) {\r\n            const blindFight = getFeatWithUUID(target.actor, BLIND_FIGHT_UUID)\r\n            if (blindFight) return wrapped(rollOptions, ephemeralEffects)\r\n        }\r\n\r\n        ephemeralEffects.push(createFlatFootedSource(visibility))\r\n    }\r\n\r\n    return wrapped(rollOptions, ephemeralEffects)\r\n}\r\n\r\nexport function getActorToken(actor, target = false) {\r\n    if (!actor) return undefined\r\n    const tokens = target ? game.user.targets : canvas.tokens.controlled\r\n    return tokens.find(token => token.actor === actor) ?? actor.getActiveTokens().shift() ?? null\r\n}\r\n\r\nexport function isProne(actor) {\r\n    return actor.itemTypes.condition.some(item => item.slug === 'prone')\r\n}\r\n\r\nexport function getCoverEffect(actor, selection = false) {\r\n    const effect = actor.itemTypes.effect.find(x => x.sourceId === COVER_UUID)\r\n    return selection ? findChoiceSetRule(effect)?.selection.level : effect\r\n}\r\n\r\nexport function getFeatWithUUID(actor, uuid) {\r\n    return actor.itemTypes.feat.find(f => f.sourceId === uuid)\r\n}\r\n\r\nexport function getConditionalCover(origin, target, options, debug = false) {\r\n    const ranged = options.includes('item:ranged')\r\n    const prone = ranged ? isProne(target.actor) : false\r\n\r\n    let systemCover = getCoverEffect(target.actor, true)\r\n    if (prone && COVER_VALUES[systemCover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && systemCover === 'greater-prone') systemCover = undefined\r\n\r\n    let cover = getTokenData(target, origin.id, 'cover')\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n    if (!prone && cover === 'greater-prone') cover = undefined\r\n\r\n    const isCoverable = ranged || options.includes('item:trait:reach') || options.includes('item:type:spell')\r\n\r\n    if (\r\n        COVER_VALUES[cover] < COVER_VALUES.standard &&\r\n        COVER_VALUES[systemCover] < COVER_VALUES.standard &&\r\n        hasStandardCover(origin, target, debug)\r\n    ) {\r\n        cover = 'standard'\r\n    } else if (!cover && !systemCover && isCoverable && origin.distanceTo(target) > 5) {\r\n        cover = getCreatureCover(origin, target, debug)\r\n    }\r\n\r\n    if (prone && COVER_VALUES[cover] > COVER_VALUES.lesser) return 'greater-prone'\r\n\r\n    return COVER_VALUES[cover] > COVER_VALUES[systemCover] ? cover : undefined\r\n}\r\n", "import { CoverValidationMenu, HideValidationMenu, PointOutValidationMenu, SeekValidationMenu } from './apps/validation.js'\r\nimport { MODULE_ID, getFlag, getFlags, localize, setFlag } from './module.js'\r\n\r\nexport function renderChatMessage(message, html) {\r\n    const token = message.token\r\n    if (!token) return\r\n\r\n    const isGM = game.user.isGM\r\n    const hasPlayerOwner = token.hasPlayerOwner\r\n    const { cover, selected, skipWait, validated, blindCheck, pointOut } = getFlags(message)\r\n    const pf2eContext = message.getFlag('pf2e', 'context')\r\n\r\n    if (blindCheck && !isGM && hasPlayerOwner) {\r\n        html.find('.message-header .message-sender').text(token.name)\r\n        html.find('.message-header .flavor-text').html(blindCheck)\r\n    } else if (cover) {\r\n        if (isGM) {\r\n            const button = createValidateButton({ property: 'cover', skipWait, validated })\r\n            html.find('.message-content').append(button)\r\n            html.find('[data-action=validate-cover]').on('click', () => {\r\n                CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n            })\r\n        } else if (!skipWait) {\r\n            const hint = createWaitHint('cover', validated)\r\n            html.find('.message-content').append(hint)\r\n        }\r\n    } else if (pf2eContext?.visibility) {\r\n        if (!validated) html.find('.message-buttons').remove()\r\n\r\n        const flavor = html.find('.message-header .flavor-text')\r\n\r\n        if (!isGM && hasPlayerOwner) {\r\n            html.find('.message-header .message-sender').text(token.name)\r\n            flavor.empty()\r\n        }\r\n\r\n        const msg = localize(`message.flat-check.${validated === undefined ? 'blind' : validated ? 'success' : 'failure'}`)\r\n        const hint = createHint(msg, validated)\r\n        flavor.append(hint)\r\n\r\n        if (isGM) {\r\n            for (const type of ['success', 'failure']) {\r\n                flavor.append(\r\n                    createChatButton({\r\n                        action: `${type}-message`,\r\n                        icon: 'fa-solid fa-message',\r\n                        label: localize('message.flat-check.button', type),\r\n                    })\r\n                )\r\n                html.find(`[data-action=${type}-message]`).on('click', () => {\r\n                    setFlag(message, 'validated', type === 'success')\r\n                })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'skill-check') {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.selected,\r\n                    ValidationMenu: HideValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:hide')) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    } else if (pf2eContext?.type === 'perception-check' && pf2eContext.selected?.length) {\r\n        if (isGM) {\r\n            if (pf2eContext.options.includes('action:seek')) {\r\n                addVisibilityValidationButton({\r\n                    token,\r\n                    html,\r\n                    message,\r\n                    skipWait,\r\n                    validated,\r\n                    selected: pf2eContext.selected,\r\n                    ValidationMenu: SeekValidationMenu,\r\n                })\r\n            }\r\n        } else if (hasPlayerOwner) {\r\n            if (pf2eContext.options.includes('action:seek')) {\r\n                addBlindSkillCheckFlavor({ token, message, html, validated })\r\n            }\r\n        }\r\n    } else if (pointOut) {\r\n        const selectedToken = token.scene.tokens.get(pointOut)\r\n        if (!selectedToken) return\r\n\r\n        if (isGM) {\r\n            let buttons = '<div style=\"display: grid; grid-template-columns: 1fr auto; gap: 3px\">'\r\n\r\n            buttons += createValidateButton({ property: 'visibility', skipWait, validated })\r\n            buttons += createChatButton({ action: 'ping-token', icon: 'fa-solid fa-signal-stream' })\r\n\r\n            buttons += '</div>'\r\n\r\n            html.find('.message-content').append(buttons)\r\n\r\n            html.find('[data-action=validate-visibility]').on('click', async () => {\r\n                PointOutValidationMenu.openMenu({\r\n                    message,\r\n                    token: selectedToken,\r\n                    originator: token,\r\n                    selected: canvas.tokens.controlled.map(t => t.id),\r\n                })\r\n            })\r\n\r\n            html.find('[data-action=ping-token]').on('click', () => {\r\n                canvas.ping(selectedToken.center)\r\n            })\r\n        } else if (hasPlayerOwner) {\r\n            const hint = createWaitHint('visibility', validated)\r\n            html.find('.message-content').append(hint)\r\n        }\r\n    }\r\n}\r\n\r\nexport function validateMessage(message) {\r\n    if (!getFlag(message, 'validated')) setFlag(message, 'validated', true)\r\n}\r\n\r\nfunction addBlindSkillCheckFlavor({ html, token, message, validated }) {\r\n    html.find('.message-header .message-sender').text(token.name)\r\n    let flavor = message.getFlag('pf2e', 'modifierName')\r\n    flavor += createWaitHint('visibility', validated)\r\n    html.find('.message-header .flavor-text').html(flavor)\r\n}\r\n\r\nfunction createWaitHint(property, validated) {\r\n    const hint = localize(`message.${property}.player.${validated ? 'validated' : 'wait'}`)\r\n    return createHint(hint, validated)\r\n}\r\n\r\nfunction createHint(hint, validated) {\r\n    if (validated === true) hint = '<i class=\"fa-solid fa-check\" style=\"color: green;\"></i> ' + hint\r\n    else if (validated === false) hint = '<i class=\"fa-solid fa-xmark\" style=\"color: red;\"></i> ' + hint\r\n    return `<i style=\"display: block; font-size: .9em; text-align: end;\">${hint}</i>`\r\n}\r\n\r\nfunction addVisibilityValidationButton({ skipWait, validated, html, message, ValidationMenu, token, selected }) {\r\n    const button = createValidateButton({ property: 'visibility', skipWait, validated })\r\n    html.find('.message-header .flavor-text').append(button)\r\n    html.find('[data-action=validate-visibility]').on('click', async () => {\r\n        const roll = message.rolls[0].total\r\n        ValidationMenu.openMenu({ token, message, roll, selected })\r\n    })\r\n}\r\n\r\nfunction createValidateButton({ skipWait, validated, property }) {\r\n    let label = localize(`message.${property}.gm.${skipWait ? 'check' : validated ? 'validated' : 'validate'}`)\r\n    if (!skipWait && validated) label += '<i class=\"fa-solid fa-check\" style=\"color: green; margin-left: 0.3em;\"></i>'\r\n    return createChatButton({\r\n        action: `validate-${property}`,\r\n        icon: 'fa-solid fa-list',\r\n        label,\r\n    })\r\n}\r\n\r\nexport function createChatButton({ action, icon, label }) {\r\n    let button = `<button type=\"button\" style=\"margin: 0 0 5px; padding-block: 0;\" data-action=\"${action}\">`\r\n\r\n    if (icon) button += `<i class=\"${icon}\" ${label ? '' : 'style=\"margin: 0;\"'}></i>`\r\n    if (label) button += `${icon ? ' ' : ''}${label}`\r\n\r\n    button += '</button>'\r\n\r\n    return button\r\n}\r\n\r\nexport async function createTokenMessage({ content, token, flags, secret }) {\r\n    const data = { content, speaker: ChatMessage.getSpeaker({ token: token instanceof Token ? token.document : token }) }\r\n    if (flags) setProperty(data, `flags.${MODULE_ID}`, flags)\r\n    if (secret) {\r\n        data.type = CONST.CHAT_MESSAGE_TYPES.WHISPER\r\n        data.whisper = ChatMessage.getWhisperRecipients('gm')\r\n    }\r\n    return ChatMessage.create(data)\r\n}\r\n", "import { MODULE_ID, getFlag, localize } from './module.js'\r\n\r\nconst templateConversion = {\r\n    burst: 'circle',\r\n    emanation: 'circle',\r\n    line: 'ray',\r\n    cone: 'cone',\r\n    rect: 'rect',\r\n}\r\n\r\nexport function createSeekTemplate(type, token) {\r\n    createTemplate({\r\n        type,\r\n        token,\r\n        distance: type === 'cone' ? 30 : 15,\r\n        traits: ['concentrate', 'secret'],\r\n    })\r\n}\r\n\r\nexport function getTokenTemplate(token) {\r\n    return token.scene.templates.find(t => getFlag(t, 'tokenId') === token.id)\r\n}\r\n\r\nexport function getTokenTemplateTokens(token) {\r\n    if (!checkScene(token)) return null\r\n\r\n    const template = getTokenTemplate(token)\r\n    if (!template) return null\r\n\r\n    return getTokens(template.object)\r\n}\r\n\r\nexport async function deleteTokenTemplate(token) {\r\n    const templates = token.scene.templates.filter(t => getFlag(t, 'tokenId') === token.id)\r\n    for (const template of templates) {\r\n        await template.delete()\r\n    }\r\n}\r\n\r\nfunction checkScene(token) {\r\n    if (canvas.scene === token.scene) return true\r\n    ui.notifications.error(localize('template.scene'))\r\n    return false\r\n}\r\n\r\nfunction createTemplate({ type, distance, traits, fillColor, width, token }) {\r\n    if (!checkScene(token)) return\r\n\r\n    const templateData = {\r\n        distance,\r\n        t: templateConversion[type],\r\n        fillColor: fillColor || game.user.color,\r\n        flags: {\r\n            [MODULE_ID]: {\r\n                tokenId: token.id,\r\n            },\r\n        },\r\n    }\r\n\r\n    if (templateData.t === 'ray') {\r\n        templateData.width = width || CONFIG.MeasuredTemplate.defaults.width * (canvas.dimensions?.distance ?? 1)\r\n    } else if (templateData.t === 'cone') {\r\n        templateData.angle = CONFIG.MeasuredTemplate.defaults.angle\r\n    }\r\n\r\n    if (traits) setProperty(templateData, 'flags.pf2e.origin.traits', traits)\r\n\r\n    const templateDoc = new CONFIG.MeasuredTemplate.documentClass(templateData, { parent: canvas.scene })\r\n    new CONFIG.MeasuredTemplate.objectClass(templateDoc).drawPreview()\r\n}\r\n\r\n// TODO remove once it is in the system\r\nfunction getTokens(template, { collisionOrigin, collisionType = 'move' } = {}) {\r\n    if (!canvas.scene) return []\r\n    const { grid, dimensions } = canvas\r\n    if (!(grid && dimensions)) return []\r\n\r\n    const gridHighlight = grid.getHighlightLayer(template.highlightId)\r\n    if (!gridHighlight || grid.type !== CONST.GRID_TYPES.SQUARE) return []\r\n    const origin = collisionOrigin ?? template.center\r\n\r\n    // Get all the tokens that are inside the highlight bounds\r\n    const tokens = canvas.tokens.quadtree.getObjects(gridHighlight.getLocalBounds(undefined, true))\r\n\r\n    const containedTokens = []\r\n    for (const token of tokens) {\r\n        const tokenDoc = token.document\r\n\r\n        // Collect the position of all grid squares that this token occupies as \"x.y\"\r\n        const tokenPositions = []\r\n        for (let h = 0; h < tokenDoc.height; h++) {\r\n            const y = token.y + h * grid.size\r\n            tokenPositions.push(`${token.x}.${y}`)\r\n            if (tokenDoc.width > 1) {\r\n                for (let w = 1; w < tokenDoc.width; w++) {\r\n                    tokenPositions.push(`${token.x + w * grid.size}.${y}`)\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const position of tokenPositions) {\r\n            // Check if a position exists within this GridHiglight\r\n            if (!gridHighlight.positions.has(position)) {\r\n                continue\r\n            }\r\n            // Position of cell's top-left corner, in pixels\r\n            const [gx, gy] = position.split('.').map(s => Number(s))\r\n            // Position of cell's center in pixels\r\n            const destination = {\r\n                x: gx + dimensions.size * 0.5,\r\n                y: gy + dimensions.size * 0.5,\r\n            }\r\n            if (destination.x < 0 || destination.y < 0) continue\r\n\r\n            const hasCollision =\r\n                canvas.ready &&\r\n                collisionType &&\r\n                CONFIG.Canvas.polygonBackends[collisionType].testCollision(origin, destination, {\r\n                    type: collisionType,\r\n                    mode: 'any',\r\n                })\r\n\r\n            if (!hasCollision) {\r\n                containedTokens.push(token)\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return containedTokens\r\n}\r\n", "import { validateMessage } from '../chat.js'\r\nimport { COVERS, VISIBILITIES, VISIBILITY_VALUES, defaultValues } from '../constants.js'\r\nimport { MODULE_ID, getSetting, localize, templatePath } from '../module.js'\r\nimport { getValidTokens } from '../scene.js'\r\nimport { deleteTokenTemplate } from '../template.js'\r\nimport { getTokenData } from '../token.js'\r\nimport { BaseMenu } from './base-menu.js'\r\n\r\nclass ValidationMenu extends BaseMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated && params.message) validateMessage(params.message)\r\n        return validated\r\n    }\r\n\r\n    get title() {\r\n        return localize('menu.validation.title', { name: this.token.name })\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('validation')\r\n    }\r\n\r\n    getSavedData(converted = true) {\r\n        const data = super.getSavedData()\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    _convertData(data) {\r\n        const property = this.property\r\n        const scene = this.scene\r\n        const selected = this.selected\r\n        const defaultValue = defaultValues[property]\r\n        const propertyList = property === 'cover' ? COVERS : VISIBILITIES\r\n\r\n        for (const tokenId of selected) {\r\n            const token = scene.tokens.get(tokenId)\r\n            const fullProperty = `${tokenId}.${property}`\r\n            const currentValue = getProperty(data, fullProperty) ?? defaultValue\r\n\r\n            let processedValue = this.processValue({ token, value: currentValue })\r\n            if (!propertyList.includes(processedValue)) processedValue = currentValue\r\n\r\n            if (currentValue === processedValue) continue\r\n            setProperty(data, fullProperty, processedValue)\r\n        }\r\n\r\n        return data\r\n    }\r\n\r\n    processValue(params) {\r\n        throw new Error(`${this.constructor.name} doesn't have a 'processValue' method defined`)\r\n    }\r\n\r\n    getData(options) {\r\n        const { covers, visibilities, i18n } = super.getData(options)\r\n        const currentData = this.currentData\r\n        const originalData = this.getSavedData(false)\r\n        const property = this.property\r\n\r\n        let selected = this.selected\r\n        let tokens = getValidTokens(this.token)\r\n\r\n        tokens = tokens.map(({ id, name, actor }) => {\r\n            const current = currentData[id] ?? {}\r\n            const original = originalData[id] ?? {}\r\n\r\n            return {\r\n                id,\r\n                name,\r\n                alliance: actor.alliance,\r\n                selected: selected.includes(id),\r\n                ...BaseMenu.createPropertyData(original, current, property),\r\n            }\r\n        })\r\n\r\n        const validation = getSetting('validation')\r\n        if (validation === 'selected') tokens = tokens.filter(t => t.selected)\r\n        else if (validation === 'changed') tokens = tokens.filter(t => t.changed)\r\n\r\n        return {\r\n            ...this._spliIntoAlliances(tokens),\r\n            i18n,\r\n            property: property,\r\n            options: property === 'cover' ? covers : visibilities,\r\n            showSelected: validation === 'all',\r\n            showChanges: validation !== 'changed',\r\n        }\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.find('[data-action=cancel]').on('click', event => {\r\n            this.close()\r\n        })\r\n    }\r\n}\r\n\r\nexport class CoverValidationMenu extends ValidationMenu {\r\n    #value\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#value = params.value\r\n    }\r\n\r\n    get property() {\r\n        return 'cover'\r\n    }\r\n\r\n    get selected() {\r\n        const selected = super.selected\r\n        if (selected.length) return selected\r\n\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        return getValidTokens(token)\r\n            .filter(t => t.actor.alliance !== alliance)\r\n            .map(t => t.id)\r\n    }\r\n\r\n    processValue() {\r\n        return this.#value\r\n    }\r\n}\r\n\r\nclass VisibilityValidationMenu extends ValidationMenu {\r\n    #roll\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#roll = params.roll\r\n    }\r\n\r\n    get property() {\r\n        return 'visibility'\r\n    }\r\n\r\n    get roll() {\r\n        return this.#roll\r\n    }\r\n}\r\n\r\nexport class HideValidationMenu extends VisibilityValidationMenu {\r\n    get selected() {\r\n        const selected = super.selected\r\n        if (selected.length) return selected\r\n\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        return getValidTokens(token)\r\n            .filter(t => t.actor.alliance !== alliance)\r\n            .map(t => t.id)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.perception.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n\r\n        if (roll >= dc && visibility < VISIBILITY_VALUES.hidden) return 'hidden'\r\n        else if (roll < dc && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else return value\r\n    }\r\n}\r\n\r\nexport class PointOutValidationMenu extends VisibilityValidationMenu {\r\n    #originator\r\n\r\n    constructor(params, options = {}) {\r\n        super(params, options)\r\n        this.#originator = params.originator\r\n    }\r\n\r\n    get selected() {\r\n        const token = this.token\r\n        const alliance = token.actor.alliance\r\n        const originatorId = this.#originator.id\r\n        const data = getTokenData(token) ?? {}\r\n\r\n        return getValidTokens(token)\r\n            .filter(t => {\r\n                if (t.id === originatorId || t.actor.alliance === alliance) return false\r\n                const visibility = getProperty(data, `${t.id}.visibility`)\r\n                return VISIBILITY_VALUES[visibility] >= VISIBILITY_VALUES.undetected\r\n            })\r\n            .map(t => t.id)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        return VISIBILITY_VALUES[value] >= VISIBILITY_VALUES.undetected ? 'hidden' : value\r\n    }\r\n}\r\n\r\nclass ReverseVisibilityValidationMenu extends VisibilityValidationMenu {\r\n    getSavedData(converted = true) {\r\n        const thisId = this.token.id\r\n        const tokens = getValidTokens(this.token)\r\n        const data = {}\r\n\r\n        for (const token of tokens) {\r\n            const tokenData = getTokenData(token, thisId)\r\n            if (tokenData) data[token.id] = deepClone(tokenData)\r\n        }\r\n\r\n        return converted ? this._convertData(data) : data\r\n    }\r\n\r\n    getData() {\r\n        const parentData = super.getData()\r\n        parentData.isReversed = true\r\n        parentData.options = VISIBILITIES.map(value => ({ value, label: localize(`visibility.reversed.${value}`) }))\r\n        return parentData\r\n    }\r\n\r\n    _saveData(currentData) {\r\n        const scene = this.scene\r\n        const thisId = this.token.id\r\n        const updates = []\r\n\r\n        for (const [tokenId, data] of Object.entries(currentData)) {\r\n            let update = { _id: tokenId }\r\n            const token = scene.tokens.get(tokenId)\r\n\r\n            if (token) {\r\n                if (data.visibility === defaultValues.visibility) delete data.visibility\r\n\r\n                const original = getTokenData(token, thisId)\r\n                if (original?.visibility === data.visibility) continue\r\n\r\n                if (!original.cover && !data.visibility) {\r\n                    update[`flags.${MODULE_ID}.data.-=${thisId}`] = true\r\n                } else if (!data.visibility) {\r\n                    update[`flags.${MODULE_ID}.data.${thisId}.-=visibility`] = true\r\n                } else {\r\n                    update[`flags.${MODULE_ID}.data.${thisId}.visibility`] = data.visibility\r\n                }\r\n            } else update[`flags.${MODULE_ID}.data.-=${thisId}`] = true\r\n\r\n            updates.push(update)\r\n        }\r\n\r\n        scene.updateEmbeddedDocuments('Token', updates)\r\n    }\r\n}\r\n\r\nexport class SeekValidationMenu extends ReverseVisibilityValidationMenu {\r\n    static async openMenu(params, options) {\r\n        const validated = await super.openMenu(params, options)\r\n        if (validated) deleteTokenTemplate(params.token)\r\n    }\r\n\r\n    processValue({ token, value }) {\r\n        const roll = this.roll\r\n        const dc = token.actor.skills.stealth.dc.value\r\n        const visibility = VISIBILITY_VALUES[value]\r\n\r\n        if (roll >= dc + 10 && visibility >= VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (roll >= dc && visibility === VISIBILITY_VALUES.hidden) return 'observed'\r\n        else if (roll >= dc && visibility >= VISIBILITY_VALUES.undetected) return 'hidden'\r\n        else return value\r\n    }\r\n}\r\n", "import { getActorToken, getCoverEffect, isProne } from './actor.js'\r\nimport { CoverValidationMenu, HideValidationMenu, SeekValidationMenu } from './apps/validation.js'\r\nimport { createTokenMessage } from './chat.js'\r\nimport { VISIBILITY_VALUES, defaultValues } from './constants.js'\r\nimport { createCoverSource } from './effect.js'\r\nimport { MODULE_ID, getSetting, localize, templatePath } from './module.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { createSeekTemplate, deleteTokenTemplate } from './template.js'\r\nimport { clearTokenData, getTokenData, setTokenData } from './token.js'\r\nimport { getPrototype } from './utils.js'\r\n\r\nexport function setupActions() {\r\n    const hide = game.pf2e.actions.get('hide')\r\n    const BaseAction = getPrototype(hide, 2).constructor\r\n    const BaseActionVariant = getPrototype(hide.toActionVariant(), 2).constructor\r\n    const SingleCheckAction = getPrototype(hide, 1).constructor\r\n    const SingleCheckActionVariant = getPrototype(hide.toActionVariant(), 1).constructor\r\n\r\n    setupCover(BaseAction, BaseActionVariant)\r\n    setupHide(SingleCheckAction, SingleCheckActionVariant)\r\n    setupSeek(SingleCheckAction, SingleCheckActionVariant)\r\n    setupPointOut(BaseAction, BaseActionVariant)\r\n}\r\n\r\n// function setupSneak(SingleCheckAction, SingleCheckActionVariant) {\r\n//     class SneakVariant extends SingleCheckActionVariant {\r\n//         // async use(options = {}) {\r\n//         //     const action = game.i18n.localize('PF2E.Actions.Hide.Title')\r\n//         //     const token = getSelectedToken(options, action)\r\n//         //     if (!token) return\r\n//         //     options.actors = [token.actor]\r\n//         //     const result = await super.use(options)\r\n//         //     if (game.user.isGM) {\r\n//         //         openVisibilityValidationMenu({ token, result, ValidationMenu: HideValidationMenu })\r\n//         //     }\r\n//         //     return result\r\n//         // }\r\n//     }\r\n\r\n//     class Sneak extends SingleCheckAction {\r\n//         constructor() {\r\n//             super({\r\n//                 cost: 1,\r\n//                 description: `PF2E.Actions.Sneak.Description`,\r\n//                 name: `PF2E.Actions.Sneak.Title`,\r\n//                 notes: [\r\n//                     { outcome: ['success', 'criticalSuccess'], text: `PF2E.Actions.Sneak.Notes.success` },\r\n//                     { outcome: ['failure'], text: `PF2E.Actions.Sneak.Notes.failure` },\r\n//                     { outcome: ['criticalFailure'], text: `PF2E.Actions.Sneak.Notes.criticalFailure` },\r\n//                 ],\r\n//                 rollOptions: ['action:sneak'],\r\n//                 slug: 'sneak',\r\n//                 traits: ['move', 'secret'],\r\n//             })\r\n//         }\r\n\r\n//         toActionVariant(data) {\r\n//             return new SneakVariant(this, data)\r\n//         }\r\n//     }\r\n\r\n//     game.pf2e.actions.set('sneak', new Sneak())\r\n// }\r\n\r\nfunction setupPointOut(BaseAction, BaseActionVariant) {\r\n    class PointOutVariant extends BaseActionVariant {\r\n        async use(options = {}) {\r\n            const action = localize('action.take-cover')\r\n            const token = getSelectedToken(options, action)\r\n            if (token) pointOut(this, token)\r\n        }\r\n    }\r\n\r\n    class PointOut extends BaseAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                name: `${MODULE_ID}.action.point-out`,\r\n                description: `${MODULE_ID}.action.point-out.description`,\r\n                rollOptions: ['action:point-out'],\r\n                slug: 'point-out',\r\n                traits: ['auditory', 'manipulate', 'visual'],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data = {}) {\r\n            data.name ??= this.name\r\n            return new PointOutVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('point-out', new PointOut())\r\n}\r\n\r\nasync function pointOut({ name, traits }, token) {\r\n    const target = game.user.targets.first()\r\n    const visibility = target ? getTokenData(target, token.id, 'visibility') : undefined\r\n    const isVisible = VISIBILITY_VALUES[visibility] < VISIBILITY_VALUES.undetected\r\n\r\n    let description\r\n    if (isVisible) {\r\n        const dc = target.actor.skills.stealth.dc.value\r\n        description = localize('message.point-out.short-check', {\r\n            check: `@Check[type:perception|dc:${dc}|traits:auditory,manipulate,visual|showDC:gm]`,\r\n        })\r\n    } else description = localize('message.point-out.short')\r\n\r\n    const content = await renderTemplate(templatePath('point-out'), {\r\n        description,\r\n        name,\r\n        traits: traits.map(slug => ({\r\n            slug,\r\n            tooltip: CONFIG.PF2E.traitsDescriptions[slug],\r\n            name: CONFIG.PF2E.actionTraits[slug],\r\n        })),\r\n    })\r\n\r\n    const flags = {\r\n        pointOut: isVisible ? target.id : undefined,\r\n    }\r\n\r\n    createTokenMessage({ content, token, flags })\r\n}\r\n\r\nfunction setupSeek(SingleCheckAction, SingleCheckActionVariant) {\r\n    class SeekVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Seek.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            if (!(await seek(token))) return deleteTokenTemplate(token)\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                const { selected } = result[0].message.getFlag('pf2e', 'context')\r\n                if (selected) openVisibilityValidationMenu({ token, result, ValidationMenu: SeekValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Seek extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.Seek.Description',\r\n                name: 'PF2E.Actions.Seek.Title',\r\n                notes: [\r\n                    { outcome: ['criticalSuccess'], text: 'PF2E.Actions.Seek.Notes.criticalSuccess' },\r\n                    { outcome: ['success'], text: 'PF2E.Actions.Seek.Notes.success' },\r\n                ],\r\n                rollOptions: ['action:seek'],\r\n                slug: 'seek',\r\n                statistic: 'perception',\r\n                traits: ['concentrate', 'secret'],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new SeekVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('seek', new Seek())\r\n}\r\n\r\nasync function seek(token) {\r\n    const unit = game.i18n.localize('PF2E.Foot')\r\n\r\n    let content = '<p style=\"margin: 0 0.3em; text-align: center;\">'\r\n    content += `${localize('dialog.seek.hint')}</p><p>`\r\n\r\n    content += createButton(\r\n        'create-cone',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 30,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.cone),\r\n        })\r\n    )\r\n\r\n    content += createButton(\r\n        'create-burst',\r\n        'fa-thin fa-cubes',\r\n        game.i18n.format('PF2E.TemplateLabel', {\r\n            size: 15,\r\n            unit,\r\n            shape: game.i18n.localize(CONFIG.PF2E.areaTypes.burst),\r\n        })\r\n    )\r\n\r\n    content += '</p>'\r\n\r\n    return Dialog.wait(\r\n        {\r\n            title: `${token.name} - ${game.i18n.localize('PF2E.Actions.Seek.Title')}`,\r\n            content,\r\n            buttons: {\r\n                ok: {\r\n                    icon: '<i class=\"fa-solid fa-check\"></i>',\r\n                    label: localize('dialog.seek.accept'),\r\n                    callback: () => true,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fa-solid fa-xmark\"></i>',\r\n                    label: localize('dialog.seek.cancel'),\r\n                    callback: html => false,\r\n                },\r\n            },\r\n            close: () => false,\r\n            render: html => {\r\n                const content = html.filter('.dialog-content')\r\n                content.find('[data-action=create-cone], [data-action=create-burst]').on('click', event => {\r\n                    const { action } = event.currentTarget.dataset\r\n                    deleteTokenTemplate(token)\r\n                    createSeekTemplate(action === 'create-cone' ? 'cone' : 'burst', token)\r\n                })\r\n            },\r\n        },\r\n        { width: 300, left: 10 }\r\n    )\r\n}\r\n\r\nfunction setupHide(SingleCheckAction, SingleCheckActionVariant) {\r\n    class HideVariant extends SingleCheckActionVariant {\r\n        async use(options = {}) {\r\n            const action = game.i18n.localize('PF2E.Actions.Hide.Title')\r\n            const token = getSelectedToken(options, action)\r\n            if (!token) return\r\n\r\n            options.actors = [token.actor]\r\n            const result = await super.use(options)\r\n\r\n            if (game.user.isGM) {\r\n                openVisibilityValidationMenu({ token, result, ValidationMenu: HideValidationMenu })\r\n            }\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    class Hide extends SingleCheckAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: `PF2E.Actions.Hide.Description`,\r\n                name: `PF2E.Actions.Hide.Title`,\r\n                rollOptions: ['action:hide'],\r\n                slug: 'hide',\r\n                statistic: 'stealth',\r\n                traits: ['secret'],\r\n                notes: [{ outcome: ['success', 'criticalSuccess'], text: `PF2E.Actions.Hide.Notes.success` }],\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new HideVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('hide', new Hide())\r\n}\r\n\r\nfunction setupCover(BaseAction, BaseActionVariant) {\r\n    class TakeCoverVariant extends BaseActionVariant {\r\n        async use(options = {}) {\r\n            const action = localize('action.take-cover')\r\n            const token = getSelectedToken(options, action)\r\n            if (token) takeCover(token)\r\n        }\r\n    }\r\n\r\n    class TakeCover extends BaseAction {\r\n        constructor() {\r\n            super({\r\n                cost: 1,\r\n                description: 'PF2E.Actions.TakeCover.Description',\r\n                img: 'systems/pf2e/icons/conditions-2/status_acup.webp',\r\n                name: 'PF2E.Actions.TakeCover.Title',\r\n                slug: 'take-cover',\r\n            })\r\n        }\r\n\r\n        toActionVariant(data) {\r\n            return new TakeCoverVariant(this, data)\r\n        }\r\n    }\r\n\r\n    game.pf2e.actions.set('take-cover', new TakeCover())\r\n}\r\n\r\nasync function takeCover(token) {\r\n    const actor = token.actor\r\n    const cover = getCoverEffect(actor)\r\n\r\n    const targets = validateTokens(token, game.user.targets.ids)\r\n    if (cover && !targets.length) return cover.delete()\r\n\r\n    const data = getTokenData(token) ?? {}\r\n    const covers = Object.entries(data).reduce((covers, [tokenId, { cover }]) => {\r\n        if (cover) covers[tokenId] = cover\r\n        return covers\r\n    }, {})\r\n\r\n    const content = await renderTemplate(templatePath('covers-dialog'), {\r\n        i18n: key => localize(key),\r\n        hasTargets: !!targets.length,\r\n        hasCovers: !isEmpty(covers),\r\n        hasTargetCover: targets.some(id => id in covers),\r\n        isProne: isProne(actor),\r\n    })\r\n\r\n    const dialog = new Dialog({\r\n        title: `${token.name} - ${localize('action.take-cover')}`,\r\n        content,\r\n        buttons: {},\r\n        render: html => {\r\n            html.find('button').on('click', async event => {\r\n                const { level } = event.currentTarget.dataset\r\n                const skip = getSetting('skip-cover')\r\n\r\n                const process = async (cover, selected) => {\r\n                    selected = selected ? targets : undefined\r\n\r\n                    const flavor = cover === defaultValues.cover ? (selected ? 'remove' : 'remove-all') : 'take'\r\n                    const message = await createTokenMessage({\r\n                        content: localize(`message.cover.${flavor}`, { cover: localize(`cover.${cover}`) }),\r\n                        flags: { selected, cover, skipWait: skip },\r\n                        token,\r\n                    })\r\n\r\n                    if (skip) {\r\n                        if (cover === defaultValues.cover && !selected) return clearTokenData(token)\r\n                        const data = deepClone(getTokenData(token)) ?? {}\r\n                        for (const tokenId of targets) {\r\n                            setProperty(data, `${tokenId}.cover`, cover)\r\n                        }\r\n                        return setTokenData(token, data)\r\n                    } else if (game.user.isGM) {\r\n                        CoverValidationMenu.openMenu({ token, selected, value: cover, message })\r\n                    }\r\n                }\r\n\r\n                if (level === 'remove-all') process(defaultValues.cover)\r\n                else if (level === 'remove') process(defaultValues.cover, true)\r\n                else if (targets.length) process(level, true)\r\n                else {\r\n                    const source = createCoverSource(level)\r\n                    actor.createEmbeddedDocuments('Item', [source])\r\n                }\r\n\r\n                dialog.close()\r\n            })\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nfunction getSelectedToken(options, action) {\r\n    let tokens = options.tokens ?? []\r\n    if (!Array.isArray(tokens)) tokens = [tokens]\r\n\r\n    let actors = options.actors ?? []\r\n    if (!Array.isArray(actors)) actors = [actors]\r\n\r\n    if (!tokens.length && actors.length === 1) tokens = [getActorToken(actors[0])].filter(Boolean)\r\n    if (!tokens.length) tokens = canvas.tokens.controlled\r\n    if (!tokens.length) tokens = [getActorToken(game.user.character)].filter(Boolean)\r\n\r\n    if (tokens.length > 1) {\r\n        ui.notifications.warn(localize('action.only-one', { action }))\r\n        return\r\n    } else if (!tokens.length) {\r\n        ui.notifications.warn(localize('action.must-one', { action }))\r\n        return\r\n    }\r\n\r\n    const token = tokens[0]\r\n    if (!token?.actor.isOfType('creature')) {\r\n        ui.notifications.warn(localize('action.must-creature', { action }))\r\n        return\r\n    }\r\n\r\n    return token\r\n}\r\n\r\nfunction createButton(action, icon, label) {\r\n    return `<button type=\"button\" data-action=\"${action}\" style=\"margin: 0 0 5px; padding: 0;\">\r\n    <i class=\"${icon}\"></i> ${label}</button>\r\n</button>`\r\n}\r\n\r\nfunction openVisibilityValidationMenu({ token, result, ValidationMenu }) {\r\n    const roll = result[0].roll.total\r\n    const message = result[0].message\r\n    const selected = message.getFlag('pf2e', 'context.selected')\r\n    ValidationMenu.openMenu({ token, roll, selected, message })\r\n}\r\n", "import { getActorToken, getFeatWithUUID } from './actor.js'\r\nimport { BLIND_FIGHT_UUID, COVER_UUID, VISIBILITY_VALUES, attackCheckRoll, skipConditional, validCheckRoll } from './constants.js'\r\nimport { MODULE_ID, getFlag, localize } from './module.js'\r\nimport { validateTokens } from './scene.js'\r\nimport { getTokenTemplateTokens } from './template.js'\r\nimport { getVisibility } from './token.js'\r\n\r\nexport async function checkRoll(wrapped, ...args) {\r\n    const context = args[1]\r\n    if (!context) return wrapped(...args)\r\n\r\n    if (Array.isArray(context.options)) context.options = new Set(context.options)\r\n\r\n    const { actor, createMessage = 'true', type, token, target, isReroll } = context\r\n    const originToken = token ?? getActorToken(actor)\r\n    const targetToken = target?.token\r\n    const isAttackRoll = attackCheckRoll.includes(type)\r\n\r\n    if (isReroll || !createMessage || !originToken || !validCheckRoll.includes(type) || (isAttackRoll && !targetToken))\r\n        return wrapped(...args)\r\n\r\n    if (isAttackRoll) {\r\n        const visibility = getVisibility(targetToken, originToken, true)\r\n        if (!visibility) return wrapped(...args)\r\n\r\n        if (visibility === 'concealed' && originToken.actor.hasLowLightVision) return wrapped(...args)\r\n\r\n        const blindFight = getFeatWithUUID(actor, BLIND_FIGHT_UUID)\r\n        if (visibility === 'concealed' && blindFight) return wrapped(...args)\r\n\r\n        const dc = visibility === 'concealed' || blindFight ? 5 : 11\r\n        const roll = await new Roll('1d20').evaluate({ async: true })\r\n        const total = roll.total\r\n        const isSuccess = total >= dc\r\n        const isUndetected = VISIBILITY_VALUES[visibility] >= VISIBILITY_VALUES.undetected\r\n        const success = isSuccess ? 2 : 1\r\n\r\n        let flavor = `${game.i18n.localize('PF2E.FlatCheck')}:`\r\n        flavor += `<strong> ${game.i18n.localize(`PF2E.condition.${visibility}.name`)}</strong>`\r\n\r\n        flavor += (\r\n            await game.pf2e.Check.createResultFlavor({\r\n                target,\r\n                degree: {\r\n                    value: success,\r\n                    unadjusted: success,\r\n                    adjustment: null,\r\n                    dieResult: total,\r\n                    rollTotal: total,\r\n                    dc: { value: dc },\r\n                },\r\n            })\r\n        ).outerHTML\r\n\r\n        const messageData = {\r\n            flavor,\r\n            speaker: ChatMessage.getSpeaker({ token: originToken instanceof Token ? originToken.document : originToken }),\r\n        }\r\n\r\n        if (isUndetected) {\r\n            context.options.add('secret')\r\n            context.isSuccess = isSuccess\r\n            context.visibility = visibility\r\n\r\n            let blindCheck = `${game.i18n.localize('PF2E.FlatCheck')}:`\r\n            blindCheck += `<strong> ${game.i18n.localize(`PF2E.condition.undetected.name`)}</strong>`\r\n            messageData.flags = {\r\n                [MODULE_ID]: {\r\n                    blindCheck,\r\n                },\r\n            }\r\n        }\r\n\r\n        await roll.toMessage(messageData, { rollMode: isUndetected ? (game.user.isGM ? 'gmroll' : 'blindroll') : 'roll' })\r\n\r\n        if (!isUndetected && !isSuccess) return\r\n    } else if (context.options.has('action:hide')) {\r\n        context.selected = game.user.targets.ids\r\n        // } else if (context.options.has('action:sneak')) {\r\n        //     context.selected = game.user.targets.ids\r\n    } else if (context.options.has('action:seek')) {\r\n        const alliance = originToken.actor.alliance\r\n        const highlighted = getTokenTemplateTokens(originToken)\r\n        if (!highlighted) return wrapped(...args)\r\n\r\n        context.selected = validateTokens(originToken, highlighted)\r\n            .filter(t => {\r\n                const otherAlliance = t.actor.alliance\r\n                return !t.document.hidden && (!otherAlliance || otherAlliance !== alliance)\r\n            })\r\n            .map(t => t.id)\r\n    }\r\n\r\n    return wrapped(...args)\r\n}\r\n\r\nexport function renderCheckModifiersDialog(dialog, html) {\r\n    const appid = html.attr('data-appid')\r\n\r\n    const { createMessage = 'true', type, token, target, isReroll, options, dc } = dialog.context\r\n    const originToken = token\r\n    const targetToken = target?.token\r\n    const targetActor = target?.actor\r\n\r\n    if (isReroll || !createMessage || !originToken || !targetToken || !targetActor || !attackCheckRoll.includes(type)) return\r\n\r\n    const originalCover =\r\n        dialog[MODULE_ID]?.originalCover ??\r\n        targetActor.itemTypes.effect.find(e => e.sourceId === COVER_UUID && getFlag(e, 'canSkip'))?.toObject()\r\n\r\n    if (!originalCover) return\r\n\r\n    if (!dialog[MODULE_ID]?.originalCover) setProperty(dialog, `${MODULE_ID}.originalCover`, originalCover)\r\n\r\n    const skipCover = options.has(skipConditional.cover)\r\n\r\n    html.find('.roll-mode-panel').before(`<div class=\"pf2e-perception\">\r\n        <div class=\"dialog-row ${skipCover ? '' : 'disabled'}\">\r\n            <span class=\"mod\">${localize('dice-checks.covers')}</span>\r\n            <label class=\"exclude toggle\">\r\n                <input type=\"checkbox\" id=\"app-${appid}-perception-covers\" ${skipCover ? 'checked' : ''} />\r\n                <label for=\"app-${appid}-perception-covers\"></label>\r\n            </label>\r\n        </div>\r\n    </div><hr>`)\r\n\r\n    html.find(`#app-${appid}-perception-covers`).on('change', event => {\r\n        const checked = event.currentTarget.checked\r\n\r\n        if (checked) options.add(skipConditional.cover)\r\n        else options.delete(skipConditional.cover)\r\n\r\n        const items = deepClone(targetActor._source.items)\r\n        const index = items.findIndex(\r\n            i => getProperty(i, 'flags.core.sourceId') === COVER_UUID && getProperty(i, `flags.${MODULE_ID}.canSkip`)\r\n        )\r\n\r\n        if (checked && index !== -1) items.splice(index, 1)\r\n        else if (!checked && index === -1) items.push(originalCover)\r\n\r\n        target.actor = targetActor.clone({ items }, { keepId: true })\r\n\r\n        if (dc?.slug) {\r\n            const statistic = target.actor.getStatistic(dc.slug)?.dc\r\n            if (statistic) {\r\n                dc.value = statistic.value\r\n                dc.statistic = statistic\r\n            }\r\n        }\r\n\r\n        dialog.render()\r\n    })\r\n\r\n    dialog.setPosition()\r\n}\r\n", "import { VISIBILITY_VALUES } from './constants.js'\r\nimport { getTokenData } from './token.js'\r\n\r\nexport function basicSightCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return !isValidTarget(target) || (!isUndetected(target, 'basicSight') && !isHidden(target))\r\n}\r\n\r\nexport function hearingCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    if (!game.settings.get('pf2e', 'automation.rulesBasedVision')) return true\r\n    return !visionSource.object.actor?.hasCondition('deafened') && isValidTarget(target) && !isUndetected(target, 'hearing')\r\n}\r\n\r\nexport function feelTremorCanDetect(wrapped, visionSource, target) {\r\n    if (!wrapped(visionSource, target)) return false\r\n    return isValidTarget(target) && !isUndetected(target, 'feelTremor')\r\n}\r\n\r\nfunction isValidTarget(target) {\r\n    return !!(target instanceof Token && target.actor)\r\n}\r\n\r\nfunction reachesThreshold(target, tokens, threshold) {\r\n    for (const origin of tokens) {\r\n        const visibility = getTokenData(target, origin.id, 'visibility')\r\n        if (VISIBILITY_VALUES[visibility] >= threshold) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isUndetected(target, mode, unnoticed = false) {\r\n    const tokens = game.user.isGM ? canvas.tokens.controlled : target.scene.tokens.filter(t => t.isOwner)\r\n    const filtered = tokens.filter(t => t.detectionModes.some(d => d.id === mode))\r\n    return reachesThreshold(target, filtered, unnoticed ? VISIBILITY_VALUES.unnoticed : VISIBILITY_VALUES.undetected)\r\n}\r\n\r\nfunction isHidden(target) {\r\n    let tokens = canvas.tokens.controlled\r\n    if (!game.user.isGM && !tokens.length) {\r\n        tokens = target.scene.tokens.filter(t => t.isOwner)\r\n        if (tokens.length !== 1) return false\r\n    }\r\n    return reachesThreshold(target, tokens, VISIBILITY_VALUES.hidden)\r\n}\r\n", "import { isUndetected } from './detection.js'\r\nimport { getSetting, localize, setSetting } from './module.js'\r\n\r\nexport function renderCombatTracker(tracker, html) {\r\n    if (getSetting('target')) setupToggleTarget(html)\r\n    hideUndetected(html)\r\n}\r\n\r\nfunction hideUndetected(html) {\r\n    if (!canvas.ready) return\r\n\r\n    const combatants = game.combats.viewed?.combatants\r\n    if (!combatants?.size) return\r\n\r\n    html.find('#combat-tracker .combatant').each((i, li) => {\r\n        const { combatantId } = li.dataset\r\n        const token = combatants.get(combatantId ?? '')?.token\r\n        if (!token) return\r\n        if (isUndetected(token, 'basicSight', true)) li.remove()\r\n    })\r\n}\r\n\r\nfunction setupToggleTarget(html) {\r\n    html.find('[data-control=toggleTarget]').each((_, el) => {\r\n        el.addEventListener(\r\n            'click',\r\n            event => {\r\n                event.preventDefault()\r\n                event.stopPropagation()\r\n                event.stopImmediatePropagation()\r\n\r\n                const { combatantId } = event.currentTarget.closest('.combatant').dataset\r\n                const combatant = game.combats.viewed.combatants.get(combatantId ?? '')\r\n                const token = combatant?.token\r\n                if (!token) return\r\n\r\n                const isTargeted = Array.from(game.user.targets).some(t => t.document === token)\r\n                token.object.setTarget(!isTargeted, { releaseOthers: !event.shiftKey })\r\n            },\r\n            true\r\n        )\r\n    })\r\n}\r\n\r\nexport function renderCombatTrackerConfig(config, html) {\r\n    const checked = getSetting('encounter')\r\n\r\n    html.find('.form-group').last().after(`<div class=\"form-group\">\r\n    <label>${localize('settings.encounter.name')}</label>\r\n    <input type=\"checkbox\" name=\"pf2e-perception.encounter\" ${checked ? 'checked' : ''}>\r\n    <p class=\"notes\">${localize('settings.encounter.short')}</p>\r\n</div>`)\r\n\r\n    html.find('input[name=\"pf2e-perception.encounter\"]').on('change', event => {\r\n        const checked = event.currentTarget.checked\r\n        setSetting('encounter', checked)\r\n    })\r\n}\r\n", "import { MODULE_ID } from './module.js'\r\n\r\nexport function registerSettings() {\r\n    register('target', Boolean, true, {\r\n        onChange: () => ui.combat?.render(),\r\n    })\r\n\r\n    register('lesser', String, 'ten', {\r\n        choices: {\r\n            none: path('lesser', 'choices.none'),\r\n            cross: path('lesser', 'choices.cross'),\r\n            zero: path('lesser', 'choices.zero'),\r\n            ten: path('lesser', 'choices.ten'),\r\n            twenty: path('lesser', 'choices.twenty'),\r\n        },\r\n    })\r\n\r\n    register('standard', Boolean, true)\r\n\r\n    register('standard-type', String, 'center', {\r\n        choices: {\r\n            center: path('standard-type', 'choices.center'),\r\n            points: path('standard-type', 'choices.points'),\r\n            // corners: path('standard-type', 'choices.corners'),\r\n        },\r\n    })\r\n\r\n    register('skip-cover', Boolean, true)\r\n\r\n    register('validation', String, 'all', {\r\n        choices: {\r\n            all: path('validation', 'choices.all'),\r\n            selected: path('validation', 'choices.selected'),\r\n            changed: path('validation', 'choices.changed'),\r\n        },\r\n    })\r\n\r\n    register('concealed', Boolean, true)\r\n\r\n    register('encounter', Boolean, false)\r\n}\r\n\r\nfunction path(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction register(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        scope: 'world',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n        ...extra,\r\n    })\r\n}\r\n", "import { setupActions } from './action.js'\r\nimport { getActorToken, getConditionalCover, getContextualClone, getCoverEffect, getSelfRollOptions, isProne } from './actor.js'\r\nimport { renderChatMessage } from './chat.js'\r\nimport { checkRoll, renderCheckModifiersDialog } from './check.js'\r\nimport { renderCombatTracker, renderCombatTrackerConfig } from './combat.js'\r\nimport { basicSightCanDetect, feelTremorCanDetect, hearingCanDetect, isUndetected } from './detection.js'\r\nimport { clearDebug, lineIntersectWall, pointToTokenIntersectWall } from './geometry.js'\r\nimport { inBrightLight, isConcealed } from './lighting.js'\r\nimport { MODULE_ID } from './module.js'\r\nimport { getSceneSetting, getValidTokens, renderSceneConfig, validateTokens } from './scene.js'\r\nimport { registerSettings } from './settings.js'\r\nimport {\r\n    clearConditionals,\r\n    controlToken,\r\n    deleteToken,\r\n    getCreatureCover,\r\n    getTokenData,\r\n    getVisibility,\r\n    hasStandardCover,\r\n    hoverToken,\r\n    pasteToken,\r\n    renderTokenHUD,\r\n    showAllConditionals,\r\n    showConditionals,\r\n    updateToken,\r\n} from './token.js'\r\n\r\nconst CHECK_ROLL = 'game.pf2e.Check.roll'\r\n\r\nconst GET_CONTEXTUAL_CLONE = 'CONFIG.Actor.documentClass.prototype.getContextualClone'\r\nconst GET_SELF_ROLL_OPTIONS = 'CONFIG.Actor.documentClass.prototype.getSelfRollOptions'\r\n\r\nconst BASIC_SIGHT_CAN_DETECT = 'CONFIG.Canvas.detectionModes.basicSight._canDetect'\r\nconst HEARING_CAN_DETECT = 'CONFIG.Canvas.detectionModes.hearing._canDetect'\r\nconst FEEL_TREMOR_CAN_DETECT = 'CONFIG.Canvas.detectionModes.feelTremor._canDetect'\r\n\r\nHooks.once('init', () => {\r\n    registerSettings()\r\n    setupActions()\r\n\r\n    libWrapper.register(MODULE_ID, CHECK_ROLL, checkRoll)\r\n\r\n    libWrapper.register(MODULE_ID, GET_CONTEXTUAL_CLONE, getContextualClone)\r\n    libWrapper.register(MODULE_ID, GET_SELF_ROLL_OPTIONS, getSelfRollOptions)\r\n\r\n    libWrapper.register(MODULE_ID, BASIC_SIGHT_CAN_DETECT, basicSightCanDetect)\r\n    libWrapper.register(MODULE_ID, HEARING_CAN_DETECT, hearingCanDetect)\r\n    libWrapper.register(MODULE_ID, FEEL_TREMOR_CAN_DETECT, feelTremorCanDetect)\r\n\r\n    const isGM = game.data.users.find(x => x._id === game.data.userId).role >= CONST.USER_ROLES.GAMEMASTER\r\n    if (isGM) {\r\n        Hooks.on('renderSceneConfig', renderSceneConfig)\r\n        Hooks.on('renderTokenHUD', renderTokenHUD)\r\n        Hooks.on('renderCombatTrackerConfig', renderCombatTrackerConfig)\r\n    } else {\r\n        Hooks.on('renderCombatTracker', renderCombatTracker)\r\n    }\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    game.modules.get(MODULE_ID).api = {\r\n        geometry: {\r\n            clearDebug,\r\n            lineIntersectWall,\r\n            pointToTokenIntersectWall,\r\n        },\r\n        token: {\r\n            getCreatureCover,\r\n            getVisibility,\r\n            clearConditionals,\r\n            showConditionals,\r\n            showAllConditionals,\r\n            hasStandardCover,\r\n            getTokenData,\r\n        },\r\n        lighting: {\r\n            isConcealed,\r\n            inBrightLight,\r\n        },\r\n        actor: {\r\n            getActorToken,\r\n            isProne,\r\n            getCoverEffect,\r\n            getConditionalCover,\r\n        },\r\n        scene: {\r\n            getValidTokens,\r\n            validateTokens,\r\n            getSceneSetting,\r\n        },\r\n        detection: {\r\n            isUndetected,\r\n        },\r\n    }\r\n})\r\n\r\nHooks.on('hoverToken', hoverToken)\r\nHooks.on('pasteToken', pasteToken)\r\nHooks.on('updateToken', updateToken)\r\nHooks.on('deleteToken', deleteToken)\r\nHooks.on('controlToken', controlToken)\r\n\r\nHooks.on('canvasPan', () => clearConditionals())\r\n\r\nHooks.on('renderChatMessage', renderChatMessage)\r\n\r\nHooks.on('renderCheckModifiersDialog', renderCheckModifiersDialog)\r\n"],
  "mappings": "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",
  "names": ["COVER_UUID", "BLIND_FIGHT_UUID", "VISIBILITY_VALUES", "VISIBILITIES", "COVERS", "COVER_VALUES", "defaultValues", "attackCheckRoll", "validCheckRoll", "skipConditional", "MODULE_ID", "templatePath", "template", "__name", "localize", "args", "data", "useFormat", "keys", "getFlag", "doc", "flag", "setFlag", "value", "unsetFlag", "getFlags", "getSetting", "setting", "setSetting", "createFlatFootedSource", "visibility", "name", "__name", "createCoverSource", "cover", "canSkip", "bonus", "COVER_VALUES", "localize", "COVER_UUID", "MODULE_ID", "findChoiceSetRule", "item", "flag", "rule", "renderSceneConfig", "config", "html", "settings", "setting", "checked", "getSceneSetting", "localize", "__name", "getValidTokens", "token", "tokens", "t", "getSetting", "combat", "actor", "traits", "validateTokens", "validToken", "id", "scene", "getFlag", "getPrototype", "obj", "depth", "prototype", "__name", "sortByName", "a", "b", "BaseMenu", "#token", "#resolve", "#selected", "#_currentData", "#hoverTokenListener", "token", "resolve", "selected", "options", "hover", "tokenId", "tokens", "params", "localize", "MODULE_ID", "win", "x", "original", "current", "property", "defaultValue", "defaultValues", "originalValue", "currentValue", "validateTokens", "#currentData", "data", "getTokenData", "id", "covers", "COVERS", "value", "args", "isProne", "VISIBILITIES", "html", "event", "target", "tokenIds", "currentData", "setTokenData", "el", "allies", "enemies", "neutral", "alliance", "opposition", "actorAlliance", "sortByName", "__name", "PerceptionMenu", "BaseMenu", "localize", "templatePath", "options", "selected", "currentData", "originalData", "tokens", "getValidTokens", "id", "name", "actor", "current", "original", "html", "event", "section", "allSelected", "t", "__name", "RECT_CORNERS", "RECT_SPREAD", "getRectEdges", "rect", "margin", "opposite", "getRectPoint", "__name", "lineIntersectWall", "origin", "target", "debug", "drawDebugLine", "pointToTokenIntersectWall", "token", "point", "coords", "clearDebug", "color", "hex", "isConcealed", "token", "scene", "getSceneSetting", "inBrightLight", "__name", "debug", "rect", "clearDebug", "light", "inBrightRange", "point", "RECT_SPREAD", "x", "y", "getRectPoint", "drawDebugLine", "origin", "bright", "RECT_CORNERS", "rectPoint", "renderTokenHUD", "hud", "html", "event", "PerceptionMenu", "__name", "pasteToken", "originals", "sources", "source", "MODULE_ID", "getTokenData", "token", "path", "getFlag", "clearTokenData", "unsetFlag", "setTokenData", "data", "valid", "getValidTokens", "t", "updates", "tokenId", "current", "original", "defaultValues", "property", "hasStandardCover", "origin", "target", "debug", "scene", "getSceneSetting", "clearDebug", "standard", "getSetting", "lineIntersectWall", "pointToTokenIntersectWall", "SIZES", "getCreatureCover", "originToken", "targetToken", "setting", "cover", "drawDebugLine", "isExtraLarge", "size", "originSize", "targetSize", "tokens", "a", "extralarges", "margin", "intersectsEdge", "edge", "intersectsWith", "edges", "tokenDocument", "getRectEdges", "getVisibility", "checkConcealed", "systemVisibility", "originActor", "visibilities", "visibility", "mergedVisibility", "VISIBILITY_VALUES", "isConcealed", "updateToken", "context", "userId", "flags", "hk", "refreshed", "hoverToken", "hovered", "showAllConditionals", "clearConditionals", "deleteToken", "controlToken", "showConditionals", "scale", "coords", "content", "value", "img", "getSelfRollOptions", "wrapped", "prefix", "result", "token", "getActorToken", "__name", "getContextualClone", "rollOptions", "ephemeralEffects", "originId", "option", "target", "origin", "conditionalCover", "getConditionalCover", "createCoverSource", "visibility", "getVisibility", "VISIBILITY_VALUES", "getFeatWithUUID", "BLIND_FIGHT_UUID", "createFlatFootedSource", "actor", "isProne", "item", "getCoverEffect", "selection", "effect", "x", "COVER_UUID", "findChoiceSetRule", "uuid", "f", "options", "debug", "ranged", "prone", "systemCover", "COVER_VALUES", "cover", "getTokenData", "isCoverable", "hasStandardCover", "getCreatureCover", "renderChatMessage", "message", "html", "token", "isGM", "hasPlayerOwner", "cover", "selected", "skipWait", "validated", "blindCheck", "pointOut", "getFlags", "pf2eContext", "button", "createValidateButton", "CoverValidationMenu", "hint", "createWaitHint", "flavor", "msg", "localize", "createHint", "type", "createChatButton", "setFlag", "addVisibilityValidationButton", "HideValidationMenu", "addBlindSkillCheckFlavor", "SeekValidationMenu", "selectedToken", "buttons", "PointOutValidationMenu", "t", "__name", "validateMessage", "getFlag", "property", "ValidationMenu", "roll", "label", "action", "icon", "createTokenMessage", "content", "flags", "secret", "data", "MODULE_ID", "templateConversion", "createSeekTemplate", "type", "token", "createTemplate", "__name", "getTokenTemplate", "t", "getFlag", "getTokenTemplateTokens", "checkScene", "template", "getTokens", "deleteTokenTemplate", "templates", "localize", "distance", "traits", "fillColor", "width", "templateData", "MODULE_ID", "templateDoc", "collisionOrigin", "collisionType", "grid", "dimensions", "gridHighlight", "origin", "tokens", "containedTokens", "tokenDoc", "tokenPositions", "h", "y", "w", "position", "gx", "gy", "s", "destination", "ValidationMenu", "BaseMenu", "params", "options", "validated", "validateMessage", "localize", "templatePath", "converted", "data", "property", "scene", "selected", "defaultValue", "defaultValues", "propertyList", "COVERS", "VISIBILITIES", "tokenId", "token", "fullProperty", "currentValue", "processedValue", "covers", "visibilities", "i18n", "currentData", "originalData", "tokens", "getValidTokens", "id", "name", "actor", "current", "original", "validation", "getSetting", "t", "html", "event", "__name", "CoverValidationMenu", "#value", "alliance", "VisibilityValidationMenu", "#roll", "HideValidationMenu", "value", "roll", "dc", "visibility", "VISIBILITY_VALUES", "PointOutValidationMenu", "#originator", "originatorId", "getTokenData", "ReverseVisibilityValidationMenu", "thisId", "tokenData", "parentData", "updates", "update", "MODULE_ID", "SeekValidationMenu", "deleteTokenTemplate", "setupActions", "hide", "BaseAction", "getPrototype", "BaseActionVariant", "SingleCheckAction", "SingleCheckActionVariant", "setupCover", "setupHide", "setupSeek", "setupPointOut", "__name", "PointOutVariant", "options", "action", "localize", "token", "getSelectedToken", "pointOut", "PointOut", "MODULE_ID", "data", "name", "traits", "target", "visibility", "getTokenData", "isVisible", "VISIBILITY_VALUES", "description", "dc", "content", "templatePath", "slug", "flags", "createTokenMessage", "SeekVariant", "seek", "deleteTokenTemplate", "result", "selected", "openVisibilityValidationMenu", "SeekValidationMenu", "Seek", "unit", "createButton", "html", "event", "createSeekTemplate", "HideVariant", "HideValidationMenu", "Hide", "TakeCoverVariant", "takeCover", "TakeCover", "actor", "cover", "getCoverEffect", "targets", "validateTokens", "covers", "tokenId", "key", "id", "isProne", "dialog", "level", "skip", "getSetting", "process", "flavor", "defaultValues", "message", "clearTokenData", "setTokenData", "CoverValidationMenu", "source", "createCoverSource", "tokens", "actors", "getActorToken", "icon", "label", "ValidationMenu", "roll", "checkRoll", "wrapped", "args", "context", "actor", "createMessage", "type", "token", "target", "isReroll", "originToken", "getActorToken", "targetToken", "isAttackRoll", "attackCheckRoll", "validCheckRoll", "visibility", "getVisibility", "blindFight", "getFeatWithUUID", "BLIND_FIGHT_UUID", "dc", "roll", "total", "isSuccess", "isUndetected", "VISIBILITY_VALUES", "success", "flavor", "messageData", "blindCheck", "MODULE_ID", "alliance", "highlighted", "getTokenTemplateTokens", "validateTokens", "t", "otherAlliance", "__name", "renderCheckModifiersDialog", "dialog", "html", "appid", "options", "targetActor", "originalCover", "e", "COVER_UUID", "getFlag", "skipCover", "skipConditional", "localize", "event", "checked", "items", "index", "i", "statistic", "basicSightCanDetect", "wrapped", "visionSource", "target", "isValidTarget", "isUndetected", "isHidden", "__name", "hearingCanDetect", "feelTremorCanDetect", "reachesThreshold", "tokens", "threshold", "origin", "visibility", "getTokenData", "VISIBILITY_VALUES", "mode", "unnoticed", "filtered", "t", "d", "renderCombatTracker", "tracker", "html", "getSetting", "setupToggleTarget", "hideUndetected", "__name", "combatants", "i", "li", "combatantId", "token", "isUndetected", "_", "el", "event", "isTargeted", "t", "renderCombatTrackerConfig", "config", "checked", "localize", "setSetting", "registerSettings", "register", "path", "__name", "setting", "key", "MODULE_ID", "name", "type", "defValue", "extra", "CHECK_ROLL", "GET_CONTEXTUAL_CLONE", "GET_SELF_ROLL_OPTIONS", "BASIC_SIGHT_CAN_DETECT", "HEARING_CAN_DETECT", "FEEL_TREMOR_CAN_DETECT", "registerSettings", "setupActions", "MODULE_ID", "checkRoll", "getContextualClone", "getSelfRollOptions", "basicSightCanDetect", "hearingCanDetect", "feelTremorCanDetect", "x", "renderSceneConfig", "renderTokenHUD", "renderCombatTrackerConfig", "renderCombatTracker", "clearDebug", "lineIntersectWall", "pointToTokenIntersectWall", "getCreatureCover", "getVisibility", "clearConditionals", "showConditionals", "showAllConditionals", "hasStandardCover", "getTokenData", "isConcealed", "inBrightLight", "getActorToken", "isProne", "getCoverEffect", "getConditionalCover", "getValidTokens", "validateTokens", "getSceneSetting", "isUndetected", "hoverToken", "pasteToken", "updateToken", "deleteToken", "controlToken", "renderChatMessage", "renderCheckModifiersDialog"]
}
